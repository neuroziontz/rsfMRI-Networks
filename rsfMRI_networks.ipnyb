{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os, math, sys\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import nibabel as nib\n",
    "import scipy.io as sio\n",
    "import scipy\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import glob\n",
    "import datetime\n",
    "from sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet, HuberRegressor\n",
    "import pycasso\n",
    "import random\n",
    "import itertools\n",
    "from pyuoi.linear_model import UoI_Lasso"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(292, 293, 380)"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# load in processed rsfMRI connectivity data\n",
    "#base_dir = '/home/' # run on the cluster\n",
    "base_dir = '/Users/jacob/NeuroCluster/' # run on my laptop\n",
    "#base_dir = '/Users/jacob_ziontz/NeuroCluster/' # run on lab computer\n",
    "conn_dir = os.path.join(base_dir,'jagust','rs_fMRI','CONN','conn_all_rs-fMRI_n380_MNI_20210621','results','firstlevel','MNI_ERC_LC_BF_BN_ICNs_roi2roi_seed2voxel')\n",
    "mat_fname = os.path.join(conn_dir,'resultsROI_Condition001.mat')\n",
    "mat_contents = sio.loadmat(mat_fname)\n",
    "conn_results = mat_contents['Z']\n",
    "conn_results.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "# load in subject info spreadsheet\n",
    "home_dir = os.path.join(base_dir,'jagust','ziontzja','rsfmri_networks')\n",
    "subjinfo_fname = os.path.join(home_dir,'data','BACS_restingstate_scans_edited_20200915.xlsx')\n",
    "subjinfo = pd.read_excel(subjinfo_fname)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "# load in ROI label names\n",
    "labels_fname = os.path.join(conn_dir,'_list_sources.txt')\n",
    "labels = open(labels_fname,'r').read().split('\\n')\n",
    "labels = list(filter(None, labels))\n",
    "# create sensible labels for BN regions\n",
    "BN_labels = []\n",
    "for ii in labels[32:278]:\n",
    "    if len(ii.split())==4:\n",
    "        lab = ii.split()[2][9:]+'_'+ii.split()[3]\n",
    "    elif len(ii.split())==5:\n",
    "        lab = ii.split()[2][9:]+'_'+ii.split()[3]+'_'+ii.split()[4]\n",
    "    BN_labels.append(lab)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SID</th>\n",
       "      <th>BACID</th>\n",
       "      <th>dob</th>\n",
       "      <th>apoe</th>\n",
       "      <th>diagnosis</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>rsfmri_path</th>\n",
       "      <th>rsfmri_scannumber</th>\n",
       "      <th>scandate</th>\n",
       "      <th>scaninterval</th>\n",
       "      <th>tau_scancount</th>\n",
       "      <th>pib_scancount</th>\n",
       "      <th>fdg_scancount</th>\n",
       "      <th>motion_outliers</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>B05-201</td>\n",
       "      <td>BAC218</td>\n",
       "      <td>1933-07-14</td>\n",
       "      <td>E3,E4</td>\n",
       "      <td>Control,Old Control</td>\n",
       "      <td>Female</td>\n",
       "      <td>84.302895</td>\n",
       "      <td>/home/jagust/arda/lblid/B05-201/MRI2_3T_2017-1...</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-11-01</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>B05-201</td>\n",
       "      <td>BAC218</td>\n",
       "      <td>1933-07-14</td>\n",
       "      <td>E3,E4</td>\n",
       "      <td>Control,Old Control</td>\n",
       "      <td>Female</td>\n",
       "      <td>84.305633</td>\n",
       "      <td>/home/jagust/arda/lblid/B05-201/MRI3_3T_2017-1...</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-11-02</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>B05-216</td>\n",
       "      <td>BAC001</td>\n",
       "      <td>1941-09-01</td>\n",
       "      <td>E3,E3</td>\n",
       "      <td>Control,Old Control</td>\n",
       "      <td>Female</td>\n",
       "      <td>76.075484</td>\n",
       "      <td>/home/jagust/arda/lblid/B05-216/MRI2_3T_2017-0...</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-09-28</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>B05-216</td>\n",
       "      <td>BAC001</td>\n",
       "      <td>1941-09-01</td>\n",
       "      <td>E3,E3</td>\n",
       "      <td>Control,Old Control</td>\n",
       "      <td>Female</td>\n",
       "      <td>76.143932</td>\n",
       "      <td>/home/jagust/arda/lblid/B05-216/MRI3_3T_2017-1...</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-10-23</td>\n",
       "      <td>25.0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>B05-216</td>\n",
       "      <td>BAC001</td>\n",
       "      <td>1941-09-01</td>\n",
       "      <td>E3,E3</td>\n",
       "      <td>Control,Old Control</td>\n",
       "      <td>Female</td>\n",
       "      <td>76.146670</td>\n",
       "      <td>/home/jagust/arda/lblid/B05-216/MRI4_3T_2017-1...</td>\n",
       "      <td>3</td>\n",
       "      <td>2017-10-24</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>375</th>\n",
       "      <td>B19-259</td>\n",
       "      <td>BAC832</td>\n",
       "      <td>1993-11-09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Female</td>\n",
       "      <td>24.824603</td>\n",
       "      <td>/home/jagust/arda/lblid/B19-259/MRI_3T_2018-09...</td>\n",
       "      <td>1</td>\n",
       "      <td>2018-09-06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>376</th>\n",
       "      <td>B19-259</td>\n",
       "      <td>BAC832</td>\n",
       "      <td>1993-11-09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Female</td>\n",
       "      <td>24.827341</td>\n",
       "      <td>/home/jagust/arda/lblid/B19-259/MRI2_3T_2018-0...</td>\n",
       "      <td>2</td>\n",
       "      <td>2018-09-07</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377</th>\n",
       "      <td>B88-276</td>\n",
       "      <td>BAC794</td>\n",
       "      <td>1947-04-02</td>\n",
       "      <td>E3,E3</td>\n",
       "      <td>Control, Old Control</td>\n",
       "      <td>Female</td>\n",
       "      <td>70.985715</td>\n",
       "      <td>/home/jagust/arda/lblid/B88-276/MRI_3T_2018-03...</td>\n",
       "      <td>1</td>\n",
       "      <td>2018-03-27</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378</th>\n",
       "      <td>B88-276</td>\n",
       "      <td>BAC794</td>\n",
       "      <td>1947-04-02</td>\n",
       "      <td>E3,E3</td>\n",
       "      <td>Control, Old Control</td>\n",
       "      <td>Female</td>\n",
       "      <td>71.010356</td>\n",
       "      <td>/home/jagust/arda/lblid/B88-276/MRI2_3T_2018-0...</td>\n",
       "      <td>2</td>\n",
       "      <td>2018-04-05</td>\n",
       "      <td>9.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>37.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>B88-276</td>\n",
       "      <td>BAC794</td>\n",
       "      <td>1947-04-02</td>\n",
       "      <td>E3,E3</td>\n",
       "      <td>Control, Old Control</td>\n",
       "      <td>Female</td>\n",
       "      <td>71.013094</td>\n",
       "      <td>/home/jagust/arda/lblid/B88-276/MRI3_3T_2018-0...</td>\n",
       "      <td>3</td>\n",
       "      <td>2018-04-06</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>380 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         SID   BACID        dob    apoe             diagnosis  gender  \\\n",
       "0    B05-201  BAC218 1933-07-14  E3,E4    Control,Old Control  Female   \n",
       "1    B05-201  BAC218 1933-07-14  E3,E4    Control,Old Control  Female   \n",
       "2    B05-216  BAC001 1941-09-01  E3,E3    Control,Old Control  Female   \n",
       "3    B05-216  BAC001 1941-09-01  E3,E3    Control,Old Control  Female   \n",
       "4    B05-216  BAC001 1941-09-01  E3,E3    Control,Old Control  Female   \n",
       "..       ...     ...        ...     ...                   ...     ...   \n",
       "375  B19-259  BAC832 1993-11-09     NaN                   NaN  Female   \n",
       "376  B19-259  BAC832 1993-11-09     NaN                   NaN  Female   \n",
       "377  B88-276  BAC794 1947-04-02  E3,E3   Control, Old Control  Female   \n",
       "378  B88-276  BAC794 1947-04-02  E3,E3   Control, Old Control  Female   \n",
       "379  B88-276  BAC794 1947-04-02  E3,E3   Control, Old Control  Female   \n",
       "\n",
       "           age                                        rsfmri_path  \\\n",
       "0    84.302895  /home/jagust/arda/lblid/B05-201/MRI2_3T_2017-1...   \n",
       "1    84.305633  /home/jagust/arda/lblid/B05-201/MRI3_3T_2017-1...   \n",
       "2    76.075484  /home/jagust/arda/lblid/B05-216/MRI2_3T_2017-0...   \n",
       "3    76.143932  /home/jagust/arda/lblid/B05-216/MRI3_3T_2017-1...   \n",
       "4    76.146670  /home/jagust/arda/lblid/B05-216/MRI4_3T_2017-1...   \n",
       "..         ...                                                ...   \n",
       "375  24.824603  /home/jagust/arda/lblid/B19-259/MRI_3T_2018-09...   \n",
       "376  24.827341  /home/jagust/arda/lblid/B19-259/MRI2_3T_2018-0...   \n",
       "377  70.985715  /home/jagust/arda/lblid/B88-276/MRI_3T_2018-03...   \n",
       "378  71.010356  /home/jagust/arda/lblid/B88-276/MRI2_3T_2018-0...   \n",
       "379  71.013094  /home/jagust/arda/lblid/B88-276/MRI3_3T_2018-0...   \n",
       "\n",
       "     rsfmri_scannumber   scandate  scaninterval  tau_scancount  pib_scancount  \\\n",
       "0                    1 2017-11-01           NaN              2              4   \n",
       "1                    2 2017-11-02           1.0              2              4   \n",
       "2                    1 2017-09-28           NaN              2              4   \n",
       "3                    2 2017-10-23          25.0              2              4   \n",
       "4                    3 2017-10-24           1.0              2              4   \n",
       "..                 ...        ...           ...            ...            ...   \n",
       "375                  1 2018-09-06           NaN              0              0   \n",
       "376                  2 2018-09-07           1.0              0              0   \n",
       "377                  1 2018-03-27           NaN              1              1   \n",
       "378                  2 2018-04-05           9.0              1              1   \n",
       "379                  3 2018-04-06           1.0              1              1   \n",
       "\n",
       "     fdg_scancount  motion_outliers  \n",
       "0                2              8.0  \n",
       "1                2             11.0  \n",
       "2                2              6.0  \n",
       "3                2              7.0  \n",
       "4                2             13.0  \n",
       "..             ...              ...  \n",
       "375              0              2.0  \n",
       "376              0             16.0  \n",
       "377              0              9.0  \n",
       "378              0             37.0  \n",
       "379              0             12.0  \n",
       "\n",
       "[380 rows x 15 columns]"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get number of motion outliers for each scan\n",
    "motionda_fname = os.path.join(base_dir,'jagust','ziontzja','restingstate_dataorg','data','motion_spreadsheets','rsfMRI_Motion_Outliers.xlsx')\n",
    "motionda = pd.read_excel(motionda_fname)\n",
    "motionda = pd.wide_to_long(motionda, stubnames='Rest', i='Subject', j='rsfmri_scannumber')\n",
    "motionda = motionda[motionda.Rest.notna()]\n",
    "motionda['motion_outliers'] = motionda.Rest\n",
    "motionda = motionda.reset_index()\n",
    "motionda['SID'] = motionda.Subject.str.replace(\"'\",\"\")\n",
    "motionda = motionda[['SID','rsfmri_scannumber','motion_outliers']]\n",
    "subjinfo = pd.merge(subjinfo, motionda, on=['SID','rsfmri_scannumber'], how='left')\n",
    "subjinfo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "B05-201\n",
      "B05-201\n",
      "B05-216\n",
      "B05-216\n",
      "B05-216\n",
      "B06-203\n",
      "B06-203\n",
      "B06-203\n",
      "B06-204\n",
      "no tau data for B06-204\n",
      "B06-217\n",
      "no tau data for B06-217\n",
      "B06-235\n",
      "B07-227\n",
      "B07-227\n",
      "B07-227\n",
      "B07-227\n",
      "B07-237\n",
      "B07-238\n",
      "B07-242\n",
      "B07-242\n",
      "B07-242\n",
      "B07-243\n",
      "B07-276\n",
      "B07-277\n",
      "B07-277\n",
      "B07-277\n",
      "B07-277\n",
      "B08-207\n",
      "B08-207\n",
      "B08-207\n",
      "B08-221\n",
      "B08-221\n",
      "B08-223\n",
      "B08-223\n",
      "B08-223\n",
      "B08-223\n",
      "B08-223\n",
      "B08-224\n",
      "B08-224\n",
      "B08-224\n",
      "B08-247\n",
      "B08-247\n",
      "B09-210\n",
      "no tau data for B09-210\n",
      "B09-211\n",
      "B09-211\n",
      "B09-216\n",
      "B09-216\n",
      "B09-216\n",
      "B09-277\n",
      "B09-277\n",
      "B09-277\n",
      "B10-282\n",
      "B10-282\n",
      "B10-298\n",
      "B10-306\n",
      "B10-306\n",
      "B10-311\n",
      "B10-313\n",
      "B11-211\n",
      "B11-211\n",
      "B11-213\n",
      "B11-213\n",
      "B11-213\n",
      "B11-232\n",
      "B12-202\n",
      "B12-202\n",
      "B12-206\n",
      "no tau data for B12-206\n",
      "B12-208\n",
      "no tau data for B12-208\n",
      "B12-209\n",
      "B12-226\n",
      "B12-226\n",
      "B12-276\n",
      "B12-277\n",
      "B12-305\n",
      "B12-305\n",
      "B12-316\n",
      "B12-332\n",
      "B12-332\n",
      "B12-332\n",
      "B12-332\n",
      "B12-335\n",
      "no tau data for B12-335\n",
      "B12-340\n",
      "B12-348\n",
      "no tau data for B12-348\n",
      "B13-202\n",
      "B13-204\n",
      "B13-205\n",
      "B13-207\n",
      "B13-220\n",
      "B13-225\n",
      "B13-225\n",
      "B13-227\n",
      "B13-227\n",
      "B13-227\n",
      "B13-238\n",
      "B13-238\n",
      "B13-238\n",
      "B13-245\n",
      "B13-252\n",
      "no tau data for B13-252\n",
      "B13-264\n",
      "B13-264\n",
      "B13-267\n",
      "B13-280\n",
      "B13-280\n",
      "B13-283\n",
      "no tau data for B13-283\n",
      "B13-284\n",
      "B13-284\n",
      "B13-284\n",
      "B13-288\n",
      "B13-289\n",
      "B13-289\n",
      "B13-289\n",
      "B13-293\n",
      "B13-293\n",
      "B13-293\n",
      "B13-304\n",
      "B13-304\n",
      "B13-307\n",
      "B13-307\n",
      "B13-313\n",
      "B13-313\n",
      "B13-313\n",
      "B13-317\n",
      "B13-317\n",
      "B13-317\n",
      "B13-317\n",
      "B13-317\n",
      "B13-318\n",
      "B13-318\n",
      "B13-318\n",
      "B13-318\n",
      "B13-318\n",
      "B13-318\n",
      "B13-319\n",
      "B13-321\n",
      "B13-341\n",
      "B13-341\n",
      "B13-341\n",
      "B13-341\n",
      "B13-341\n",
      "B13-349\n",
      "B13-349\n",
      "B13-349\n",
      "B13-349\n",
      "B13-352\n",
      "B13-362\n",
      "B13-362\n",
      "B13-362\n",
      "B13-362\n",
      "B13-378\n",
      "no tau data for B13-378\n",
      "B14-002\n",
      "no tau data for B14-002\n",
      "B14-003\n",
      "no tau data for B14-003\n",
      "B14-004\n",
      "no tau data for B14-004\n",
      "B14-008\n",
      "no tau data for B14-008\n",
      "B14-009\n",
      "no tau data for B14-009\n",
      "B14-010\n",
      "no tau data for B14-010\n",
      "B14-011\n",
      "no tau data for B14-011\n",
      "B14-012\n",
      "no tau data for B14-012\n",
      "B14-287\n",
      "B14-292\n",
      "B14-295\n",
      "B14-295\n",
      "B14-295\n",
      "B14-299\n",
      "no tau data for B14-299\n",
      "B14-299\n",
      "no tau data for B14-299\n",
      "B14-299\n",
      "no tau data for B14-299\n",
      "B14-299\n",
      "no tau data for B14-299\n",
      "B15-003\n",
      "no tau data for B15-003\n",
      "B15-004\n",
      "no tau data for B15-004\n",
      "B15-005\n",
      "no tau data for B15-005\n",
      "B15-006\n",
      "no tau data for B15-006\n",
      "B15-007\n",
      "no tau data for B15-007\n",
      "B15-008\n",
      "no tau data for B15-008\n",
      "B15-009\n",
      "no tau data for B15-009\n",
      "B15-228\n",
      "B15-234\n",
      "B15-235\n",
      "B15-238\n",
      "no tau data for B15-238\n",
      "B15-253\n",
      "no tau data for B15-253\n",
      "B15-296\n",
      "no tau data for B15-296\n",
      "B15-315\n",
      "B15-315\n",
      "B15-315\n",
      "B15-319\n",
      "B16-001\n",
      "no tau data for B16-001\n",
      "B16-002\n",
      "no tau data for B16-002\n",
      "B16-003\n",
      "no tau data for B16-003\n",
      "B16-004\n",
      "no tau data for B16-004\n",
      "B16-005\n",
      "no tau data for B16-005\n",
      "B16-005\n",
      "no tau data for B16-005\n",
      "B16-006\n",
      "no tau data for B16-006\n",
      "B16-220\n",
      "B16-220\n",
      "B16-220\n",
      "B16-247\n",
      "B16-247\n",
      "B16-247\n",
      "B16-247\n",
      "B16-255\n",
      "no tau data for B16-255\n",
      "B16-262\n",
      "B16-262\n",
      "B16-264\n",
      "B16-264\n",
      "B16-269\n",
      "B16-269\n",
      "B16-273\n",
      "B16-275\n",
      "B16-282\n",
      "B16-282\n",
      "B16-282\n",
      "B16-282\n",
      "B16-298\n",
      "B16-298\n",
      "B16-298\n",
      "B16-298\n",
      "B16-313\n",
      "B16-315\n",
      "B16-315\n",
      "B16-322\n",
      "no tau data for B16-322\n",
      "B16-322\n",
      "no tau data for B16-322\n",
      "B16-322\n",
      "no tau data for B16-322\n",
      "B17-001\n",
      "no tau data for B17-001\n",
      "B17-001\n",
      "no tau data for B17-001\n",
      "B17-002\n",
      "no tau data for B17-002\n",
      "B17-002\n",
      "no tau data for B17-002\n",
      "B17-003\n",
      "no tau data for B17-003\n",
      "B17-003\n",
      "no tau data for B17-003\n",
      "B17-004\n",
      "no tau data for B17-004\n",
      "B17-005\n",
      "no tau data for B17-005\n",
      "B17-006\n",
      "no tau data for B17-006\n",
      "B17-007\n",
      "no tau data for B17-007\n",
      "B17-007\n",
      "no tau data for B17-007\n",
      "B17-008\n",
      "no tau data for B17-008\n",
      "B17-008\n",
      "no tau data for B17-008\n",
      "B17-009\n",
      "no tau data for B17-009\n",
      "B17-010\n",
      "no tau data for B17-010\n",
      "B17-010\n",
      "no tau data for B17-010\n",
      "B17-010\n",
      "no tau data for B17-010\n",
      "B17-011\n",
      "no tau data for B17-011\n",
      "B17-012\n",
      "no tau data for B17-012\n",
      "B17-205\n",
      "B17-218\n",
      "B17-226\n",
      "no tau data for B17-226\n",
      "B17-226\n",
      "no tau data for B17-226\n",
      "B17-231\n",
      "B17-231\n",
      "B17-235\n",
      "B17-235\n",
      "B17-240\n",
      "B17-240\n",
      "B17-240\n",
      "B17-244\n",
      "B17-244\n",
      "B17-244\n",
      "B17-244\n",
      "B17-248\n",
      "B17-248\n",
      "B17-251\n",
      "B17-251\n",
      "B17-252\n",
      "B17-252\n",
      "B17-260\n",
      "B17-260\n",
      "B17-260\n",
      "B17-260\n",
      "B17-262\n",
      "B17-262\n",
      "B17-262\n",
      "B17-266\n",
      "B17-266\n",
      "B17-269\n",
      "B17-269\n",
      "B17-269\n",
      "B17-269\n",
      "B17-271\n",
      "B17-271\n",
      "B17-271\n",
      "B17-272\n",
      "B17-272\n",
      "B17-272\n",
      "B17-272\n",
      "B17-273\n",
      "B17-273\n",
      "B17-284\n",
      "B17-284\n",
      "B17-284\n",
      "B17-285\n",
      "B17-285\n",
      "B17-288\n",
      "B17-288\n",
      "B17-288\n",
      "B17-288\n",
      "B17-291\n",
      "no tau data for B17-291\n",
      "B17-292\n",
      "B17-292\n",
      "B17-293\n",
      "B17-293\n",
      "B17-293\n",
      "B17-295\n",
      "B17-295\n",
      "B17-295\n",
      "B17-296\n",
      "B17-296\n",
      "B17-296\n",
      "B17-301\n",
      "B17-301\n",
      "B17-301\n",
      "B17-301\n",
      "B17-303\n",
      "B17-303\n",
      "B17-303\n",
      "B18-001\n",
      "no tau data for B18-001\n",
      "B18-002\n",
      "no tau data for B18-002\n",
      "B18-003\n",
      "no tau data for B18-003\n",
      "B18-004\n",
      "no tau data for B18-004\n",
      "B18-005\n",
      "no tau data for B18-005\n",
      "B18-006\n",
      "no tau data for B18-006\n",
      "B18-006\n",
      "no tau data for B18-006\n",
      "B18-007\n",
      "no tau data for B18-007\n",
      "B18-007\n",
      "no tau data for B18-007\n",
      "B18-007\n",
      "no tau data for B18-007\n",
      "B18-009\n",
      "no tau data for B18-009\n",
      "B18-009\n",
      "no tau data for B18-009\n",
      "B18-010\n",
      "no tau data for B18-010\n",
      "B18-010\n",
      "no tau data for B18-010\n",
      "B18-201\n",
      "B18-201\n",
      "B18-202\n",
      "B18-202\n",
      "B18-208\n",
      "no tau data for B18-208\n",
      "B18-208\n",
      "no tau data for B18-208\n",
      "B18-208\n",
      "no tau data for B18-208\n",
      "B18-232\n",
      "B18-234\n",
      "B18-234\n",
      "B18-252\n",
      "B18-252\n",
      "B18-252\n",
      "B18-254\n",
      "no tau data for B18-254\n",
      "B18-255\n",
      "no tau data for B18-255\n",
      "B18-255\n",
      "no tau data for B18-255\n",
      "B18-255\n",
      "no tau data for B18-255\n",
      "B18-264\n",
      "B18-264\n",
      "B18-270\n",
      "no tau data for B18-270\n",
      "B19-001\n",
      "no tau data for B19-001\n",
      "B19-001\n",
      "no tau data for B19-001\n",
      "B19-002\n",
      "no tau data for B19-002\n",
      "B19-002\n",
      "no tau data for B19-002\n",
      "B19-003\n",
      "no tau data for B19-003\n",
      "B19-003\n",
      "no tau data for B19-003\n",
      "B19-204\n",
      "no tau data for B19-204\n",
      "B19-204\n",
      "no tau data for B19-204\n",
      "B19-214\n",
      "B19-214\n",
      "B19-216\n",
      "no tau data for B19-216\n",
      "B19-216\n",
      "no tau data for B19-216\n",
      "B19-216\n",
      "no tau data for B19-216\n",
      "B19-217\n",
      "B19-217\n",
      "B19-218\n",
      "B19-218\n",
      "B19-225\n",
      "no tau data for B19-225\n",
      "B19-225\n",
      "no tau data for B19-225\n",
      "B19-225\n",
      "no tau data for B19-225\n",
      "B19-228\n",
      "no tau data for B19-228\n",
      "B19-232\n",
      "no tau data for B19-232\n",
      "B19-232\n",
      "no tau data for B19-232\n",
      "B19-232\n",
      "no tau data for B19-232\n",
      "B19-239\n",
      "no tau data for B19-239\n",
      "B19-239\n",
      "no tau data for B19-239\n",
      "B19-239\n",
      "no tau data for B19-239\n",
      "B19-251\n",
      "B19-251\n",
      "B19-254\n",
      "no tau data for B19-254\n",
      "B19-254\n",
      "no tau data for B19-254\n",
      "B19-254\n",
      "no tau data for B19-254\n",
      "B19-259\n",
      "no tau data for B19-259\n",
      "B19-259\n",
      "no tau data for B19-259\n",
      "B88-276\n",
      "B88-276\n",
      "B88-276\n"
     ]
    }
   ],
   "source": [
    "# source tau PET values from squid closest in time to each rs scan\n",
    "metaROI_idxs = ['1006', '2006', # entorhinal\n",
    "                '1016', '2016', # parahippocampal\n",
    "                '1007', '2007', # fusiform\n",
    "                '18', '54', # amygdala\n",
    "                '1015', '2015', # middle temporal\n",
    "                '1009', '2009'] # inferior temporal\n",
    "\n",
    "taurs_diff = []\n",
    "taupath = []\n",
    "metaROItau_vals = []\n",
    "metaROItau_vals_PVC = []\n",
    "\n",
    "for index, row in subjinfo[:].iterrows():\n",
    "    sub = row['SID']\n",
    "    print(sub)\n",
    "    rs_date = row['scandate']\n",
    "    taupet_dirs = glob.glob(os.path.join(base_dir,'jagust','xnat','squid','bacs',sub,'PET*FTP_LBL_recon')) # list tau pet directories for each subeject\n",
    "    if len(taupet_dirs)>0:\n",
    "        # compute time between resting state scan and tau scan and select directory closest in time\n",
    "        datedict = {}\n",
    "        for taudir in taupet_dirs:    \n",
    "            taupet_datestr = os.path.basename(taudir).split('_')[1]\n",
    "            taupet_date = datetime.datetime.strptime(taupet_datestr, '%Y-%m-%d')\n",
    "            diff = (taupet_date - rs_date).total_seconds()/86400 # difference in days between rsfMRI scan and tau scan\n",
    "            datedict[diff] = taudir\n",
    "        mindiff = min(datedict, key=abs)\n",
    "        taurs_diff.append(mindiff)\n",
    "        closest_taudir = os.path.basename(datedict[mindiff])\n",
    "        taupath.append(closest_taudir)\n",
    "        # read in spreadsheet with tau PET data\n",
    "        tau_fname = os.path.join(base_dir,'jagust','xnat','squid','bacs',sub,closest_taudir,'analysis','roi_info_suvr.csv')\n",
    "        if os.path.isfile(tau_fname):\n",
    "            tauda = pd.read_csv(tau_fname)\n",
    "            metaROItau = np.mean(tauda[metaROI_idxs], axis=1)\n",
    "            metaROItau_vals.append(float(metaROItau))\n",
    "        else:\n",
    "            metaROItau_vals.append(np.nan)\n",
    "        # read in spreadsheet with tau PET PVC data\n",
    "        tau_pvc_fname = os.path.join(base_dir,'jagust','xnat','squid','bacs',sub,closest_taudir,'analysis','roi_info_suvr_PVC.csv')\n",
    "        if os.path.isfile(tau_pvc_fname):\n",
    "            tauda = pd.read_csv(tau_pvc_fname)\n",
    "            metaROItau_pvc = np.mean(tauda[metaROI_idxs], axis=1)\n",
    "            metaROItau_vals_PVC.append(float(metaROItau_pvc))\n",
    "        else:\n",
    "            metaROItau_vals_PVC.append(np.nan)\n",
    "    else:\n",
    "        print('no tau data for '+sub)\n",
    "        taurs_diff.append(np.nan)\n",
    "        taupath.append(np.nan)\n",
    "        metaROItau_vals.append(np.nan)\n",
    "        metaROItau_vals_PVC.append(np.nan)\n",
    "\n",
    "subjinfo['taurs_diff'] = taurs_diff\n",
    "subjinfo['taupet_path'] = taupath\n",
    "subjinfo['metaROI_FTP_SUVR'] = metaROItau_vals\n",
    "subjinfo['metaROI_FTP_SUVR_PVC'] = metaROItau_vals_PVC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "B05-201\n",
      "B05-201\n",
      "B05-216\n",
      "B05-216\n",
      "B05-216\n",
      "B06-203\n",
      "B06-203\n",
      "B06-203\n",
      "B06-204\n",
      "B06-217\n",
      "B06-235\n",
      "B07-227\n",
      "B07-227\n",
      "B07-227\n",
      "B07-227\n",
      "B07-237\n",
      "B07-238\n",
      "B07-242\n",
      "B07-242\n",
      "B07-242\n",
      "B07-243\n",
      "B07-276\n",
      "B07-277\n",
      "B07-277\n",
      "B07-277\n",
      "B07-277\n",
      "B08-207\n",
      "B08-207\n",
      "B08-207\n",
      "B08-221\n",
      "B08-221\n",
      "B08-223\n",
      "B08-223\n",
      "B08-223\n",
      "B08-223\n",
      "B08-223\n",
      "B08-224\n",
      "B08-224\n",
      "B08-224\n",
      "B08-247\n",
      "B08-247\n",
      "B09-210\n",
      "B09-211\n",
      "B09-211\n",
      "B09-216\n",
      "B09-216\n",
      "B09-216\n",
      "B09-277\n",
      "B09-277\n",
      "B09-277\n",
      "B10-282\n",
      "B10-282\n",
      "B10-298\n",
      "B10-306\n",
      "B10-306\n",
      "B10-311\n",
      "B10-313\n",
      "B11-211\n",
      "B11-211\n",
      "B11-213\n",
      "B11-213\n",
      "B11-213\n",
      "B11-232\n",
      "B12-202\n",
      "B12-202\n",
      "B12-206\n",
      "B12-208\n",
      "no amyloid data for B12-208\n",
      "B12-209\n",
      "B12-226\n",
      "B12-226\n",
      "B12-276\n",
      "B12-277\n",
      "B12-305\n",
      "B12-305\n",
      "B12-316\n",
      "B12-332\n",
      "B12-332\n",
      "B12-332\n",
      "B12-332\n",
      "B12-335\n",
      "B12-340\n",
      "B12-348\n",
      "B13-202\n",
      "B13-204\n",
      "B13-205\n",
      "B13-207\n",
      "B13-220\n",
      "B13-225\n",
      "B13-225\n",
      "B13-227\n",
      "B13-227\n",
      "B13-227\n",
      "B13-238\n",
      "B13-238\n",
      "B13-238\n",
      "B13-245\n",
      "B13-252\n",
      "B13-264\n",
      "B13-264\n",
      "B13-267\n",
      "B13-280\n",
      "B13-280\n",
      "B13-283\n",
      "B13-284\n",
      "B13-284\n",
      "B13-284\n",
      "B13-288\n",
      "B13-289\n",
      "B13-289\n",
      "B13-289\n",
      "B13-293\n",
      "B13-293\n",
      "B13-293\n",
      "B13-304\n",
      "B13-304\n",
      "B13-307\n",
      "B13-307\n",
      "B13-313\n",
      "B13-313\n",
      "B13-313\n",
      "B13-317\n",
      "B13-317\n",
      "B13-317\n",
      "B13-317\n",
      "B13-317\n",
      "B13-318\n",
      "B13-318\n",
      "B13-318\n",
      "B13-318\n",
      "B13-318\n",
      "B13-318\n",
      "B13-319\n",
      "B13-321\n",
      "B13-341\n",
      "B13-341\n",
      "B13-341\n",
      "B13-341\n",
      "B13-341\n",
      "B13-349\n",
      "B13-349\n",
      "B13-349\n",
      "B13-349\n",
      "B13-352\n",
      "B13-362\n",
      "B13-362\n",
      "B13-362\n",
      "B13-362\n",
      "B13-378\n",
      "B14-002\n",
      "no amyloid data for B14-002\n",
      "B14-003\n",
      "no amyloid data for B14-003\n",
      "B14-004\n",
      "no amyloid data for B14-004\n",
      "B14-008\n",
      "no amyloid data for B14-008\n",
      "B14-009\n",
      "no amyloid data for B14-009\n",
      "B14-010\n",
      "no amyloid data for B14-010\n",
      "B14-011\n",
      "no amyloid data for B14-011\n",
      "B14-012\n",
      "no amyloid data for B14-012\n",
      "B14-287\n",
      "B14-292\n",
      "no amyloid data for B14-292\n",
      "B14-295\n",
      "B14-295\n",
      "B14-295\n",
      "B14-299\n",
      "no amyloid data for B14-299\n",
      "B14-299\n",
      "no amyloid data for B14-299\n",
      "B14-299\n",
      "no amyloid data for B14-299\n",
      "B14-299\n",
      "no amyloid data for B14-299\n",
      "B15-003\n",
      "no amyloid data for B15-003\n",
      "B15-004\n",
      "no amyloid data for B15-004\n",
      "B15-005\n",
      "no amyloid data for B15-005\n",
      "B15-006\n",
      "no amyloid data for B15-006\n",
      "B15-007\n",
      "no amyloid data for B15-007\n",
      "B15-008\n",
      "no amyloid data for B15-008\n",
      "B15-009\n",
      "no amyloid data for B15-009\n",
      "B15-228\n",
      "B15-234\n",
      "no amyloid data for B15-234\n",
      "B15-235\n",
      "no amyloid data for B15-235\n",
      "B15-238\n",
      "no amyloid data for B15-238\n",
      "B15-253\n",
      "no amyloid data for B15-253\n",
      "B15-296\n",
      "B15-315\n",
      "B15-315\n",
      "B15-315\n",
      "B15-319\n",
      "B16-001\n",
      "no amyloid data for B16-001\n",
      "B16-002\n",
      "no amyloid data for B16-002\n",
      "B16-003\n",
      "no amyloid data for B16-003\n",
      "B16-004\n",
      "no amyloid data for B16-004\n",
      "B16-005\n",
      "no amyloid data for B16-005\n",
      "B16-005\n",
      "no amyloid data for B16-005\n",
      "B16-006\n",
      "no amyloid data for B16-006\n",
      "B16-220\n",
      "B16-220\n",
      "B16-220\n",
      "B16-247\n",
      "B16-247\n",
      "B16-247\n",
      "B16-247\n",
      "B16-255\n",
      "B16-262\n",
      "B16-262\n",
      "B16-264\n",
      "B16-264\n",
      "B16-269\n",
      "B16-269\n",
      "B16-273\n",
      "B16-275\n",
      "B16-282\n",
      "B16-282\n",
      "B16-282\n",
      "B16-282\n",
      "B16-298\n",
      "B16-298\n",
      "B16-298\n",
      "B16-298\n",
      "B16-313\n",
      "B16-315\n",
      "B16-315\n",
      "B16-322\n",
      "no amyloid data for B16-322\n",
      "B16-322\n",
      "no amyloid data for B16-322\n",
      "B16-322\n",
      "no amyloid data for B16-322\n",
      "B17-001\n",
      "no amyloid data for B17-001\n",
      "B17-001\n",
      "no amyloid data for B17-001\n",
      "B17-002\n",
      "no amyloid data for B17-002\n",
      "B17-002\n",
      "no amyloid data for B17-002\n",
      "B17-003\n",
      "no amyloid data for B17-003\n",
      "B17-003\n",
      "no amyloid data for B17-003\n",
      "B17-004\n",
      "no amyloid data for B17-004\n",
      "B17-005\n",
      "no amyloid data for B17-005\n",
      "B17-006\n",
      "no amyloid data for B17-006\n",
      "B17-007\n",
      "no amyloid data for B17-007\n",
      "B17-007\n",
      "no amyloid data for B17-007\n",
      "B17-008\n",
      "no amyloid data for B17-008\n",
      "B17-008\n",
      "no amyloid data for B17-008\n",
      "B17-009\n",
      "no amyloid data for B17-009\n",
      "B17-010\n",
      "no amyloid data for B17-010\n",
      "B17-010\n",
      "no amyloid data for B17-010\n",
      "B17-010\n",
      "no amyloid data for B17-010\n",
      "B17-011\n",
      "no amyloid data for B17-011\n",
      "B17-012\n",
      "no amyloid data for B17-012\n",
      "B17-205\n",
      "B17-218\n",
      "B17-226\n",
      "no amyloid data for B17-226\n",
      "B17-226\n",
      "no amyloid data for B17-226\n",
      "B17-231\n",
      "B17-231\n",
      "B17-235\n",
      "B17-235\n",
      "B17-240\n",
      "B17-240\n",
      "B17-240\n",
      "B17-244\n",
      "B17-244\n",
      "B17-244\n",
      "B17-244\n",
      "B17-248\n",
      "B17-248\n",
      "B17-251\n",
      "B17-251\n",
      "B17-252\n",
      "B17-252\n",
      "B17-260\n",
      "B17-260\n",
      "B17-260\n",
      "B17-260\n",
      "B17-262\n",
      "B17-262\n",
      "B17-262\n",
      "B17-266\n",
      "B17-266\n",
      "B17-269\n",
      "B17-269\n",
      "B17-269\n",
      "B17-269\n",
      "B17-271\n",
      "B17-271\n",
      "B17-271\n",
      "B17-272\n",
      "B17-272\n",
      "B17-272\n",
      "B17-272\n",
      "B17-273\n",
      "B17-273\n",
      "B17-284\n",
      "B17-284\n",
      "B17-284\n",
      "B17-285\n",
      "B17-285\n",
      "B17-288\n",
      "B17-288\n",
      "B17-288\n",
      "B17-288\n",
      "B17-291\n",
      "B17-292\n",
      "B17-292\n",
      "B17-293\n",
      "B17-293\n",
      "B17-293\n",
      "B17-295\n",
      "B17-295\n",
      "B17-295\n",
      "B17-296\n",
      "B17-296\n",
      "B17-296\n",
      "B17-301\n",
      "B17-301\n",
      "B17-301\n",
      "B17-301\n",
      "B17-303\n",
      "B17-303\n",
      "B17-303\n",
      "B18-001\n",
      "no amyloid data for B18-001\n",
      "B18-002\n",
      "no amyloid data for B18-002\n",
      "B18-003\n",
      "no amyloid data for B18-003\n",
      "B18-004\n",
      "no amyloid data for B18-004\n",
      "B18-005\n",
      "no amyloid data for B18-005\n",
      "B18-006\n",
      "no amyloid data for B18-006\n",
      "B18-006\n",
      "no amyloid data for B18-006\n",
      "B18-007\n",
      "no amyloid data for B18-007\n",
      "B18-007\n",
      "no amyloid data for B18-007\n",
      "B18-007\n",
      "no amyloid data for B18-007\n",
      "B18-009\n",
      "no amyloid data for B18-009\n",
      "B18-009\n",
      "no amyloid data for B18-009\n",
      "B18-010\n",
      "no amyloid data for B18-010\n",
      "B18-010\n",
      "no amyloid data for B18-010\n",
      "B18-201\n",
      "B18-201\n",
      "B18-202\n",
      "B18-202\n",
      "B18-208\n",
      "no amyloid data for B18-208\n",
      "B18-208\n",
      "no amyloid data for B18-208\n",
      "B18-208\n",
      "no amyloid data for B18-208\n",
      "B18-232\n",
      "B18-234\n",
      "B18-234\n",
      "B18-252\n",
      "B18-252\n",
      "B18-252\n",
      "B18-254\n",
      "no amyloid data for B18-254\n",
      "B18-255\n",
      "no amyloid data for B18-255\n",
      "B18-255\n",
      "no amyloid data for B18-255\n",
      "B18-255\n",
      "no amyloid data for B18-255\n",
      "B18-264\n",
      "B18-264\n",
      "B18-270\n",
      "no amyloid data for B18-270\n",
      "B19-001\n",
      "no amyloid data for B19-001\n",
      "B19-001\n",
      "no amyloid data for B19-001\n",
      "B19-002\n",
      "no amyloid data for B19-002\n",
      "B19-002\n",
      "no amyloid data for B19-002\n",
      "B19-003\n",
      "no amyloid data for B19-003\n",
      "B19-003\n",
      "no amyloid data for B19-003\n",
      "B19-204\n",
      "B19-204\n",
      "B19-214\n",
      "B19-214\n",
      "B19-216\n",
      "no amyloid data for B19-216\n",
      "B19-216\n",
      "no amyloid data for B19-216\n",
      "B19-216\n",
      "no amyloid data for B19-216\n",
      "B19-217\n",
      "B19-217\n",
      "B19-218\n",
      "B19-218\n",
      "B19-225\n",
      "no amyloid data for B19-225\n",
      "B19-225\n",
      "no amyloid data for B19-225\n",
      "B19-225\n",
      "no amyloid data for B19-225\n",
      "B19-228\n",
      "no amyloid data for B19-228\n",
      "B19-232\n",
      "no amyloid data for B19-232\n",
      "B19-232\n",
      "no amyloid data for B19-232\n",
      "B19-232\n",
      "no amyloid data for B19-232\n",
      "B19-239\n",
      "no amyloid data for B19-239\n",
      "B19-239\n",
      "no amyloid data for B19-239\n",
      "B19-239\n",
      "no amyloid data for B19-239\n",
      "B19-251\n",
      "B19-251\n",
      "B19-254\n",
      "no amyloid data for B19-254\n",
      "B19-254\n",
      "no amyloid data for B19-254\n",
      "B19-254\n",
      "no amyloid data for B19-254\n",
      "B19-259\n",
      "no amyloid data for B19-259\n",
      "B19-259\n",
      "no amyloid data for B19-259\n",
      "B88-276\n",
      "B88-276\n",
      "B88-276\n"
     ]
    }
   ],
   "source": [
    "# source amyloid PET values from squid closest in time to each rs scan\n",
    "abrs_diff = []\n",
    "meancortical_abeta_vals = []\n",
    "\n",
    "for index, row in subjinfo[:].iterrows():\n",
    "    sub = row['SID']\n",
    "    print(sub)\n",
    "    rs_date = row['scandate']\n",
    "    abpet_dirs = glob.glob(os.path.join(base_dir,'jagust','xnat','squid','bacs',sub,'PET*PIB_LBL_recon')) # list amyloid pet directories for each subeject\n",
    "    if len(abpet_dirs)>0:\n",
    "        # compute time between resting state scan and amyloid scan and select directory closest in time\n",
    "        datedict = {}\n",
    "        for abdir in abpet_dirs:    \n",
    "            abpet_datestr = os.path.basename(abdir).split('_')[1]\n",
    "            abpet_date = datetime.datetime.strptime(abpet_datestr, '%Y-%m-%d')\n",
    "            diff = (abpet_date - rs_date).total_seconds()/86400 # difference in days between rsfMRI scan and tau scan\n",
    "            datedict[diff] = abdir\n",
    "        mindiff = min(datedict, key=abs)\n",
    "        abrs_diff.append(mindiff)\n",
    "        closest_abdir = os.path.basename(datedict[mindiff])\n",
    "        # read in spreadsheet with tau PET PVC data\n",
    "        amyloid_index_fname = os.path.join(base_dir,'jagust','xnat','squid','bacs',sub,closest_abdir,'analysis','amyloid_index_dvr.csv')\n",
    "        if os.path.isfile(amyloid_index_fname):\n",
    "            abda = pd.read_csv(amyloid_index_fname)\n",
    "            meancortical_abeta_dvr = abda.columns[0]\n",
    "            meancortical_abeta_vals.append(float(meancortical_abeta_dvr))\n",
    "        else:\n",
    "            meancortical_abeta_vals.append(np.nan)\n",
    "    else:\n",
    "        print('no amyloid data for '+sub)\n",
    "        abrs_diff.append(np.nan)\n",
    "        meancortical_abeta_vals.append(np.nan)\n",
    "\n",
    "subjinfo['abrs_diff'] = abrs_diff\n",
    "subjinfo['mean_cortical_pib'] = meancortical_abeta_vals"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "## select network definition cohorts\n",
    "def get_networks_idx(sub): # select one scan per subject\n",
    "    if sub['taurs_diff'].isnull().all(): # if no tau PET\n",
    "        return sub['motion_outliers'].idxmin()\n",
    "    elif sub['taurs_diff'].all() > 365: # or if no tau PET within 6 months\n",
    "        return sub['motion_outliers'].idxmin() # select scan with fewest motion outliers\n",
    "    else: # otherwise\n",
    "        return sub['taurs_diff'].idxmin() # select rsfMRI scan closest in time to a tau PET scan\n",
    "\n",
    "networks_idx = subjinfo.groupby('SID').apply(get_networks_idx)\n",
    "networks_df = subjinfo.loc[networks_idx]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "no cog data for B14-002\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "no cog data for B14-008\n",
      "no cog data for B14-009\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "no cog data for B15-006\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "no cog data for B18-001\n",
      "no cog data for B18-002\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "no cog data for B18-009\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n",
      "['bac_id', 'session_number', 'neuropsych test date', 'age at session', 'lifestyle factors', 'gds', 'mmse', 'cog act interview total', 'cai age 6', 'cai age 12', 'cai age 18', 'cai age 40', 'cai past', 'cai now', 'cog act adulthood', 'cog act adulthood: reading', 'finger tapping', 'taps per sec r', 'taps per sec l', 'taps per sec br', 'taps per sec bl', 'inter tap interval r', 'inter tap interval l', 'inter tap interval br', 'inter tap interval bl', 'wisconsin card sorting test', 'wcs total correct', 'wcs perseverative responses', 'wcs nonperseverative errors', 'wcs perseverative errors', 'wcs % perseverative errors', 'wcs categories', 'wcs % conceptual level responses', 'wcs failure to maintain set', 'cvlt', 'cvlt 1-5 fr', 'cvlt sdfr', 'cvlt sdcr', 'cvlt ldfr', 'cvlt ldcr', 'cvlt total intrus', 'cvlt total reps', 'cvlt rec hits', 'cvlt rec false positives', 'trail making', 'trail a', 'trail b', 'trail b minus a', 'stroop', 'stroop correct in 60 s', 'stroop comparison (s)', 'stroop uncorrected errors', 'stroop self-corr errors', 'listening span', 'ls level', 'ls total recalled', 'ls incorrect resp', 'ls recall levels 3-5', 'verbal fluency', 'phonemic fluency', 'fas total', 'fas repetitions', 'fas rule violations', 'category fluency', 'vegetables total', 'vegetables repetitions', 'vegetables rule violations', 'animals total', 'animals repetition', 'animals rule violations', 'total category', 'boston naming test', '# correct', '# of stim cues given', '# corr with stim cues', '# corr with phon cues', '# corr with mc', 'bnt total', 'wais iii', 'vocabulary', 'arithmetic', 'digit symbol', 'digit span', 'ds forward', 'ds backward', 'ds total', 'wms iii', 'mental control', 'verbal paired associates', 'vpa score', 'vpa learning slope', 'logical memory', 'lm a plus b1', 'lm learning slope', 'lm total recall', 'lm delay a', 'lm delay b', 'lm delay total', 'visual reproduction', 'vri recall total', 'vrii recall total', 'vr recognition total', 'vr % retention', 'self appraisals %', 'sa: digit span', 'sa: vr post-delay', 'sa: cvlt post-delay', 'sa: stroop', 'sa: verbal fluency', 'sa: category fluency', 'sa: listening span', 'session notes', 'bis attention', 'bis cog instability', 'bis motor', 'bis perseverance', 'bis self control', 'bis cog complexity', 'bis |attentional|', 'bis |motor|', 'bis |nonplanning|', 'b5 agreeableness', 'b5 conscientiousness', 'b5 extraversion', 'b5 neurotisism', 'b5 openness', 'leq young adult', 'leq midlife', 'leq latelife', 'leq overall', 'nufface naming', 'nufface recog', 'nufface tot', 'cesd', 'disturbance total', 'duration total', 'efficiency total', 'psqi global', 'psqi duration', 'psqi disturbance', 'psqi latency', 'psqi daytime dysfucntion', 'psqi efficiency', 'psqi quality', 'psqi meds', 'brsq', 'amnart']\n"
     ]
    }
   ],
   "source": [
    "## get cognitive data for network subjects ##\n",
    "\n",
    "# save cognitive data for all subjects to dictionary\n",
    "cog_tests = {'cvlt sdfr':[],'cvlt ldfr':[],'vri recall total':[],'vrii recall total':[], #episodic memory\n",
    "             'cvlt rec false positives':[],'logical memory':[], # additional memory measures\n",
    "             'ds total':[], 'mmse':[], # general measures\n",
    "             'trail a':[], 'trail b':[], 'stroop correct in 60 s':[], 'digit symbol':[], # executive function\n",
    "             'sa: cvlt post-delay':[]} # working memory\n",
    "cog_diff = []\n",
    "prosp_cogdirs = []\n",
    "\n",
    "# save difference in time between rs scan and cog visit to list\n",
    "for sub in networks_df['SID'][:]:\n",
    "    rs_date = networks_df['scandate'][networks_df['SID']==sub].iloc[0]\n",
    "    cog_dirs = glob.glob(os.path.join(base_dir,'jagust','xnat','squid','bacs',sub,'COG*')) # list of directories with cognitive data for each subject\n",
    "    # compute time between resting state scan and cognitive score and select directory closest in time\n",
    "    datedict = {}\n",
    "    for dir in cog_dirs:\n",
    "        cog_datestr = os.path.basename(dir).split('_')[-1]\n",
    "        cog_date = datetime.datetime.strptime(cog_datestr, '%Y-%m-%d')\n",
    "        diff = (cog_date - rs_date) # difference in days between rsfMRI scan and cog visit\n",
    "        datedict[diff] = dir\n",
    "    if datedict:\n",
    "        mindiff = min(datedict, key=abs)\n",
    "        cog_diff.append(mindiff)\n",
    "        closest_cogdir = os.path.basename(datedict[mindiff])\n",
    "        #read in spreadsheet with cognitive data\n",
    "        cog_fname = os.path.join(base_dir,'jagust','xnat','squid','bacs',sub,closest_cogdir,'cognitive_test.tab')\n",
    "        cogda = pd.read_csv(cog_fname, sep='\\t')\n",
    "        print(list(cogda.columns))\n",
    "        for testname in cog_tests.keys():\n",
    "            score = cogda[testname].iloc[0]\n",
    "            cog_tests[testname].append(score)\n",
    "        # track closest cog test and all prospective cog visits\n",
    "        prosp_cogdirs.append(datedict[mindiff])\n",
    "        for ii in list(datedict.keys()):\n",
    "            if ii.days > 0:\n",
    "                prosp_cogdirs.append(datedict[ii]) # this works but duplicates if nearest cog date is after rs scan\n",
    "    # indicate if missing no cognitive data for an individual\n",
    "    else:\n",
    "        print('no cog data for '+sub)\n",
    "        cog_diff.append(np.nan)\n",
    "        for testname in cog_tests.keys():\n",
    "            cog_tests[testname].append(np.nan)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "455"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "prosp_cogdirs = np.unique(prosp_cogdirs)\n",
    "len(prosp_cogdirs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "# save cognitive data to networks data frame\n",
    "networks_df['cog_timediff'] = cog_diff\n",
    "for testname in cog_tests.keys():\n",
    "    networks_df[testname] = cog_tests[testname]\n",
    "networks_df['gender'] = networks_df['gender'].str.replace(' ','')\n",
    "networks_df['gender_dummy'] = pd.get_dummies(networks_df['gender'])['Male']\n",
    "# previously mergecogda\n",
    "networks_df = networks_df.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          apoe diagnosis  gender\n",
      "count       11        62      68\n",
      "unique       3         7       2\n",
      "top     E3,E3   Control   Female\n",
      "freq         8        20      35\n",
      "          apoe            diagnosis  gender\n",
      "count      115                  120     119\n",
      "unique       4                    8       2\n",
      "top     E3,E3   Control,Old Control  Female\n",
      "freq        72                   89      69\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py:3607: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._set_item(key, value)\n",
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py:3607: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._set_item(key, value)\n"
     ]
    }
   ],
   "source": [
    "# set up dataframes for OA and YA\n",
    "YA_networks_df = networks_df[networks_df.age<40]\n",
    "OA_networks_df = networks_df[networks_df.age>60]\n",
    "for df in [YA_networks_df, OA_networks_df]:\n",
    "    # compute composite cognitive measures\n",
    "    for test in cog_tests.keys():\n",
    "        #testname = test.replace(' ','.')\n",
    "        df[test+'_zscore'] = scipy.stats.zscore(df[test], nan_policy='omit')\n",
    "\n",
    "    ### invert (change sign of) Trails A and B z-scores\n",
    "    df['trail a_zscore_inverted'] = -1*df['trail a_zscore']\n",
    "    df['trail b_zscore_inverted'] = -1*df['trail b_zscore']    \n",
    "\n",
    "    # compute composite neuropsych scores\n",
    "    df['EpisodicMemory'] = df[['cvlt sdfr_zscore','cvlt ldfr_zscore','vri recall total_zscore','vrii recall total_zscore']].mean(axis=1)\n",
    "    df['ExecutiveFunction'] = df[['trail a_zscore_inverted','trail b_zscore_inverted','stroop correct in 60 s_zscore','digit symbol_zscore']].mean(axis=1)\n",
    "\n",
    "    # descriptive statistics\n",
    "    count_vars=['apoe','diagnosis','gender']\n",
    "    describe_vars=['age','mmse','EpisodicMemory']\n",
    "    #print(df[count_vars[0]].value_counts())\n",
    "    print(df[count_vars].describe())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,\n",
       "        13,  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,\n",
       "        26,  27,  28,  29,  30,  31,  33,  34,  35,  36,  37,  38,  39,\n",
       "        41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,  53,\n",
       "        54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,  66,\n",
       "        67,  68,  69,  70,  71,  72,  81,  83,  84,  92,  97,  98,  99,\n",
       "       104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 132, 134,\n",
       "       135, 136, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153,\n",
       "       154, 155, 156, 157, 167, 168, 170, 171, 172, 175, 180, 181, 184,\n",
       "       188, 189, 192])"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.array(OA_networks_df.index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# visualize mean connectivity matrix for all OA in network sample (n=120)\n",
    "BN_OAsubs = conn_results[32:278, 32:278, OA_networks_df.index]\n",
    "BN_OAsubs_mean = np.mean(BN_OAsubs, axis=2)\n",
    "BN_OAsubs_df = pd.DataFrame(data=BN_OAsubs_mean, columns=BN_labels)\n",
    "sns.heatmap(BN_OAsubs_df, annot=False, cmap=\"YlGnBu\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# visualize mean connectivity matrix for all YA in network sample (n=68)\n",
    "BN_YAsubs = conn_results[32:278, 32:278, YA_networks_df.index]\n",
    "BN_YAsubs_mean = np.mean(BN_YAsubs, axis=2)\n",
    "BN_YAsubs_df = pd.DataFrame(data=BN_YAsubs_mean, columns=BN_labels)\n",
    "sns.heatmap(BN_YAsubs_df, annot=False, cmap=\"YlGnBu\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# network definition with selected outcome\n",
    "behav_outcome = 'EpisodicMemory'\n",
    "#behav_outcome = 'ExecutiveFunction'\n",
    "OA_networks_df.hist(behav_outcome, color=\"blue\")\n",
    "plt.xlabel('z-score')\n",
    "\n",
    "# select behavioral outcome measure and remove subjects with missing data from connectivity matrix and df for OA\n",
    "OA_behav = OA_networks_df[behav_outcome]\n",
    "\n",
    "OA_nanrm = ~np.isnan(OA_behav)\n",
    "OA_behav_nanrm = OA_behav[OA_nanrm]\n",
    "BN_OAsubs_nanrm = BN_OAsubs[:,:,OA_nanrm]\n",
    "\n",
    "# OA_networks_df = OA_networks_df[OA_networks_df[behav_outcome].notna()]\n",
    "# OA_networks_df.reset_index(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/scipy/stats/stats.py:4023: PearsonRConstantInputWarning: An input array is constant; the correlation coefficient is not defined.\n",
      "  warnings.warn(PearsonRConstantInputWarning())\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "# positive connections in network: 117.0\n",
      "# negative conections in network: 164.0\n"
     ]
    }
   ],
   "source": [
    "# CPM pearson correlation method to define network\n",
    "thresh = 0.01 # arbitrary p-value threshold\n",
    "all_mats = BN_OAsubs_nanrm\n",
    "train_behav = OA_behav_nanrm\n",
    "\n",
    "fcbehav_rlist = []\n",
    "fcbehav_plist = []\n",
    "\n",
    "train_vcts = np.reshape(all_mats, (len(all_mats)**2, all_mats.shape[2]))\n",
    "train_vcts = np.nan_to_num(train_vcts)\n",
    "\n",
    "# Pearson correlation\n",
    "for edge in range(0, train_vcts.shape[0]):\n",
    "    corrvalue = scipy.stats.pearsonr(train_vcts[edge,:], train_behav)\n",
    "    fcbehav_rlist.append(corrvalue[0])\n",
    "    fcbehav_plist.append(corrvalue[1])\n",
    "    \n",
    "# reshape and threshold to visualize matrix\n",
    "fcbehav_rmatrix = np.reshape(fcbehav_rlist, all_mats.shape[0:2])\n",
    "fcbehav_pmatrix = np.reshape(fcbehav_plist, all_mats.shape[0:2])\n",
    "\n",
    "pearsonNet = np.where(fcbehav_pmatrix < thresh, 1, 0)\n",
    "pos_pearsonNet = np.where((fcbehav_pmatrix < thresh) & (fcbehav_rmatrix > 0), 1, 0)\n",
    "neg_pearsonNet = np.where((fcbehav_pmatrix < thresh) & (fcbehav_rmatrix < 0), 1, 0)\n",
    "\n",
    "# save matrix to csv for BIS\n",
    "np.savetxt(os.path.join(home_dir,'data','network_csvfiles','OA_'+behav_outcome+'_posPearsonNet.csv'), pos_pearsonNet, delimiter=\",\")\n",
    "np.savetxt(os.path.join(home_dir,'data','network_csvfiles','OA_'+behav_outcome+'_negPearsonNet.csv'), neg_pearsonNet, delimiter=\",\")\n",
    "\n",
    "num_edges = len(pearsonNet[pearsonNet==1])/2\n",
    "num_posedges = len(pos_pearsonNet[pos_pearsonNet==1])/2\n",
    "num_negedges = len(neg_pearsonNet[neg_pearsonNet==1])/2\n",
    "\n",
    "print(\"# positive connections in network: \"+str(num_posedges))\n",
    "print(\"# negative conections in network: \"+str(num_negedges))\n",
    "\n",
    "# compute network summary statistic (overall network strength)\n",
    "OA_posmask = np.isin(pos_pearsonNet, 1) # mask of significant connections from Pearson network\n",
    "OA_negmask = np.isin(neg_pearsonNet, 1)\n",
    "pearsonNet_possums = []\n",
    "pearsonNet_negsums = []\n",
    "for subj in range(0, all_mats.shape[2]):\n",
    "    subj_connmat = all_mats[:,:,subj] # each subject's conn matrix\n",
    "    pos_sum = np.nansum(all_mats[:,:,subj][OA_posmask])/2 # sum all connectivity strength values in positive mask\n",
    "    neg_sum = np.nansum(all_mats[:,:,subj][OA_negmask])/2 # sum all connectivity strength values in negative mask\n",
    "    pearsonNet_possums.append(pos_sum)\n",
    "    pearsonNet_negsums.append(neg_sum)\n",
    "\n",
    "# build model on TRAIN subs (OA)\n",
    "OA_fit_pos = np.polyfit(pearsonNet_possums, train_behav, 1)\n",
    "OA_fit_neg = np.polyfit(pearsonNet_negsums, train_behav, 1)\n",
    "# fit with both pos and neg edges\n",
    "X = np.array([pearsonNet_possums,pearsonNet_negsums])\n",
    "X = np.reshape(X, (X.shape), order='F').T\n",
    "OA_fit_both = LinearRegression(fit_intercept=True).fit(X,train_behav)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(0.6752832823047126, 2.699960088509564e-17)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py:3607: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._set_item(key, value)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py:3607: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._set_item(key, value)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(-0.6311950528130869, 1.0926098835443655e-14)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot pos/neg network strength vs. episodic memory\n",
    "OA_networks_df['NSSpos_'+behav_outcome+'pearsonNet'] = pearsonNet_possums\n",
    "print(scipy.stats.pearsonr(OA_networks_df['NSSpos_'+behav_outcome+'pearsonNet'], OA_networks_df[behav_outcome]))\n",
    "sns.jointplot(data=OA_networks_df, x=\"NSSpos_\"+behav_outcome+\"pearsonNet\", y=behav_outcome, color=\"#5F9EB8\", kind=\"reg\")\n",
    "plt.xlim(0, 30)\n",
    "plt.ylim(-3.5, 2.5)\n",
    "plt.show()\n",
    "OA_networks_df['NSSneg_'+behav_outcome+'pearsonNet'] = pearsonNet_negsums\n",
    "print(scipy.stats.pearsonr(OA_networks_df['NSSneg_'+behav_outcome+'pearsonNet'], OA_networks_df[behav_outcome]))\n",
    "sns.jointplot(data=OA_networks_df, x=\"NSSneg_\"+behav_outcome+\"pearsonNet\", y=behav_outcome, color=\"#FCBF30\", kind=\"reg\")\n",
    "plt.xlim(0, 30)\n",
    "plt.ylim(-3.5, 2.5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Positive network involves 103 regions from Brainnetome atlas.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 6000x6000 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(pos_pearsonNet,\n",
    "           #vmin=-1, vmax=1,\n",
    "           xticklabels=BN_labels, yticklabels=BN_labels,\n",
    "           annot=False, cmap=\"YlGnBu\")\n",
    "plt.xticks(rotation=45, ha='right', size=1)\n",
    "plt.yticks(size=1)\n",
    "plt.figure(num=None, figsize=(20,20), dpi=300, facecolor='w', edgecolor='k')\n",
    "\n",
    "# how many regions involved in this network?\n",
    "summat = np.sum(pos_pearsonNet, axis=0)\n",
    "num_nodes = len(summat[summat!=0])\n",
    "print(\"Positive network involves \"+str(num_nodes)+\" regions from Brainnetome atlas.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29890"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# reshape 246*246*120 3D connectivity matrix to nested list for LASSO+BIC in OA\n",
    "all_mats = BN_OAsubs_nanrm\n",
    "OAtrain_LASSO_vcts = []\n",
    "for sub in range(0,all_mats.shape[2]):\n",
    "    subslice = all_mats[:,:,sub] # each slice of cube is a subject's matrix\n",
    "    subtril = np.tril(subslice, k=0) # upper triangle is 0\n",
    "    edgelist = np.reshape(subtril, len(subtril)**2) # reshape each matrix to a list with length 246*246\n",
    "    edgelist = np.nan_to_num(edgelist) # change nan to 0 (so regularized model doesn't fail)\n",
    "    OAtrain_LASSO_vcts.append(edgelist)\n",
    "len(OAtrain_LASSO_vcts[0][OAtrain_LASSO_vcts[0]!=0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import warnings\n",
    "# warnings.filterwarnings(action='ignore')\n",
    "\n",
    "# # sklearn pipeline for filter model + Elastic Net\n",
    "# from sklearn.preprocessing import StandardScaler\n",
    "# from sklearn.model_selection import train_test_split, GridSearchCV, RepeatedKFold, LeaveOneOut, cross_val_score\n",
    "# from sklearn.feature_selection import SelectFpr, f_regression\n",
    "# from sklearn.linear_model import ElasticNet, ElasticNetCV\n",
    "# from sklearn.svm import SVC\n",
    "# from sklearn.pipeline import Pipeline\n",
    "\n",
    "# pred_behav = []\n",
    "\n",
    "# # define data\n",
    "# X = np.asarray(OAtrain_LASSO_vcts)\n",
    "# y = np.asarray(OA_behav_nanrm)\n",
    "# netidxda = OA_networks_df.reset_index(drop=True)\n",
    "\n",
    "# # use LOO CV to test predictive power of ElasticNet model with optimal parameters\n",
    "# for leftout in range(0, len(y)):\n",
    "#     print(\"leaving out subject \"+netidxda['SID'][leftout]+\" (\"+str(leftout+1)+\"/\"+str(len(y))+\")\")\n",
    "#     X_train = np.delete(X, leftout, axis=0)\n",
    "#     y_train = np.delete(y, leftout)\n",
    "#     X_test = X[leftout,:]\n",
    "#     #y_test = y[leftout]\n",
    "    \n",
    "#     # filter model by significance threshold\n",
    "#     threshold = 0.01\n",
    "#     filter_idx = SelectFpr(f_regression, alpha=threshold).fit(X_train, y_train).get_support(indices=True)\n",
    "#     print(len(filter_idx))\n",
    "#     filtered_data = X_train[:,filter_idx]\n",
    "    \n",
    "#     # use CV to find optimal alpha and l1 parameters for ElasticNet model\n",
    "#     cv = RepeatedKFold(n_splits=10, n_repeats=3, random_state=1)\n",
    "#     ratios = np.arange(0.1,1,0.1)\n",
    "#     alphas = [1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 0.0, 1.0, 10.0, 100.0]\n",
    "#     enetcv = ElasticNetCV(l1_ratio=ratios, cv=cv, alphas=alphas).fit(filtered_data, y_train)\n",
    "#     print(enetcv.alpha_, enetcv.l1_ratio_)\n",
    "    \n",
    "#     edges = (len(enetcv.coef_[enetcv.coef_!=0]))\n",
    "#     print(\"Number of edges in training data network: \"+str(edges))\n",
    "#     y_pred = enetcv.predict(X_test[filter_idx].reshape(1, -1))\n",
    "#     pred_behav.append(y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": [
    "# print(scipy.stats.pearsonr(y, pred_behav))\n",
    "# testda={'observed':np.asarray(y),'predicted':np.asarray(pred_behav)}\n",
    "# sns.regplot(data=testda, x='observed', y='predicted', color=\"#5F9EB8\")\n",
    "# plt.xlim(-2.1, 1.8)\n",
    "# plt.ylim(-2.1, 1.8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sparse linear regression.\n",
      "L1regularization via active set identification and coordinate descent. \n",
      "\n",
      "Training is over.\n",
      "# parameters input into model: 30135\n",
      "# positive features in model: 64\n",
      "# negative features in model: 52\n"
     ]
    }
   ],
   "source": [
    "# LASSO+BIC modeling to define network\n",
    "x = OAtrain_LASSO_vcts\n",
    "y = OA_behav_nanrm\n",
    "all_mats = BN_OAsubs_nanrm\n",
    "\n",
    "num_nodes = all_mats.shape[0]\n",
    "input_params = sum(range(num_nodes))\n",
    "\n",
    "LASSOmodel = pycasso.Solver(x, y,\n",
    "                lambdas=(1000, 0.05), \n",
    "                gamma=3.7,\n",
    "                family='gaussian', penalty='l1',\n",
    "                useintercept=False, prec=1e-7, max_ite=1000, verbose=True)\n",
    "LASSOmodel.train()\n",
    "\n",
    "# BIC to assess model fit\n",
    "BICs = []\n",
    "# iterate over each lambda value from the model, compute BIC to determine best-fitting model\n",
    "for ii in range(len(LASSOmodel.coef()['df'])):\n",
    "    y_true = y # observed values\n",
    "    y_pred = LASSOmodel.predict(lambdidx=ii) # values predicted by model at this lambda\n",
    "    n = len(y) # sample size\n",
    "    #LL = np.sum(np.log(y_true*y_pred + (1-y_true)*(1-y_pred))) # bad log likelihood calculation\n",
    "    LL = -n/2 * (1 + np.log(np.mean((y_true - y_pred)**2))) # log likelihood from Ankit\n",
    "    nzf = LASSOmodel.coef()['df'][ii] # number of nonzero features in the fitted model\n",
    "\n",
    "    # BIC definition\n",
    "    BIC = -2*LL + np.log(n)*nzf\n",
    "    BICs.append(BIC)\n",
    "\n",
    "bestfit_lidx = np.argmin(BICs) # select model with lowest BIC\n",
    "#bestfit_lidx = np.argmax(SCADmodel.coef()['df']) # select model with greatest number of features\n",
    "bestfit_nzf = LASSOmodel.coef()['df'][bestfit_lidx]\n",
    "beta_list = LASSOmodel.coef()['beta'][bestfit_lidx]\n",
    "bestfit_posfeat = len(beta_list[beta_list>0])\n",
    "bestfit_negfeat = len(beta_list[beta_list<0])\n",
    "print(\"# parameters input into model: \"+str(input_params))\n",
    "print(\"# positive features in model: \"+str(bestfit_posfeat))\n",
    "print(\"# negative features in model: \"+str(bestfit_negfeat))\n",
    "\n",
    "bmatrix = np.reshape(beta_list, all_mats.shape[0:2])\n",
    "bmatrix_posmask = np.where(bmatrix > 0, 1, 0)\n",
    "bmatrix_negmask = np.where(bmatrix < 0, 1, 0)\n",
    "# copy lower triangle to upper for BIS viewer\n",
    "bmatrix_posNet = bmatrix_posmask + bmatrix_posmask.T - np.diag(np.diag(bmatrix_posmask))\n",
    "bmatrix_negNet = bmatrix_negmask + bmatrix_negmask.T - np.diag(np.diag(bmatrix_negmask))\n",
    "np.savetxt(os.path.join(home_dir,'data','network_csvfiles','OA_'+behav_outcome+'LASSONet_pos.csv'), bmatrix_posNet, delimiter=\",\")\n",
    "np.savetxt(os.path.join(home_dir,'data','network_csvfiles','OA_'+behav_outcome+'LASSONet_neg.csv'), bmatrix_negNet, delimiter=\",\")\n",
    "\n",
    "# compute network summary statistic (overall network strength)\n",
    "OA_EMLASSO_posmask = np.isin(bmatrix_posmask, 1)\n",
    "OA_EMLASSO_negmask = np.isin(bmatrix_negmask, 1)\n",
    "LASSONet_possums = []\n",
    "LASSONet_negsums = []\n",
    "for subj in range(0, all_mats.shape[2]):\n",
    "    subj_connmat = all_mats[:,:,subj] # each subject's conn matrix\n",
    "    pos_sum = np.sum(all_mats[:,:,subj][OA_EMLASSO_posmask])/2\n",
    "    neg_sum = np.sum(all_mats[:,:,subj][OA_EMLASSO_negmask])/2\n",
    "    LASSONet_possums.append(pos_sum)\n",
    "    LASSONet_negsums.append(neg_sum)\n",
    "    \n",
    "# build model on TRAIN subs (OA)\n",
    "OA_fit_pos = np.polyfit(LASSONet_possums, y, 1)\n",
    "OA_fit_neg = np.polyfit(LASSONet_negsums, y, 1)\n",
    "# fit with both pos and neg edges\n",
    "X = np.array([LASSONet_possums, LASSONet_negsums])\n",
    "X = np.reshape(X, (X.shape), order='F').T\n",
    "OA_fit_both = LinearRegression(fit_intercept=True).fit(X,y)     "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='# nonzero features in model', ylabel='BIC'>"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "d = {'BIC':BICs,\n",
    "     '# nonzero features in model':LASSOmodel.coef()['df'],\n",
    "     'model #':range(0,len(LASSOmodel.coef()['df']))}\n",
    "df = pd.DataFrame(data=d)\n",
    "sns.scatterplot(data=df, x=\"# nonzero features in model\", y=\"BIC\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py:3607: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._set_item(key, value)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(0.5897786820459106, 1.3639094046954615e-12)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(-0.6210946231665669, 3.787423612620607e-14)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py:3607: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._set_item(key, value)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "OA_networks_df['NSSpos_'+behav_outcome+'LASSONet'] = LASSONet_possums\n",
    "print(scipy.stats.pearsonr(OA_networks_df['NSSpos_'+behav_outcome+'LASSONet'], OA_networks_df[behav_outcome]))\n",
    "sns.jointplot(data=OA_networks_df, x=\"NSSpos_\"+behav_outcome+\"LASSONet\", y=behav_outcome, color=\"#5F9EB8\", kind=\"reg\")\n",
    "plt.xlim(0, 30)\n",
    "plt.ylim(-3.5, 2.5)\n",
    "plt.show()\n",
    "OA_networks_df['NSSneg_'+behav_outcome+'LASSONet'] = LASSONet_negsums\n",
    "print(scipy.stats.pearsonr(OA_networks_df['NSSneg_'+behav_outcome+'LASSONet'], OA_networks_df[behav_outcome]))\n",
    "sns.jointplot(data=OA_networks_df, x=\"NSSneg_\"+behav_outcome+\"LASSONet\", y=behav_outcome, color=\"#FCBF30\", kind=\"reg\")\n",
    "plt.xlim(0, 30)\n",
    "plt.ylim(-3.5, 2.5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Positive network involves 83 regions from Brainnetome atlas.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 6000x6000 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# visualize edges associated with postive and negative non-zero parameters for model with lowest BIC\n",
    "bestfit_lidx = np.argmin(BICs)\n",
    "beta_list = LASSOmodel.coef()['beta'][bestfit_lidx]\n",
    "bmatrix = np.reshape(beta_list, BN_OAsubs_nanrm.shape[0:2])\n",
    "bmatrix_posmask = np.where(bmatrix > 0, 1, 0)\n",
    "bmatrix_negmask = np.where(bmatrix < 0, 1, 0)\n",
    "\n",
    "# copy lower triangle to upper for BIS viewer\n",
    "bmatrix_posNet = bmatrix_posmask + bmatrix_posmask.T - np.diag(np.diag(bmatrix_posmask))\n",
    "bmatrix_negNet = bmatrix_negmask + bmatrix_negmask.T - np.diag(np.diag(bmatrix_negmask))\n",
    "\n",
    "sns.heatmap(bmatrix_posNet,\n",
    "           #vmin=-1, vmax=1,\n",
    "           xticklabels=BN_labels, yticklabels=BN_labels,\n",
    "           annot=False, cmap=\"YlGnBu\")\n",
    "plt.xticks(rotation=45, ha='right', size=1)\n",
    "plt.yticks(size=1)\n",
    "plt.figure(num=None, figsize=(20,20), dpi=300, facecolor='w', edgecolor='k')\n",
    "\n",
    "# how many regions involved in this network?\n",
    "summat = np.sum(bmatrix_posNet, axis=0)\n",
    "num_nodes = len(summat[summat!=0])\n",
    "print(\"Positive network involves \"+str(num_nodes)+\" regions from Brainnetome atlas.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [],
   "source": [
    "# generate nifti of network ROIs\n",
    "import neuromaps\n",
    "roi_indices = np.flatnonzero(summat)\n",
    "\n",
    "#load brainnetome file label and mask with ROIs in network\n",
    "atlas_fname = os.path.join(base_dir,'jagust','ziontzja','restingstate_dataorg','CPM_explore','bioimagesuite_templates','BN_Atlas_246_2mm.nii.gz')\n",
    "atlas_img = nib.load(atlas_fname)\n",
    "atlas_data = atlas_img.get_fdata()\n",
    "mask_data = np.isin(atlas_data, roi_indices)\n",
    "\n",
    "# save results as nifti\n",
    "maskImg = nib.Nifti1Image(1*mask_data, atlas_img.affine)\n",
    "maskImg.set_data_dtype(np.uint8)\n",
    "maskImg_fname = os.path.join(home_dir,'data',behav_outcome+'_LASSONet.nii.gz')\n",
    "nib.save(maskImg, maskImg_fname)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "No such file or no access: '/Users/jacob/NeuroCluster/jagust/ziontzja/rsfmri_networks/data/SPM_voxelwise/EM_NSSpos/tauNSSneg_thresh.nii'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m~/.local/lib/python3.7/site-packages/nibabel/loadsave.py\u001b[0m in \u001b[0;36mload\u001b[0;34m(filename, **kwargs)\u001b[0m\n\u001b[1;32m     41\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 42\u001b[0;31m         \u001b[0mstat_result\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     43\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mOSError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/Users/jacob/NeuroCluster/jagust/ziontzja/rsfmri_networks/data/SPM_voxelwise/EM_NSSpos/tauNSSneg_thresh.nii'",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-87-734c15f2cee6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[0;31m# Mask of voxelwise association between tau and EM strength\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     23\u001b[0m \u001b[0mtauEMnet_thresh_fname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhome_dir\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'data'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'SPM_voxelwise'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'EM_NSSpos'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'tauNSSneg_thresh.nii'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 24\u001b[0;31m \u001b[0mtauEMnet_thresh\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtauEMnet_thresh_fname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     25\u001b[0m \u001b[0mtauEMnet_thresh_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtauEMnet_thresh\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_fdata\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     26\u001b[0m \u001b[0mtauEMnet_thresh\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwhere\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtauEMnet_thresh_data\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.7/site-packages/nibabel/loadsave.py\u001b[0m in \u001b[0;36mload\u001b[0;34m(filename, **kwargs)\u001b[0m\n\u001b[1;32m     42\u001b[0m         \u001b[0mstat_result\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     43\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mOSError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 44\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mFileNotFoundError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"No such file or no access: '%s'\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     45\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mstat_result\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mst_size\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     46\u001b[0m         \u001b[0;32mraise\u001b[0m \u001b[0mImageFileError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Empty file: '%s'\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mfilename\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mFileNotFoundError\u001b[0m: No such file or no access: '/Users/jacob/NeuroCluster/jagust/ziontzja/rsfmri_networks/data/SPM_voxelwise/EM_NSSpos/tauNSSneg_thresh.nii'"
     ]
    }
   ],
   "source": [
    "# Compute dice coefficient between networks\n",
    "def compute_dice_coefficient(mask_1, mask_2):\n",
    "    mask_1 = mask_1.astype(np.bool)\n",
    "    mask_2 = mask_2.astype(np.bool)\n",
    "    volume_sum = mask_1.sum() + mask_2.sum()\n",
    "    if volume_sum == 0:\n",
    "        return np.nan\n",
    "    volume_intersect = (mask_1 & mask_2).sum()\n",
    "    DICE_COE = 2*volume_intersect / volume_sum\n",
    "    return DICE_COE\n",
    "\n",
    "# EM network mask\n",
    "EMnet_mask_fname = os.path.join(home_dir,'data','EpisodicMemory_LASSONet.nii.gz')\n",
    "EMnet_mask = nib.load(EMnet_mask_fname)\n",
    "EMnet_mask_data = EMnet_mask.get_fdata()\n",
    "\n",
    "# EF network mask\n",
    "EFnet_mask_fname = os.path.join(home_dir,'data','ExecutiveFunction_LASSONet.nii.gz')\n",
    "EFnet_mask = nib.load(EFnet_mask_fname)\n",
    "EFnet_mask_data = EFnet_mask.get_fdata()\n",
    "\n",
    "# Mask of voxelwise association between tau and EM strength\n",
    "tauEMnet_thresh_fname = os.path.join(home_dir,'data','SPM_voxelwise','EM_NSSpos','tauNSSneg_thresh.nii')\n",
    "tauEMnet_thresh = nib.load(tauEMnet_thresh_fname)\n",
    "tauEMnet_thresh_data = tauEMnet_thresh.get_fdata()\n",
    "tauEMnet_thresh = np.where(tauEMnet_thresh_data > 0, 1, 0)\n",
    "\n",
    "# Mask of voxelwise association between tau and EF strength\n",
    "tauEFnet_thresh_fname = os.path.join(home_dir,'data','SPM_voxelwise','EF_NSSpos','tauNSSneg_thresh.nii')\n",
    "tauEFnet_thresh = nib.load(tauEFnet_thresh_fname)\n",
    "tauEFnet_thresh_data = tauEFnet_thresh.get_fdata()\n",
    "tauEFnet_thresh = np.where(tauEFnet_thresh_data > 0, 1, 0)\n",
    "\n",
    "compute_dice_coefficient(EMnet_mask_data, EFnet_mask_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [],
   "source": [
    "# ### compute mean BOLD signal within networks as a control ###\n",
    "# net_meanBOLD_signal = list()\n",
    "\n",
    "# Network_meanBOLDd = list()\n",
    "# for sub in OA_networks_df['SID']:\n",
    "#     meanBOLDd_fname = os.path.join(home_dir,'data','images',sub,'func','ds4wcraf_meanBOLD_'+sub+'.nii.gz')\n",
    "#     if os.path.exists(meanBOLDd_fname):\n",
    "#         meanBOLDd_img = nib.load(meanBOLDd_fname)\n",
    "#         meanBOLDd_data = meanBOLDd_img.get_fdata()\n",
    "#         net_meanBOLD = np.mean(meanBOLDd_data[mask_data])\n",
    "#         net_meanBOLD_signal.append(net_meanBOLD)\n",
    "#     else:\n",
    "#         net_meanBOLD_signal.append(np.nan)\n",
    "# OA_networks_df[behav_outcome+'Net_meanBOLD'] = net_meanBOLD_signal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['SFG_7_1_l', 'SFG_7_3_l', 'SFG_7_6_r', 'SFG_7_7_l', 'SFG_7_7_r',\n",
       "       'MFG_7_2_r', 'MFG_7_3_l', 'MFG_7_3_r', 'MFG_7_4_l', 'MFG_7_6_l',\n",
       "       'MFG_7_7_l', 'IFG_6_2_r', 'IFG_6_3_r', 'IFG_6_4_l', 'IFG_6_5_l',\n",
       "       'IFG_6_5_r', 'IFG_6_6_l', 'IFG_6_6_r', 'OrG_6_3_l', 'OrG_6_3_r',\n",
       "       'OrG_6_4_l', 'OrG_6_5_l', 'PrG_6_3_l', 'PrG_6_6_l', 'STG_6_3_l',\n",
       "       'STG_6_3_r', 'STG_6_4_r', 'STG_6_5_r', 'STG_6_6_l', 'MTG_4_1_r',\n",
       "       'MTG_4_2_r', 'MTG_4_3_r', 'MTG_4_4_l', 'ITG_7_1_r', 'ITG_7_2_l',\n",
       "       'ITG_7_2_r', 'ITG_7_5_r', 'FuG_3_2_l', 'FuG_3_3_r', 'PhG_6_2_l',\n",
       "       'PhG_6_4_r', 'PhG_6_6_l', 'pSTS_2_1_l', 'pSTS_2_1_r', 'SPL_5_5_l',\n",
       "       'IPL_6_1_l', 'IPL_6_1_r', 'IPL_6_2_l', 'IPL_6_2_r', 'IPL_6_3_l',\n",
       "       'IPL_6_4_r', 'IPL_6_5_l', 'IPL_6_6_l', 'IPL_6_6_r', 'PCun_4_1_l',\n",
       "       'PCun_4_1_r', 'PCun_4_2_l', 'PCun_4_3_r', 'PCun_4_4_r',\n",
       "       'INS_6_2_l', 'INS_6_3_l', 'INS_6_4_l', 'CG_7_1_l', 'CG_7_2_r',\n",
       "       'CG_7_4_l', 'CG_7_5_l', 'CG_7_6_l', 'CG_7_7_r', 'MVOcC__5_2_r',\n",
       "       'MVOcC__5_3_l', 'MVOcC__5_3_r', 'MVOcC__5_5_l', 'MVOcC__5_5_r',\n",
       "       'LOcC_4_1_l', 'LOcC_4_1_r', 'LOcC_4_2_l', 'LOcC_4_3_l',\n",
       "       'LOcC_4_4_l', 'LOcC_2_1_l', 'Hipp_2_1_r', 'Hipp_2_2_r', 'BG_6_5_l',\n",
       "       'Tha_8_4_l'], dtype='<U12')"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# list of Brainnetome ROIs included in network\n",
    "BNlab = np.array(BN_labels)\n",
    "BNlab[roi_indices]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(-0.2243837925416901, 0.01374822559116687)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(0.0353601311272556, 0.701411044096233)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# correlation between network strength and age\n",
    "print(scipy.stats.pearsonr(OA_networks_df['NSSpos_'+behav_outcome+'LASSONet'], OA_networks_df['age']))\n",
    "sns.regplot(data=OA_networks_df, x=\"NSSpos_\"+behav_outcome+\"LASSONet\", y=\"age\", color=\"#5F9EB8\")\n",
    "plt.show()\n",
    "\n",
    "print(scipy.stats.pearsonr(OA_networks_df['NSSneg_'+behav_outcome+'LASSONet'], OA_networks_df['age']))\n",
    "sns.regplot(data=OA_networks_df, x=\"NSSneg_\"+behav_outcome+\"LASSONet\", y=\"age\", color=\"#FCBF30\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'z-score')"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# network definition with selected outcome\n",
    "behav_outcome = 'ExecutiveFunction'\n",
    "OA_networks_df.hist(behav_outcome, color=\"yellow\")\n",
    "plt.xlabel('z-score')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [],
   "source": [
    "# select behavioral outcome measure and remove subjects with missing data from connectivity matrix and df for OA\n",
    "OA_behav = OA_networks_df[behav_outcome]\n",
    "\n",
    "OA_nanrm = ~np.isnan(OA_behav)\n",
    "OA_behav_nanrm = OA_behav[OA_nanrm]\n",
    "BN_OAsubs_nanrm = BN_OAsubs[:,:,OA_nanrm]\n",
    "\n",
    "# OA_networks_df = OA_networks_df[OA_networks_df[behav_outcome].notna()]\n",
    "# OA_networks_df.reset_index(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/scipy/stats/stats.py:4023: PearsonRConstantInputWarning: An input array is constant; the correlation coefficient is not defined.\n",
      "  warnings.warn(PearsonRConstantInputWarning())\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "# positive connections in network: 20.0\n",
      "# negative conections in network: 151.0\n"
     ]
    }
   ],
   "source": [
    "# CPM pearson correlation method to define network\n",
    "thresh = 0.01 # arbitrary p-value threshold\n",
    "all_mats = BN_OAsubs_nanrm\n",
    "train_behav = OA_behav_nanrm\n",
    "\n",
    "fcbehav_rlist = []\n",
    "fcbehav_plist = []\n",
    "\n",
    "train_vcts = np.reshape(all_mats, (len(all_mats)**2, all_mats.shape[2]))\n",
    "train_vcts = np.nan_to_num(train_vcts)\n",
    "\n",
    "# Pearson correlation\n",
    "for edge in range(0, train_vcts.shape[0]):\n",
    "    corrvalue = scipy.stats.pearsonr(train_vcts[edge,:], train_behav)\n",
    "    fcbehav_rlist.append(corrvalue[0])\n",
    "    fcbehav_plist.append(corrvalue[1])\n",
    "    \n",
    "# reshape and threshold to visualize matrix\n",
    "fcbehav_rmatrix = np.reshape(fcbehav_rlist, all_mats.shape[0:2])\n",
    "fcbehav_pmatrix = np.reshape(fcbehav_plist, all_mats.shape[0:2])\n",
    "\n",
    "pearsonNet = np.where(fcbehav_pmatrix < thresh, 1, 0)\n",
    "pos_pearsonNet = np.where((fcbehav_pmatrix < thresh) & (fcbehav_rmatrix > 0), 1, 0)\n",
    "neg_pearsonNet = np.where((fcbehav_pmatrix < thresh) & (fcbehav_rmatrix < 0), 1, 0)\n",
    "\n",
    "# save matrix to csv for BIS\n",
    "np.savetxt(os.path.join(home_dir,'data','network_csvfiles','OA_'+behav_outcome+'_posPearsonNet.csv'), pos_pearsonNet, delimiter=\",\")\n",
    "np.savetxt(os.path.join(home_dir,'data','network_csvfiles','OA_'+behav_outcome+'_negPearsonNet.csv'), neg_pearsonNet, delimiter=\",\")\n",
    "\n",
    "num_edges = len(pearsonNet[pearsonNet==1])/2\n",
    "num_posedges = len(pos_pearsonNet[pos_pearsonNet==1])/2\n",
    "num_negedges = len(neg_pearsonNet[neg_pearsonNet==1])/2\n",
    "\n",
    "print(\"# positive connections in network: \"+str(num_posedges))\n",
    "print(\"# negative conections in network: \"+str(num_negedges))\n",
    "\n",
    "# compute network summary statistic (overall network strength)\n",
    "OA_posmask = np.isin(pos_pearsonNet, 1) # mask of significant connections from Pearson network\n",
    "OA_negmask = np.isin(neg_pearsonNet, 1)\n",
    "pearsonNet_possums = []\n",
    "pearsonNet_negsums = []\n",
    "for subj in range(0, all_mats.shape[2]):\n",
    "    subj_connmat = all_mats[:,:,subj] # each subject's conn matrix\n",
    "    pos_sum = np.nansum(all_mats[:,:,subj][OA_posmask])/2 # sum all connectivity strength values in positive mask\n",
    "    neg_sum = np.nansum(all_mats[:,:,subj][OA_negmask])/2 # sum all connectivity strength values in negative mask\n",
    "    pearsonNet_possums.append(pos_sum)\n",
    "    pearsonNet_negsums.append(neg_sum)\n",
    "\n",
    "# build model on TRAIN subs (OA)\n",
    "OA_fit_pos = np.polyfit(pearsonNet_possums, train_behav, 1)\n",
    "OA_fit_neg = np.polyfit(pearsonNet_negsums, train_behav, 1)\n",
    "# fit with both pos and neg edges\n",
    "X = np.array([pearsonNet_possums,pearsonNet_negsums])\n",
    "X = np.reshape(X, (X.shape), order='F').T\n",
    "OA_fit_both = LinearRegression(fit_intercept=True).fit(X,train_behav)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(0.6687660147080418, 6.99406197652652e-17)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py:3607: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._set_item(key, value)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(-0.6138649055480864, 8.9741196168599e-14)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py:3607: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._set_item(key, value)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot pos/neg network strength vs. episodic memory\n",
    "OA_networks_df['NSSpos_'+behav_outcome+'pearsonNet'] = pearsonNet_possums\n",
    "print(scipy.stats.pearsonr(OA_networks_df['NSSpos_'+behav_outcome+'pearsonNet'], OA_networks_df[behav_outcome]))\n",
    "sns.jointplot(data=OA_networks_df, x=\"NSSpos_\"+behav_outcome+\"pearsonNet\", y=behav_outcome, color=\"#5F9EB8\", kind=\"reg\")\n",
    "plt.xlim(0, 30)\n",
    "plt.ylim(-3.5, 2.5)\n",
    "plt.show()\n",
    "\n",
    "OA_networks_df['NSSneg_'+behav_outcome+'pearsonNet'] = pearsonNet_negsums\n",
    "print(scipy.stats.pearsonr(OA_networks_df['NSSneg_'+behav_outcome+'pearsonNet'], OA_networks_df[behav_outcome]))\n",
    "sns.jointplot(data=OA_networks_df, x=\"NSSneg_\"+behav_outcome+\"pearsonNet\", y=behav_outcome, color=\"#FCBF30\", kind=\"reg\")\n",
    "plt.xlim(0, 30)\n",
    "plt.ylim(-3.5, 2.5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 6000x6000 with 0 Axes>"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 6000x6000 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(pos_pearsonNet,\n",
    "           #vmin=-1, vmax=1,\n",
    "           xticklabels=BN_labels, yticklabels=BN_labels,\n",
    "           annot=False, cmap=\"YlGnBu\")\n",
    "plt.xticks(rotation=45, ha='right', size=1)\n",
    "plt.yticks(size=1)\n",
    "plt.figure(num=None, figsize=(20,20), dpi=300, facecolor='w', edgecolor='k')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Positive network involves 31 regions from Brainnetome atlas.\n"
     ]
    }
   ],
   "source": [
    "# how many regions involved in this network?\n",
    "summat = np.sum(pos_pearsonNet, axis=0)\n",
    "num_nodes = len(summat[summat!=0])\n",
    "print(\"Positive network involves \"+str(num_nodes)+\" regions from Brainnetome atlas.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29890"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# reshape 246*246*120 3D connectivity matrix to nested list for LASSO+BIC in OA\n",
    "all_mats = BN_OAsubs_nanrm\n",
    "OAtrain_LASSO_vcts = []\n",
    "for sub in range(0,all_mats.shape[2]):\n",
    "    subslice = all_mats[:,:,sub] # each slice of cube is a subject's matrix\n",
    "    subtril = np.tril(subslice, k=0) # upper triangle is 0\n",
    "    edgelist = np.reshape(subtril, len(subtril)**2) # reshape each matrix to a list with length 246*246\n",
    "    edgelist = np.nan_to_num(edgelist) # change nan to 0 (so regularized model doesn't fail)\n",
    "    OAtrain_LASSO_vcts.append(edgelist)\n",
    "len(OAtrain_LASSO_vcts[0][OAtrain_LASSO_vcts[0]!=0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sparse linear regression.\n",
      "L1regularization via active set identification and coordinate descent. \n",
      "\n",
      "Training is over.\n",
      "# parameters input into model: 30135\n",
      "# positive features in model: 59\n",
      "# negative features in model: 58\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='# nonzero features in model', ylabel='BIC'>"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# LASSO+BIC modeling to define network\n",
    "x = OAtrain_LASSO_vcts\n",
    "y = OA_behav_nanrm\n",
    "all_mats = BN_OAsubs_nanrm\n",
    "\n",
    "num_nodes = all_mats.shape[0]\n",
    "input_params = sum(range(num_nodes))\n",
    "\n",
    "LASSOmodel = pycasso.Solver(x, y,\n",
    "                lambdas=(1000, 0.05), \n",
    "                gamma=3.7,\n",
    "                family='gaussian', penalty='l1',\n",
    "                useintercept=False, prec=1e-7, max_ite=1000, verbose=True)\n",
    "LASSOmodel.train()\n",
    "\n",
    "# BIC to assess model fit\n",
    "BICs = []\n",
    "# iterate over each lambda value from the model, compute BIC to determine best-fitting model\n",
    "for ii in range(len(LASSOmodel.coef()['df'])):\n",
    "    y_true = y # observed values\n",
    "    y_pred = LASSOmodel.predict(lambdidx=ii) # values predicted by model at this lambda\n",
    "    n = len(y) # sample size\n",
    "    #LL = np.sum(np.log(y_true*y_pred + (1-y_true)*(1-y_pred))) # bad log likelihood calculation\n",
    "    LL = -n/2 * (1 + np.log(np.mean((y_true - y_pred)**2))) # log likelihood from Ankit\n",
    "    nzf = LASSOmodel.coef()['df'][ii] # number of nonzero features in the fitted model\n",
    "\n",
    "    # BIC definition\n",
    "    BIC = -2*LL + np.log(n)*nzf\n",
    "    BICs.append(BIC)\n",
    "\n",
    "bestfit_lidx = np.argmin(BICs) # select model with lowest BIC\n",
    "#bestfit_lidx = np.argmax(SCADmodel.coef()['df']) # select model with greatest number of features\n",
    "bestfit_nzf = LASSOmodel.coef()['df'][bestfit_lidx]\n",
    "beta_list = LASSOmodel.coef()['beta'][bestfit_lidx]\n",
    "bestfit_posfeat = len(beta_list[beta_list>0])\n",
    "bestfit_negfeat = len(beta_list[beta_list<0])\n",
    "print(\"# parameters input into model: \"+str(input_params))\n",
    "print(\"# positive features in model: \"+str(bestfit_posfeat))\n",
    "print(\"# negative features in model: \"+str(bestfit_negfeat))\n",
    "\n",
    "bmatrix = np.reshape(beta_list, all_mats.shape[0:2])\n",
    "bmatrix_posmask = np.where(bmatrix > 0, 1, 0)\n",
    "bmatrix_negmask = np.where(bmatrix < 0, 1, 0)\n",
    "# copy lower triangle to upper for BIS viewer\n",
    "bmatrix_posNet = bmatrix_posmask + bmatrix_posmask.T - np.diag(np.diag(bmatrix_posmask))\n",
    "bmatrix_negNet = bmatrix_negmask + bmatrix_negmask.T - np.diag(np.diag(bmatrix_negmask))\n",
    "np.savetxt(os.path.join(home_dir,'data','network_csvfiles','OA_'+behav_outcome+'LASSONet_pos.csv'), bmatrix_posNet, delimiter=\",\")\n",
    "np.savetxt(os.path.join(home_dir,'data','network_csvfiles','OA_'+behav_outcome+'LASSONet_neg.csv'), bmatrix_negNet, delimiter=\",\")\n",
    "\n",
    "# compute network summary statistic (overall network strength)\n",
    "OA_EFLASSO_posmask = np.isin(bmatrix_posmask, 1)\n",
    "OA_EFLASSO_negmask = np.isin(bmatrix_negmask, 1)\n",
    "LASSONet_possums = []\n",
    "LASSONet_negsums = []\n",
    "for subj in range(0, all_mats.shape[2]):\n",
    "    subj_connmat = all_mats[:,:,subj] # each subject's conn matrix\n",
    "    pos_sum = np.sum(all_mats[:,:,subj][OA_EFLASSO_posmask])/2\n",
    "    neg_sum = np.sum(all_mats[:,:,subj][OA_EFLASSO_negmask])/2\n",
    "    LASSONet_possums.append(pos_sum)\n",
    "    LASSONet_negsums.append(neg_sum)\n",
    "    \n",
    "# build model on TRAIN subs (OA)\n",
    "OA_fit_pos = np.polyfit(LASSONet_possums, y, 1)\n",
    "OA_fit_neg = np.polyfit(LASSONet_negsums, y, 1)\n",
    "# fit with both pos and neg edges\n",
    "X = np.array([LASSONet_possums, LASSONet_negsums])\n",
    "X = np.reshape(X, (X.shape), order='F').T\n",
    "OA_fit_both = LinearRegression(fit_intercept=True).fit(X,y)     \n",
    "\n",
    "d = {'BIC':BICs,\n",
    "     '# nonzero features in model':LASSOmodel.coef()['df'],\n",
    "     'model #':range(0,len(LASSOmodel.coef()['df']))}\n",
    "df = pd.DataFrame(data=d)\n",
    "sns.scatterplot(data=df, x=\"# nonzero features in model\", y=\"BIC\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py:3607: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._set_item(key, value)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(0.5336428802519163, 3.4777028669562224e-10)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(-0.6537097514863975, 5.768244723988771e-16)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py:3607: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._set_item(key, value)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "OA_networks_df['NSSpos_'+behav_outcome+'LASSONet'] = LASSONet_possums\n",
    "print(scipy.stats.pearsonr(OA_networks_df['NSSpos_'+behav_outcome+'LASSONet'], OA_networks_df[behav_outcome]))\n",
    "sns.jointplot(data=OA_networks_df, x=\"NSSpos_\"+behav_outcome+\"LASSONet\", y=behav_outcome, color=\"#5F9EB8\", kind=\"reg\")\n",
    "plt.xlim(0, 30)\n",
    "plt.ylim(-3.5, 2.5)\n",
    "plt.show()\n",
    "\n",
    "OA_networks_df['NSSneg_'+behav_outcome+'LASSONet'] = LASSONet_negsums\n",
    "print(scipy.stats.pearsonr(OA_networks_df['NSSneg_'+behav_outcome+'LASSONet'], OA_networks_df[behav_outcome]))\n",
    "sns.jointplot(data=OA_networks_df, x=\"NSSneg_\"+behav_outcome+\"LASSONet\", y=behav_outcome, color=\"#FCBF30\", kind=\"reg\")\n",
    "plt.xlim(0, 30)\n",
    "plt.ylim(-3.5, 2.5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 6000x6000 with 0 Axes>"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 6000x6000 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# visualize edges associated with postive and negative non-zero parameters for model with lowest BIC\n",
    "bestfit_lidx = np.argmin(BICs)\n",
    "beta_list = LASSOmodel.coef()['beta'][bestfit_lidx]\n",
    "bmatrix = np.reshape(beta_list, BN_OAsubs_nanrm.shape[0:2])\n",
    "bmatrix_posmask = np.where(bmatrix > 0, 1, 0)\n",
    "bmatrix_negmask = np.where(bmatrix < 0, 1, 0)\n",
    "\n",
    "# copy lower triangle to upper for BIS viewer\n",
    "bmatrix_posNet = bmatrix_posmask + bmatrix_posmask.T - np.diag(np.diag(bmatrix_posmask))\n",
    "bmatrix_negNet = bmatrix_negmask + bmatrix_negmask.T - np.diag(np.diag(bmatrix_negmask))\n",
    "\n",
    "sns.heatmap(bmatrix_posNet,\n",
    "           #vmin=-1, vmax=1,\n",
    "           xticklabels=BN_labels, yticklabels=BN_labels,\n",
    "           annot=False, cmap=\"YlGnBu\")\n",
    "plt.xticks(rotation=45, ha='right', size=1)\n",
    "plt.yticks(size=1)\n",
    "plt.figure(num=None, figsize=(20,20), dpi=300, facecolor='w', edgecolor='k')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Positive network involves 78 regions from Brainnetome atlas.\n"
     ]
    }
   ],
   "source": [
    "# how many regions involved in this network?\n",
    "summat = np.sum(bmatrix_posNet, axis=0)\n",
    "num_nodes = len(summat[summat!=0])\n",
    "print(\"Positive network involves \"+str(num_nodes)+\" regions from Brainnetome atlas.\")\n",
    "\n",
    "# generate nifti of network ROIs\n",
    "import neuromaps\n",
    "roi_indices = np.flatnonzero(summat)\n",
    "\n",
    "#load brainnetome file label and mask with ROIs in network\n",
    "atlas_fname = os.path.join(base_dir,'jagust','ziontzja','restingstate_dataorg','CPM_explore','bioimagesuite_templates','BN_Atlas_246_2mm.nii.gz')\n",
    "atlas_img = nib.load(atlas_fname)\n",
    "atlas_data = atlas_img.get_fdata()\n",
    "mask_data = np.isin(atlas_data, roi_indices)\n",
    "\n",
    "# save results as nifti\n",
    "maskImg = nib.Nifti1Image(1*mask_data, atlas_img.affine)\n",
    "maskImg.set_data_dtype(np.uint8)\n",
    "maskImg_fname = os.path.join(home_dir,'data',behav_outcome+'_LASSONet.nii.gz')\n",
    "nib.save(maskImg, maskImg_fname)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['SFG_7_3_l', 'SFG_7_3_r', 'SFG_7_4_r', 'SFG_7_7_l', 'MFG_7_1_l',\n",
       "       'MFG_7_1_r', 'MFG_7_2_l', 'MFG_7_2_r', 'MFG_7_3_l', 'MFG_7_3_r',\n",
       "       'MFG_7_4_r', 'MFG_7_5_r', 'MFG_7_6_r', 'MFG_7_7_l', 'IFG_6_1_l',\n",
       "       'IFG_6_1_r', 'IFG_6_2_r', 'IFG_6_5_r', 'IFG_6_6_l', 'OrG_6_1_r',\n",
       "       'OrG_6_2_r', 'OrG_6_4_l', 'OrG_6_6_r', 'PrG_6_1_l', 'PrG_6_3_l',\n",
       "       'PrG_6_6_l', 'STG_6_1_r', 'STG_6_3_r', 'STG_6_4_r', 'STG_6_5_r',\n",
       "       'STG_6_6_l', 'STG_6_6_r', 'MTG_4_4_l', 'ITG_7_1_r', 'ITG_7_2_l',\n",
       "       'ITG_7_2_r', 'ITG_7_5_l', 'FuG_3_2_l', 'PhG_6_4_l', 'PhG_6_4_r',\n",
       "       'PhG_6_6_l', 'PhG_6_6_r', 'SPL_5_1_l', 'SPL_5_5_l', 'SPL_5_5_r',\n",
       "       'IPL_6_2_r', 'IPL_6_3_l', 'IPL_6_4_r', 'PCun_4_1_l', 'PCun_4_1_r',\n",
       "       'PCun_4_2_r', 'PoG_4_2_l', 'PoG_4_3_l', 'INS_6_2_l', 'INS_6_3_l',\n",
       "       'CG_7_1_r', 'CG_7_2_r', 'CG_7_3_r', 'CG_7_4_l', 'CG_7_5_l',\n",
       "       'MVOcC__5_1_r', 'MVOcC__5_2_l', 'MVOcC__5_3_l', 'MVOcC__5_3_r',\n",
       "       'MVOcC__5_5_l', 'LOcC_4_1_l', 'LOcC_4_2_l', 'LOcC_4_2_r',\n",
       "       'LOcC_4_3_r', 'LOcC_2_1_r', 'Amyg_2_1_l', 'Amyg_2_2_r', 'BG_6_2_l',\n",
       "       'BG_6_3_l', 'BG_6_6_l', 'Tha_8_5_l', 'Tha_8_6_r', 'Tha_8_7_l'],\n",
       "      dtype='<U12')"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# BN labels in networks\n",
    "BNlab = np.array(BN_labels)\n",
    "BNlab[roi_indices]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(-0.2471602479262796, 0.011423832495178506)\n",
      "(-0.16240204188730475, 0.09953351903434071)\n",
      "(-0.2243714249547989, 0.022034635355714996)\n",
      "(-0.18811061411480223, 0.055840003512979734)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# generate null distribution of networks with same number of edges\n",
    "bootstrap = 1000 # number of iterations\n",
    "numedge = bestfit_posfeat # number of positive connections from LASSO+BIC\n",
    "input_params = len(OAtrain_LASSO_vcts[0][OAtrain_LASSO_vcts[0]!=0]) # nonzero rsFC connections from Brainnetome\n",
    "\n",
    "tau_nanrm = ~np.isnan(OA_networks_df['metaROI_FTP_SUVR'])\n",
    "\n",
    "cogNSS_corr = []\n",
    "for _ in range(bootstrap):\n",
    "    nullnet_sums = []\n",
    "    # random network with same number of connections as LASSO+BIC\n",
    "    random_idx = random.sample(range(0, input_params), numedge)\n",
    "    nullnet = np.zeros(len(OAtrain_LASSO_vcts[0]))\n",
    "    nullnet[random_idx] = 1\n",
    "    nullnet_matrix = np.reshape(nullnet, BN_OAsubs_nanrm.shape[0:2]) # reshape to 246 x 246 matrix\n",
    "    nullnet_mask = np.isin(nullnet_matrix, 1)\n",
    "    for subj in range(0, BN_OAsubs_nanrm.shape[2]):\n",
    "        subj_connmat = BN_OAsubs_nanrm[:,:,subj] # each subject's conn matrix\n",
    "        pos_sum = np.nansum(BN_OAsubs_nanrm[:,:,subj][nullnet_mask])\n",
    "        nullnet_sums.append(pos_sum)\n",
    "    # subset to only subjects with tau\n",
    "    nullnet_sums = list(itertools.compress(nullnet_sums, tau_nanrm))\n",
    "    rcorr = scipy.stats.pearsonr(nullnet_sums, OA_networks_df['metaROI_FTP_SUVR'][tau_nanrm])[0] # correlation between null NSS and tau\n",
    "    cogNSS_corr.append(rcorr)\n",
    "\n",
    "# compute correlations for observed networks\n",
    "EMLASSONet_corr = scipy.stats.pearsonr(OA_networks_df['metaROI_FTP_SUVR'][tau_nanrm], OA_networks_df['NSSpos_EpisodicMemoryLASSONet'][tau_nanrm])\n",
    "print(EMLASSONet_corr)\n",
    "EFLASSONet_corr = scipy.stats.pearsonr(OA_networks_df['metaROI_FTP_SUVR'][tau_nanrm], OA_networks_df['NSSpos_ExecutiveFunctionLASSONet'][tau_nanrm])\n",
    "print(EFLASSONet_corr)\n",
    "EMpearsonNet_corr = scipy.stats.pearsonr(OA_networks_df['metaROI_FTP_SUVR'][tau_nanrm], OA_networks_df['NSSpos_EpisodicMemorypearsonNet'][tau_nanrm])\n",
    "print(EMpearsonNet_corr)\n",
    "EFpearsonNet_corr = scipy.stats.pearsonr(OA_networks_df['metaROI_FTP_SUVR'][tau_nanrm], OA_networks_df['NSSpos_ExecutiveFunctionpearsonNet'][tau_nanrm])\n",
    "print(EFpearsonNet_corr)\n",
    "\n",
    "# add observed correlations\n",
    "cogNSS_corr.append(EMLASSONet_corr[0])\n",
    "cogNSS_corr.append(EFLASSONet_corr[0])\n",
    "\n",
    "# plot null distribution\n",
    "p1 = sns.histplot(cogNSS_corr, color='grey')\n",
    "for bar in p1.patches: # color values red 2 sd below mean\n",
    "    if bar.get_x() <= np.mean(cogNSS_corr)-2*np.std(cogNSS_corr):\n",
    "        bar.set_facecolor('red')\n",
    "plt.axvline(EMLASSONet_corr[0], color=\"#2a4d69\") # vertical line at observed EM correlation\n",
    "plt.axvline(EFLASSONet_corr[0], color=\"#fbc02d\") # vertical line at observed EF correlation\n",
    "plt.axvline(EMpearsonNet_corr[0], color=\"#adcbe3\") # vertical line at observed EM correlation\n",
    "plt.axvline(EFpearsonNet_corr[0], color=\"#ffeb3b\") # vertical line at observed EF correlation\n",
    "p1.set_xlabel(\"Correlation coefficient (Pearson's r)\", fontsize = 12)\n",
    "p1.set_ylabel(\"Frequency\", fontsize = 12)\n",
    "histfig = p1.figure\n",
    "#histfig.savefig(os.path.join(home_dir,'HAI2023','abstract','figures','nullhist.eps'), format='eps', dpi=1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(-0.2471602479262796, 0.011423832495178506)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(-0.16240204188730475, 0.09953351903434071)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# correlation between network strength and tau\n",
    "tau_nanrm = ~np.isnan(OA_networks_df['metaROI_FTP_SUVR'])\n",
    "\n",
    "print(scipy.stats.pearsonr(OA_networks_df['NSSpos_EpisodicMemoryLASSONet'][tau_nanrm], OA_networks_df['metaROI_FTP_SUVR'][tau_nanrm]))\n",
    "sns.regplot(data=OA_networks_df, x=\"NSSpos_EpisodicMemoryLASSONet\", y=\"metaROI_FTP_SUVR\", color=\"blue\")\n",
    "plt.show()\n",
    "\n",
    "print(scipy.stats.pearsonr(OA_networks_df['NSSpos_ExecutiveFunctionLASSONet'][tau_nanrm], OA_networks_df['metaROI_FTP_SUVR'][tau_nanrm]))\n",
    "sns.regplot(data=OA_networks_df, x=\"NSSpos_ExecutiveFunctionLASSONet\", y=\"metaROI_FTP_SUVR\", color=\"yellow\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SID</th>\n",
       "      <th>BACID</th>\n",
       "      <th>dob</th>\n",
       "      <th>apoe</th>\n",
       "      <th>diagnosis</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>rsfmri_path</th>\n",
       "      <th>rsfmri_scannumber</th>\n",
       "      <th>scandate</th>\n",
       "      <th>...</th>\n",
       "      <th>EpisodicMemory</th>\n",
       "      <th>ExecutiveFunction</th>\n",
       "      <th>NSSpos_EpisodicMemorypearsonNet</th>\n",
       "      <th>NSSneg_EpisodicMemorypearsonNet</th>\n",
       "      <th>NSSpos_EpisodicMemoryLASSONet</th>\n",
       "      <th>NSSneg_EpisodicMemoryLASSONet</th>\n",
       "      <th>NSSpos_ExecutiveFunctionpearsonNet</th>\n",
       "      <th>NSSneg_ExecutiveFunctionpearsonNet</th>\n",
       "      <th>NSSpos_ExecutiveFunctionLASSONet</th>\n",
       "      <th>NSSneg_ExecutiveFunctionLASSONet</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>B05-201</td>\n",
       "      <td>BAC218</td>\n",
       "      <td>1933-07-14</td>\n",
       "      <td>E3,E4</td>\n",
       "      <td>Control,Old Control</td>\n",
       "      <td>Female</td>\n",
       "      <td>84.305633</td>\n",
       "      <td>/home/jagust/arda/lblid/B05-201/MRI3_3T_2017-1...</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-11-02</td>\n",
       "      <td>...</td>\n",
       "      <td>1.622529</td>\n",
       "      <td>1.887222</td>\n",
       "      <td>21.336490</td>\n",
       "      <td>10.796268</td>\n",
       "      <td>12.594240</td>\n",
       "      <td>3.914458</td>\n",
       "      <td>3.768634</td>\n",
       "      <td>-7.934317</td>\n",
       "      <td>10.870096</td>\n",
       "      <td>4.608104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>B05-216</td>\n",
       "      <td>BAC001</td>\n",
       "      <td>1941-09-01</td>\n",
       "      <td>E3,E3</td>\n",
       "      <td>Control,Old Control</td>\n",
       "      <td>Female</td>\n",
       "      <td>76.146670</td>\n",
       "      <td>/home/jagust/arda/lblid/B05-216/MRI4_3T_2017-1...</td>\n",
       "      <td>3</td>\n",
       "      <td>2017-10-24</td>\n",
       "      <td>...</td>\n",
       "      <td>1.070970</td>\n",
       "      <td>0.170330</td>\n",
       "      <td>19.574639</td>\n",
       "      <td>5.967476</td>\n",
       "      <td>9.835915</td>\n",
       "      <td>4.880699</td>\n",
       "      <td>3.671291</td>\n",
       "      <td>9.511992</td>\n",
       "      <td>8.311928</td>\n",
       "      <td>8.021646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>B06-203</td>\n",
       "      <td>BAC071</td>\n",
       "      <td>1941-04-13</td>\n",
       "      <td>E2,E3</td>\n",
       "      <td>Control,Old Control</td>\n",
       "      <td>Female</td>\n",
       "      <td>76.905070</td>\n",
       "      <td>/home/jagust/arda/lblid/B06-203/MRI4_3T_2018-0...</td>\n",
       "      <td>3</td>\n",
       "      <td>2018-03-09</td>\n",
       "      <td>...</td>\n",
       "      <td>0.929646</td>\n",
       "      <td>1.260252</td>\n",
       "      <td>27.015846</td>\n",
       "      <td>4.768256</td>\n",
       "      <td>7.754972</td>\n",
       "      <td>3.886411</td>\n",
       "      <td>2.623458</td>\n",
       "      <td>13.888090</td>\n",
       "      <td>9.408163</td>\n",
       "      <td>5.849725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>B06-204</td>\n",
       "      <td>BAC073</td>\n",
       "      <td>1946-05-13</td>\n",
       "      <td>E3,E3</td>\n",
       "      <td>Control,Old Control</td>\n",
       "      <td>Female</td>\n",
       "      <td>68.195788</td>\n",
       "      <td>/home/jagust/arda/lblid/B06-204/MRI_3T_2014-07...</td>\n",
       "      <td>1</td>\n",
       "      <td>2014-07-23</td>\n",
       "      <td>...</td>\n",
       "      <td>1.346380</td>\n",
       "      <td>-1.033742</td>\n",
       "      <td>22.781566</td>\n",
       "      <td>-0.566205</td>\n",
       "      <td>8.404152</td>\n",
       "      <td>3.266196</td>\n",
       "      <td>-0.212023</td>\n",
       "      <td>21.601388</td>\n",
       "      <td>7.033343</td>\n",
       "      <td>9.011876</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>B06-217</td>\n",
       "      <td>BAC011</td>\n",
       "      <td>1928-02-27</td>\n",
       "      <td>E3,E3</td>\n",
       "      <td>Control,Old Control</td>\n",
       "      <td>Female</td>\n",
       "      <td>86.646543</td>\n",
       "      <td>/home/jagust/arda/lblid/B06-217/MRI_3T_2014-10...</td>\n",
       "      <td>1</td>\n",
       "      <td>2014-10-20</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.750765</td>\n",
       "      <td>0.569836</td>\n",
       "      <td>10.429780</td>\n",
       "      <td>12.438569</td>\n",
       "      <td>5.374082</td>\n",
       "      <td>6.202180</td>\n",
       "      <td>1.109852</td>\n",
       "      <td>15.229474</td>\n",
       "      <td>9.302530</td>\n",
       "      <td>6.197445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>B19-214</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1952-09-29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Control, Old Control</td>\n",
       "      <td>Male</td>\n",
       "      <td>66.572209</td>\n",
       "      <td>/home/jagust/arda/lblid/B19-214/MRI2_3T_2019-0...</td>\n",
       "      <td>2</td>\n",
       "      <td>2019-04-26</td>\n",
       "      <td>...</td>\n",
       "      <td>0.259146</td>\n",
       "      <td>0.972037</td>\n",
       "      <td>21.038294</td>\n",
       "      <td>38.580455</td>\n",
       "      <td>10.209827</td>\n",
       "      <td>7.480688</td>\n",
       "      <td>5.477390</td>\n",
       "      <td>19.598803</td>\n",
       "      <td>10.798565</td>\n",
       "      <td>9.185195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>B19-218</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1948-05-19</td>\n",
       "      <td>E3,E3</td>\n",
       "      <td>Control, Old Control</td>\n",
       "      <td>Male</td>\n",
       "      <td>71.029521</td>\n",
       "      <td>/home/jagust/arda/lblid/B19-218/MRI2_3T_2019-0...</td>\n",
       "      <td>2</td>\n",
       "      <td>2019-05-30</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.745164</td>\n",
       "      <td>-0.283999</td>\n",
       "      <td>6.015006</td>\n",
       "      <td>13.817113</td>\n",
       "      <td>5.663975</td>\n",
       "      <td>6.555113</td>\n",
       "      <td>-0.545515</td>\n",
       "      <td>15.049575</td>\n",
       "      <td>5.981609</td>\n",
       "      <td>7.380884</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188</th>\n",
       "      <td>B19-239</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1932-05-25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Control, Old Control</td>\n",
       "      <td>NaN</td>\n",
       "      <td>86.742370</td>\n",
       "      <td>/home/jagust/arda/lblid/B19-239/MRI_3T_2019-02...</td>\n",
       "      <td>1</td>\n",
       "      <td>2019-02-20</td>\n",
       "      <td>...</td>\n",
       "      <td>1.141878</td>\n",
       "      <td>2.140365</td>\n",
       "      <td>14.464721</td>\n",
       "      <td>12.252824</td>\n",
       "      <td>8.172147</td>\n",
       "      <td>2.740758</td>\n",
       "      <td>3.760909</td>\n",
       "      <td>-16.430028</td>\n",
       "      <td>10.985926</td>\n",
       "      <td>2.297749</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>B19-251</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1941-06-04</td>\n",
       "      <td>E3,E3</td>\n",
       "      <td>Control, Old Control</td>\n",
       "      <td>Male</td>\n",
       "      <td>77.734656</td>\n",
       "      <td>/home/jagust/arda/lblid/B19-251/MRI2_3T_2019-0...</td>\n",
       "      <td>2</td>\n",
       "      <td>2019-02-27</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.313769</td>\n",
       "      <td>-1.176820</td>\n",
       "      <td>27.517780</td>\n",
       "      <td>27.496520</td>\n",
       "      <td>7.121521</td>\n",
       "      <td>7.843655</td>\n",
       "      <td>1.315551</td>\n",
       "      <td>42.550110</td>\n",
       "      <td>8.297273</td>\n",
       "      <td>11.193163</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>192</th>\n",
       "      <td>B88-276</td>\n",
       "      <td>BAC794</td>\n",
       "      <td>1947-04-02</td>\n",
       "      <td>E3,E3</td>\n",
       "      <td>Control, Old Control</td>\n",
       "      <td>Female</td>\n",
       "      <td>71.013094</td>\n",
       "      <td>/home/jagust/arda/lblid/B88-276/MRI3_3T_2018-0...</td>\n",
       "      <td>3</td>\n",
       "      <td>2018-04-06</td>\n",
       "      <td>...</td>\n",
       "      <td>0.174099</td>\n",
       "      <td>0.036600</td>\n",
       "      <td>31.612011</td>\n",
       "      <td>25.789984</td>\n",
       "      <td>9.550849</td>\n",
       "      <td>8.400424</td>\n",
       "      <td>1.872734</td>\n",
       "      <td>34.084611</td>\n",
       "      <td>11.609385</td>\n",
       "      <td>11.379285</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>120 rows × 61 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         SID   BACID        dob    apoe              diagnosis  gender  \\\n",
       "0    B05-201  BAC218 1933-07-14  E3,E4     Control,Old Control  Female   \n",
       "1    B05-216  BAC001 1941-09-01  E3,E3     Control,Old Control  Female   \n",
       "2    B06-203  BAC071 1941-04-13  E2,E3     Control,Old Control  Female   \n",
       "3    B06-204  BAC073 1946-05-13  E3,E3     Control,Old Control  Female   \n",
       "4    B06-217  BAC011 1928-02-27  E3,E3     Control,Old Control  Female   \n",
       "..       ...     ...        ...     ...                    ...     ...   \n",
       "181  B19-214     NaN 1952-09-29     NaN  Control, Old Control     Male   \n",
       "184  B19-218     NaN 1948-05-19  E3,E3   Control, Old Control     Male   \n",
       "188  B19-239     NaN 1932-05-25     NaN  Control, Old Control      NaN   \n",
       "189  B19-251     NaN 1941-06-04  E3,E3   Control, Old Control     Male   \n",
       "192  B88-276  BAC794 1947-04-02  E3,E3    Control, Old Control  Female   \n",
       "\n",
       "           age                                        rsfmri_path  \\\n",
       "0    84.305633  /home/jagust/arda/lblid/B05-201/MRI3_3T_2017-1...   \n",
       "1    76.146670  /home/jagust/arda/lblid/B05-216/MRI4_3T_2017-1...   \n",
       "2    76.905070  /home/jagust/arda/lblid/B06-203/MRI4_3T_2018-0...   \n",
       "3    68.195788  /home/jagust/arda/lblid/B06-204/MRI_3T_2014-07...   \n",
       "4    86.646543  /home/jagust/arda/lblid/B06-217/MRI_3T_2014-10...   \n",
       "..         ...                                                ...   \n",
       "181  66.572209  /home/jagust/arda/lblid/B19-214/MRI2_3T_2019-0...   \n",
       "184  71.029521  /home/jagust/arda/lblid/B19-218/MRI2_3T_2019-0...   \n",
       "188  86.742370  /home/jagust/arda/lblid/B19-239/MRI_3T_2019-02...   \n",
       "189  77.734656  /home/jagust/arda/lblid/B19-251/MRI2_3T_2019-0...   \n",
       "192  71.013094  /home/jagust/arda/lblid/B88-276/MRI3_3T_2018-0...   \n",
       "\n",
       "     rsfmri_scannumber   scandate  ...  EpisodicMemory  ExecutiveFunction  \\\n",
       "0                    2 2017-11-02  ...        1.622529           1.887222   \n",
       "1                    3 2017-10-24  ...        1.070970           0.170330   \n",
       "2                    3 2018-03-09  ...        0.929646           1.260252   \n",
       "3                    1 2014-07-23  ...        1.346380          -1.033742   \n",
       "4                    1 2014-10-20  ...       -0.750765           0.569836   \n",
       "..                 ...        ...  ...             ...                ...   \n",
       "181                  2 2019-04-26  ...        0.259146           0.972037   \n",
       "184                  2 2019-05-30  ...       -0.745164          -0.283999   \n",
       "188                  1 2019-02-20  ...        1.141878           2.140365   \n",
       "189                  2 2019-02-27  ...       -0.313769          -1.176820   \n",
       "192                  3 2018-04-06  ...        0.174099           0.036600   \n",
       "\n",
       "     NSSpos_EpisodicMemorypearsonNet  NSSneg_EpisodicMemorypearsonNet  \\\n",
       "0                          21.336490                        10.796268   \n",
       "1                          19.574639                         5.967476   \n",
       "2                          27.015846                         4.768256   \n",
       "3                          22.781566                        -0.566205   \n",
       "4                          10.429780                        12.438569   \n",
       "..                               ...                              ...   \n",
       "181                        21.038294                        38.580455   \n",
       "184                         6.015006                        13.817113   \n",
       "188                        14.464721                        12.252824   \n",
       "189                        27.517780                        27.496520   \n",
       "192                        31.612011                        25.789984   \n",
       "\n",
       "     NSSpos_EpisodicMemoryLASSONet  NSSneg_EpisodicMemoryLASSONet  \\\n",
       "0                        12.594240                       3.914458   \n",
       "1                         9.835915                       4.880699   \n",
       "2                         7.754972                       3.886411   \n",
       "3                         8.404152                       3.266196   \n",
       "4                         5.374082                       6.202180   \n",
       "..                             ...                            ...   \n",
       "181                      10.209827                       7.480688   \n",
       "184                       5.663975                       6.555113   \n",
       "188                       8.172147                       2.740758   \n",
       "189                       7.121521                       7.843655   \n",
       "192                       9.550849                       8.400424   \n",
       "\n",
       "    NSSpos_ExecutiveFunctionpearsonNet  NSSneg_ExecutiveFunctionpearsonNet  \\\n",
       "0                             3.768634                           -7.934317   \n",
       "1                             3.671291                            9.511992   \n",
       "2                             2.623458                           13.888090   \n",
       "3                            -0.212023                           21.601388   \n",
       "4                             1.109852                           15.229474   \n",
       "..                                 ...                                 ...   \n",
       "181                           5.477390                           19.598803   \n",
       "184                          -0.545515                           15.049575   \n",
       "188                           3.760909                          -16.430028   \n",
       "189                           1.315551                           42.550110   \n",
       "192                           1.872734                           34.084611   \n",
       "\n",
       "     NSSpos_ExecutiveFunctionLASSONet  NSSneg_ExecutiveFunctionLASSONet  \n",
       "0                           10.870096                          4.608104  \n",
       "1                            8.311928                          8.021646  \n",
       "2                            9.408163                          5.849725  \n",
       "3                            7.033343                          9.011876  \n",
       "4                            9.302530                          6.197445  \n",
       "..                                ...                               ...  \n",
       "181                         10.798565                          9.185195  \n",
       "184                          5.981609                          7.380884  \n",
       "188                         10.985926                          2.297749  \n",
       "189                          8.297273                         11.193163  \n",
       "192                         11.609385                         11.379285  \n",
       "\n",
       "[120 rows x 61 columns]"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "OA_networks_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(255, 255, 349)"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# ADNI replication sample\n",
    "adni_conn_dir = os.path.join(base_dir,'jagust','ziontzja','rsfmri_networks','ADNI_sample','CONN','batch_ADNIrsfMRI_N349_MNI','results','firstlevel','BN_roi2roi')\n",
    "adni_mat_fname = os.path.join(adni_conn_dir,'resultsROI_Condition001.mat')\n",
    "adni_mat_contents = sio.loadmat(adni_mat_fname)\n",
    "adni_conn_results = adni_mat_contents['Z']\n",
    "adni_conn_results.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>SID</th>\n",
       "      <th>rs_num</th>\n",
       "      <th>Image Data ID</th>\n",
       "      <th>Group</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Visit</th>\n",
       "      <th>Modality</th>\n",
       "      <th>Description</th>\n",
       "      <th>Type</th>\n",
       "      <th>Acq Date</th>\n",
       "      <th>Format</th>\n",
       "      <th>Downloaded</th>\n",
       "      <th>fMRI_useable</th>\n",
       "      <th>fMRI_orientation_postMNIprocessing</th>\n",
       "      <th>QC_notes</th>\n",
       "      <th>sub_vis</th>\n",
       "      <th>conn_index</th>\n",
       "      <th>RID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>002_S_0413</td>\n",
       "      <td>1</td>\n",
       "      <td>I1221056</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>90</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>Original</td>\n",
       "      <td>8/27/19</td>\n",
       "      <td>DCM</td>\n",
       "      <td>10/22/22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>002_S_0413_1</td>\n",
       "      <td>0</td>\n",
       "      <td>0413</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>002_S_1155</td>\n",
       "      <td>1</td>\n",
       "      <td>I1270009</td>\n",
       "      <td>MCI</td>\n",
       "      <td>M</td>\n",
       "      <td>70</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>Original</td>\n",
       "      <td>5/16/19</td>\n",
       "      <td>DCM</td>\n",
       "      <td>10/22/22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>002_S_1155_1</td>\n",
       "      <td>1</td>\n",
       "      <td>1155</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>002_S_1261</td>\n",
       "      <td>1</td>\n",
       "      <td>I1270025</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>83</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>Original</td>\n",
       "      <td>5/1/19</td>\n",
       "      <td>DCM</td>\n",
       "      <td>10/22/22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>002_S_1261_1</td>\n",
       "      <td>2</td>\n",
       "      <td>1261</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>002_S_1280</td>\n",
       "      <td>1</td>\n",
       "      <td>I1140413</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>83</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>Original</td>\n",
       "      <td>3/6/19</td>\n",
       "      <td>DCM</td>\n",
       "      <td>10/22/22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>002_S_1280_1</td>\n",
       "      <td>3</td>\n",
       "      <td>1280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>002_S_4213</td>\n",
       "      <td>1</td>\n",
       "      <td>I1236684</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>86</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>Original</td>\n",
       "      <td>10/3/19</td>\n",
       "      <td>DCM</td>\n",
       "      <td>10/22/22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>002_S_4213_1</td>\n",
       "      <td>4</td>\n",
       "      <td>4213</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>340</th>\n",
       "      <td>343</td>\n",
       "      <td>941_S_6803</td>\n",
       "      <td>1</td>\n",
       "      <td>I1310788</td>\n",
       "      <td>MCI</td>\n",
       "      <td>F</td>\n",
       "      <td>75</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>Original</td>\n",
       "      <td>9/16/19</td>\n",
       "      <td>DCM</td>\n",
       "      <td>10/22/22</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>941_S_6803_1</td>\n",
       "      <td>340</td>\n",
       "      <td>6803</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>344</th>\n",
       "      <td>347</td>\n",
       "      <td>941_S_6998</td>\n",
       "      <td>1</td>\n",
       "      <td>I1486326</td>\n",
       "      <td>CN</td>\n",
       "      <td>M</td>\n",
       "      <td>57</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>Original</td>\n",
       "      <td>8/30/21</td>\n",
       "      <td>DCM</td>\n",
       "      <td>10/22/22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>941_S_6998_1</td>\n",
       "      <td>344</td>\n",
       "      <td>6998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345</th>\n",
       "      <td>348</td>\n",
       "      <td>941_S_7041</td>\n",
       "      <td>1</td>\n",
       "      <td>I1544472</td>\n",
       "      <td>MCI</td>\n",
       "      <td>F</td>\n",
       "      <td>73</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>Original</td>\n",
       "      <td>2/14/22</td>\n",
       "      <td>DCM</td>\n",
       "      <td>10/22/22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>941_S_7041_1</td>\n",
       "      <td>345</td>\n",
       "      <td>7041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>346</th>\n",
       "      <td>349</td>\n",
       "      <td>941_S_7046</td>\n",
       "      <td>1</td>\n",
       "      <td>I1553936</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>71</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>Original</td>\n",
       "      <td>3/8/22</td>\n",
       "      <td>DCM</td>\n",
       "      <td>10/22/22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>941_S_7046_1</td>\n",
       "      <td>346</td>\n",
       "      <td>7046</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>347</th>\n",
       "      <td>350</td>\n",
       "      <td>941_S_7051</td>\n",
       "      <td>1</td>\n",
       "      <td>I1553010</td>\n",
       "      <td>CN</td>\n",
       "      <td>M</td>\n",
       "      <td>64</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>Original</td>\n",
       "      <td>3/7/22</td>\n",
       "      <td>DCM</td>\n",
       "      <td>10/22/22</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>941_S_7051_1</td>\n",
       "      <td>347</td>\n",
       "      <td>7051</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>188 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     index         SID  rs_num Image Data ID Group Sex  Age Visit Modality  \\\n",
       "0        0  002_S_0413       1      I1221056    CN   F   90    y2     fMRI   \n",
       "1        1  002_S_1155       1      I1270009   MCI   M   70    y2     fMRI   \n",
       "2        2  002_S_1261       1      I1270025    CN   F   83    y2     fMRI   \n",
       "3        3  002_S_1280       1      I1140413    CN   F   83    y2     fMRI   \n",
       "4        4  002_S_4213       1      I1236684    CN   F   86    y2     fMRI   \n",
       "..     ...         ...     ...           ...   ...  ..  ...   ...      ...   \n",
       "340    343  941_S_6803       1      I1310788   MCI   F   75    sc     fMRI   \n",
       "344    347  941_S_6998       1      I1486326    CN   M   57    sc     fMRI   \n",
       "345    348  941_S_7041       1      I1544472   MCI   F   73    sc     fMRI   \n",
       "346    349  941_S_7046       1      I1553936    CN   F   71    sc     fMRI   \n",
       "347    350  941_S_7051       1      I1553010    CN   M   64    sc     fMRI   \n",
       "\n",
       "                     Description      Type Acq Date Format Downloaded  \\\n",
       "0    Axial MB rsfMRI (Eyes Open)  Original  8/27/19    DCM   10/22/22   \n",
       "1    Axial MB rsfMRI (Eyes Open)  Original  5/16/19    DCM   10/22/22   \n",
       "2    Axial MB rsfMRI (Eyes Open)  Original   5/1/19    DCM   10/22/22   \n",
       "3    Axial MB rsfMRI (Eyes Open)  Original   3/6/19    DCM   10/22/22   \n",
       "4    Axial MB rsfMRI (Eyes Open)  Original  10/3/19    DCM   10/22/22   \n",
       "..                           ...       ...      ...    ...        ...   \n",
       "340  Axial MB rsfMRI (Eyes Open)  Original  9/16/19    DCM   10/22/22   \n",
       "344  Axial MB rsfMRI (Eyes Open)  Original  8/30/21    DCM   10/22/22   \n",
       "345  Axial MB rsfMRI (Eyes Open)  Original  2/14/22    DCM   10/22/22   \n",
       "346  Axial MB rsfMRI (Eyes Open)  Original   3/8/22    DCM   10/22/22   \n",
       "347  Axial MB rsfMRI (Eyes Open)  Original   3/7/22    DCM   10/22/22   \n",
       "\n",
       "     fMRI_useable  fMRI_orientation_postMNIprocessing QC_notes       sub_vis  \\\n",
       "0               1                                   1      NaN  002_S_0413_1   \n",
       "1               1                                   1      NaN  002_S_1155_1   \n",
       "2               1                                   1      NaN  002_S_1261_1   \n",
       "3               1                                   1      NaN  002_S_1280_1   \n",
       "4               1                                   1      NaN  002_S_4213_1   \n",
       "..            ...                                 ...      ...           ...   \n",
       "340             0                                   1      NaN  941_S_6803_1   \n",
       "344             1                                   1      NaN  941_S_6998_1   \n",
       "345             1                                   1      NaN  941_S_7041_1   \n",
       "346             1                                   1      NaN  941_S_7046_1   \n",
       "347             1                                   1      NaN  941_S_7051_1   \n",
       "\n",
       "     conn_index   RID  \n",
       "0             0  0413  \n",
       "1             1  1155  \n",
       "2             2  1261  \n",
       "3             3  1280  \n",
       "4             4  4213  \n",
       "..          ...   ...  \n",
       "340         340  6803  \n",
       "344         344  6998  \n",
       "345         345  7041  \n",
       "346         346  7046  \n",
       "347         347  7051  \n",
       "\n",
       "[188 rows x 20 columns]"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# load in subject info spreadsheet\n",
    "home_dir = os.path.join(base_dir,'jagust','ziontzja','rsfmri_networks','ADNI_sample')\n",
    "adnida_fname = os.path.join(home_dir,'sample_spreadsheets','ADNI3_rsfMRI_TR.607_02_28_2023_N352.csv')\n",
    "adnida = pd.read_csv(adnida_fname)\n",
    "\n",
    "# exclude subjects with failed MNI processing, reset index to match CONN output\n",
    "exclude_ids = ['177_S_6335','177_S_6409','177_S_6448']\n",
    "adnida = adnida[~adnida.SID.isin(exclude_ids)]\n",
    "adnida = adnida.sort_values(by=['SID','rs_num'])\n",
    "adnida = adnida.reset_index()\n",
    "\n",
    "# exclude subjects with misoriented scans after MNI processing, don't reset index\n",
    "adnida['sub_vis'] = adnida['SID'] + '_' + adnida['rs_num'].astype(str)\n",
    "adnida.sub_vis\n",
    "exclude_ids = ['023_S_2068_1','023_S_6346_1','023_S_6356_1','023_S_6369_3','037_S_6377_2','941_S_4292_1']\n",
    "adnida = adnida[~adnida.sub_vis.isin(exclude_ids)]\n",
    "\n",
    "# extra_exclude_ids = ['007_S_1222_2','007_S_4272_1','007_S_4272_3','007_S_6341_1','007_S_6515_1','022_S_6822_1',\n",
    "#                      '023_S_0031_1','023_S_6344_2','023_S_6661_2','023_S_6795_1','024_S_6385_2','037_S_6125_2',\n",
    "#                      '052_S_6844_2','067_S_6138_1','073_S_4216_1','941_S_4187_1','941_S_6575_2']\n",
    "# adnida = adnida[~adnida.sub_vis.isin(extra_exclude_ids)]\n",
    "\n",
    "adnida = adnida.sort_values(by=['SID','rs_num'])\n",
    "adnida['conn_index'] = adnida.index\n",
    "\n",
    "# index of cross-sectional sample of CN OA from other script\n",
    "# netidx = [  0,   2,   3,   4,   8,   9,  10,  11,  12,  13,  14,  20,  29,\n",
    "#         32,  35,  38,  41,  44,  46,  49,  51,  59,  61,  63,  64,  67,\n",
    "#         68,  74,  75,  82,  84,  95,  96,  98, 102, 111, 115, 117, 121,\n",
    "#        122, 124, 126, 133, 141, 143, 145, 151, 152, 154, 162, 168, 169,\n",
    "#        170, 171, 172, 173, 174, 175, 176, 184, 190, 193, 212, 213, 215,\n",
    "#        216, 218, 223, 226, 232, 233, 241, 242, 248, 249, 250, 252, 254,\n",
    "#        255, 257, 258, 259, 265, 267, 271, 277, 282, 283, 285, 287, 288,\n",
    "#        289, 291, 293, 298, 300, 302, 305, 312, 315, 317, 319, 322, 323,\n",
    "#        324, 326, 327, 329, 330, 332, 335, 338, 344, 346, 347]\n",
    "\n",
    "# index of cross-sectional sample of CN and MCI OA from other script\n",
    "netidx = [  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,\n",
    "        13,  14,  15,  18,  20,  22,  25,  29,  32,  35,  38,  41,  44,\n",
    "        46,  49,  51,  53,  57,  59,  61,  63,  64,  67,  68,  69,  72,\n",
    "        74,  75,  78,  82,  84,  86,  91,  92,  95,  96,  98,  99, 102,\n",
    "       105, 107, 109, 111, 113, 115, 117, 119, 121, 122, 124, 126, 128,\n",
    "       131, 133, 135, 136, 139, 141, 143, 145, 146, 148, 150, 151, 152,\n",
    "       154, 157, 162, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,\n",
    "       178, 179, 180, 181, 184, 185, 187, 190, 193, 195, 197, 201, 202,\n",
    "       203, 205, 208, 212, 213, 215, 216, 218, 220, 223, 224, 226, 228,\n",
    "       231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 245, 246, 247,\n",
    "       248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260,\n",
    "       262, 263, 265, 266, 267, 268, 269, 271, 274, 277, 278, 282, 283,\n",
    "       285, 287, 288, 289, 290, 291, 293, 295, 298, 300, 302, 305, 309,\n",
    "       312, 315, 317, 319, 322, 323, 324, 326, 327, 329, 330, 332, 335,\n",
    "       338, 340, 344, 345, 346, 347]\n",
    "adnida = adnida.loc[netidx]\n",
    "adnida['RID'] = adnida['SID'].str[-4:]\n",
    "adnida"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "002-S-0413\n",
      "002-S-1155\n",
      "002-S-1261\n",
      "002-S-1280\n",
      "002-S-4213\n",
      "002-S-4229\n",
      "002-S-4654\n",
      "002-S-4799\n",
      "002-S-5178\n",
      "002-S-5230\n",
      "002-S-6007\n",
      "002-S-6009\n",
      "002-S-6030\n",
      "002-S-6053\n",
      "002-S-6066\n",
      "no tau data for 002-S-6066\n",
      "002-S-6652\n",
      "002-S-6695\n",
      "007-S-1222\n",
      "no tau data for 007-S-1222\n",
      "007-S-2394\n",
      "007-S-4272\n",
      "007-S-4387\n",
      "007-S-4488\n",
      "007-S-4620\n",
      "007-S-4637\n",
      "007-S-5265\n",
      "007-S-6120\n",
      "007-S-6255\n",
      "007-S-6310\n",
      "007-S-6323\n",
      "007-S-6341\n",
      "007-S-6421\n",
      "007-S-6455\n",
      "007-S-6515\n",
      "007-S-6521\n",
      "022-S-6069\n",
      "022-S-6797\n",
      "022-S-6822\n",
      "022-S-6847\n",
      "022-S-6863\n",
      "023-S-0031\n",
      "023-S-1190\n",
      "023-S-4115\n",
      "023-S-4164\n",
      "023-S-4448\n",
      "023-S-6334\n",
      "023-S-6356\n",
      "023-S-6369\n",
      "023-S-6374\n",
      "023-S-6399\n",
      "023-S-6400\n",
      "023-S-6535\n",
      "023-S-6547\n",
      "023-S-6702\n",
      "023-S-6723\n",
      "no tau data for 023-S-6723\n",
      "024-S-2239\n",
      "024-S-4084\n",
      "024-S-4674\n",
      "024-S-5290\n",
      "024-S-6005\n",
      "024-S-6033\n",
      "024-S-6184\n",
      "024-S-6202\n",
      "024-S-6385\n",
      "024-S-6472\n",
      "024-S-6846\n",
      "037-S-0377\n",
      "037-S-4028\n",
      "037-S-4030\n",
      "no tau data for 037-S-4030\n",
      "037-S-4214\n",
      "037-S-4706\n",
      "037-S-5126\n",
      "037-S-5222\n",
      "037-S-6031\n",
      "037-S-6083\n",
      "037-S-6125\n",
      "037-S-6141\n",
      "037-S-6144\n",
      "037-S-6187\n",
      "037-S-6204\n",
      "037-S-6222\n",
      "037-S-6271\n",
      "037-S-6627\n",
      "037-S-6951\n",
      "037-S-6956\n",
      "037-S-6977\n",
      "037-S-6992\n",
      "037-S-6993\n",
      "no tau data for 037-S-6993\n",
      "037-S-6995\n",
      "037-S-7006\n",
      "037-S-7011\n",
      "051-S-5285\n",
      "no tau data for 051-S-5285\n",
      "051-S-6719\n",
      "051-S-6761\n",
      "052-S-1352\n",
      "no tau data for 052-S-1352\n",
      "052-S-4944\n",
      "no tau data for 052-S-4944\n",
      "052-S-6412\n",
      "052-S-6832\n",
      "052-S-6844\n",
      "no tau data for 052-S-6844\n",
      "067-S-0056\n",
      "067-S-0059\n",
      "067-S-2301\n",
      "067-S-2304\n",
      "067-S-4072\n",
      "no tau data for 067-S-4072\n",
      "067-S-4184\n",
      "no tau data for 067-S-4184\n",
      "067-S-4212\n",
      "067-S-4767\n",
      "067-S-4782\n",
      "067-S-6045\n",
      "067-S-6117\n",
      "067-S-6138\n",
      "067-S-6442\n",
      "067-S-6443\n",
      "067-S-6474\n",
      "067-S-6518\n",
      "067-S-6525\n",
      "067-S-6528\n",
      "067-S-6529\n",
      "067-S-6912\n",
      "no tau data for 067-S-6912\n",
      "067-S-6957\n",
      "067-S-6958\n",
      "067-S-6986\n",
      "067-S-6989\n",
      "067-S-7008\n",
      "067-S-7020\n",
      "067-S-7029\n",
      "067-S-7059\n",
      "067-S-7061\n",
      "073-S-2182\n",
      "no tau data for 073-S-2182\n",
      "073-S-2191\n",
      "no tau data for 073-S-2191\n",
      "073-S-4216\n",
      "073-S-4393\n",
      "073-S-4552\n",
      "073-S-4795\n",
      "073-S-6669\n",
      "073-S-6670\n",
      "no tau data for 073-S-6670\n",
      "073-S-6673\n",
      "073-S-6907\n",
      "073-S-6925\n",
      "073-S-6929\n",
      "073-S-6952\n",
      "094-S-6468\n",
      "094-S-6485\n",
      "127-S-6241\n",
      "128-S-0205\n",
      "128-S-4742\n",
      "341-S-6494\n",
      "341-S-6605\n",
      "341-S-6653\n",
      "341-S-6686\n",
      "no tau data for 341-S-6686\n",
      "341-S-6764\n",
      "no tau data for 341-S-6764\n",
      "941-S-1195\n",
      "no tau data for 941-S-1195\n",
      "941-S-4036\n",
      "941-S-4100\n",
      "941-S-4187\n",
      "941-S-4292\n",
      "941-S-4365\n",
      "941-S-4376\n",
      "941-S-5124\n",
      "941-S-5193\n",
      "941-S-6044\n",
      "941-S-6052\n",
      "941-S-6054\n",
      "941-S-6058\n",
      "941-S-6068\n",
      "941-S-6080\n",
      "941-S-6094\n",
      "941-S-6254\n",
      "941-S-6333\n",
      "941-S-6345\n",
      "941-S-6384\n",
      "941-S-6422\n",
      "941-S-6454\n",
      "941-S-6471\n",
      "941-S-6495\n",
      "no tau data for 941-S-6495\n",
      "941-S-6496\n",
      "no tau data for 941-S-6496\n",
      "941-S-6499\n",
      "941-S-6514\n",
      "941-S-6546\n",
      "941-S-6570\n",
      "941-S-6574\n",
      "no tau data for 941-S-6574\n",
      "941-S-6575\n",
      "941-S-6580\n",
      "941-S-6581\n",
      "941-S-6803\n",
      "941-S-6998\n",
      "no tau data for 941-S-6998\n",
      "941-S-7041\n",
      "941-S-7046\n",
      "941-S-7051\n",
      "no tau data for 941-S-7051\n"
     ]
    }
   ],
   "source": [
    "# source tau PET values from squid closest in time to each rs scan\n",
    "adnida['SID_squid'] = adnida.SID.str.replace('_','-')\n",
    "\n",
    "metaROI_idxs = ['1006', '2006', # entorhinal\n",
    "                '1016', '2016', # parahippocampal\n",
    "                '1007', '2007', # fusiform\n",
    "                '18', '54', # amygdala\n",
    "                '1015', '2015', # middle temporal\n",
    "                '1009', '2009'] # inferior temporal\n",
    "\n",
    "taurs_diff = []\n",
    "metaROItau_vals = []\n",
    "metaROItau_vals_PVC = []\n",
    "\n",
    "for index, row in adnida[:].iterrows():\n",
    "    sub = row['SID_squid']\n",
    "    print(sub)\n",
    "    rs_date = datetime.datetime.strptime(row['Acq Date'], '%m/%d/%y')\n",
    "    taupet_dirs = glob.glob(os.path.join(base_dir,'jagust','xnat','squid','adni',sub,'PET*FTP')) # list tau pet directories for each subeject\n",
    "    if len(taupet_dirs)>0:\n",
    "        # compute time between resting state scan and tau scan and select directory closest in time\n",
    "        datedict = {}\n",
    "        for taudir in taupet_dirs:    \n",
    "            taupet_datestr = os.path.basename(taudir).split('_')[1]\n",
    "            taupet_date = datetime.datetime.strptime(taupet_datestr, '%Y-%m-%d')\n",
    "            diff = (taupet_date - rs_date).total_seconds()/86400 # difference in days between rsfMRI scan and tau scan\n",
    "            datedict[diff] = taudir\n",
    "        mindiff = min(datedict, key=abs)\n",
    "        taurs_diff.append(mindiff)\n",
    "        closest_taudir = os.path.basename(datedict[mindiff])\n",
    "        # read in spreadsheet with tau PET data\n",
    "        tau_fname = os.path.join(base_dir,'jagust','xnat','squid','adni',sub,closest_taudir,'analysis','roi_info_suvr.csv')\n",
    "        if os.path.isfile(tau_fname):\n",
    "            tauda = pd.read_csv(tau_fname)\n",
    "            metaROItau = np.mean(tauda[metaROI_idxs], axis=1)\n",
    "            metaROItau_vals.append(float(metaROItau))\n",
    "        else:\n",
    "            metaROItau_vals.append(np.nan)\n",
    "        # read in spreadsheet with tau PET PVC data\n",
    "        tau_pvc_fname = os.path.join(base_dir,'jagust','xnat','squid','adni',sub,closest_taudir,'analysis','roi_info_suvr_PVC.csv')\n",
    "        if os.path.isfile(tau_pvc_fname):\n",
    "            tauda = pd.read_csv(tau_pvc_fname)\n",
    "            metaROItau_pvc = np.mean(tauda[metaROI_idxs], axis=1)\n",
    "            metaROItau_vals_PVC.append(float(metaROItau_pvc))\n",
    "        else:\n",
    "            metaROItau_vals_PVC.append(np.nan)\n",
    "    else:\n",
    "        print('no tau data for '+sub)\n",
    "        taurs_diff.append(np.nan)\n",
    "        metaROItau_vals.append(np.nan)\n",
    "        metaROItau_vals_PVC.append(np.nan)\n",
    "\n",
    "adnida['taurs_diff'] = taurs_diff\n",
    "adnida['metaROI_FTP_SUVR'] = metaROItau_vals\n",
    "adnida['metaROI_FTP_SUVR_PVC'] = metaROItau_vals_PVC\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:17: FutureWarning: casting timedelta64[ns] values to int64 with .astype(...) is deprecated and will raise in a future version. Use .view(...) instead.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>SID</th>\n",
       "      <th>rs_num</th>\n",
       "      <th>Image Data ID</th>\n",
       "      <th>Group</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Visit</th>\n",
       "      <th>Modality</th>\n",
       "      <th>Description</th>\n",
       "      <th>...</th>\n",
       "      <th>QC_notes</th>\n",
       "      <th>sub_vis</th>\n",
       "      <th>conn_index</th>\n",
       "      <th>RID</th>\n",
       "      <th>SID_squid</th>\n",
       "      <th>taurs_diff</th>\n",
       "      <th>metaROI_FTP_SUVR</th>\n",
       "      <th>metaROI_FTP_SUVR_PVC</th>\n",
       "      <th>abrs_diff</th>\n",
       "      <th>CENTILOIDS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>002_S_0413</td>\n",
       "      <td>1</td>\n",
       "      <td>I1221056</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>90</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>002_S_0413_1</td>\n",
       "      <td>0</td>\n",
       "      <td>0413</td>\n",
       "      <td>002-S-0413</td>\n",
       "      <td>-797.0</td>\n",
       "      <td>0.942324</td>\n",
       "      <td>0.992048</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>002_S_1155</td>\n",
       "      <td>1</td>\n",
       "      <td>I1270009</td>\n",
       "      <td>MCI</td>\n",
       "      <td>M</td>\n",
       "      <td>70</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>002_S_1155_1</td>\n",
       "      <td>1</td>\n",
       "      <td>1155</td>\n",
       "      <td>002-S-1155</td>\n",
       "      <td>-752.0</td>\n",
       "      <td>1.167233</td>\n",
       "      <td>1.114183</td>\n",
       "      <td>3.0</td>\n",
       "      <td>-6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>002_S_1261</td>\n",
       "      <td>1</td>\n",
       "      <td>I1270025</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>83</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>002_S_1261_1</td>\n",
       "      <td>2</td>\n",
       "      <td>1261</td>\n",
       "      <td>002-S-1261</td>\n",
       "      <td>-777.0</td>\n",
       "      <td>1.274558</td>\n",
       "      <td>1.420533</td>\n",
       "      <td>44.0</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>002_S_1280</td>\n",
       "      <td>1</td>\n",
       "      <td>I1140413</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>83</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>002_S_1280_1</td>\n",
       "      <td>3</td>\n",
       "      <td>1280</td>\n",
       "      <td>002-S-1280</td>\n",
       "      <td>-366.0</td>\n",
       "      <td>1.286725</td>\n",
       "      <td>1.351650</td>\n",
       "      <td>734.0</td>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>002_S_4213</td>\n",
       "      <td>1</td>\n",
       "      <td>I1236684</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>86</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>002_S_4213_1</td>\n",
       "      <td>4</td>\n",
       "      <td>4213</td>\n",
       "      <td>002-S-4213</td>\n",
       "      <td>-777.0</td>\n",
       "      <td>1.026388</td>\n",
       "      <td>1.063583</td>\n",
       "      <td>780.0</td>\n",
       "      <td>-2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>340</td>\n",
       "      <td>941_S_6803</td>\n",
       "      <td>1</td>\n",
       "      <td>I1310788</td>\n",
       "      <td>MCI</td>\n",
       "      <td>F</td>\n",
       "      <td>75</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>941_S_6803_1</td>\n",
       "      <td>340</td>\n",
       "      <td>6803</td>\n",
       "      <td>941-S-6803</td>\n",
       "      <td>22.0</td>\n",
       "      <td>2.286642</td>\n",
       "      <td>3.219250</td>\n",
       "      <td>17.0</td>\n",
       "      <td>68.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>344</td>\n",
       "      <td>941_S_6998</td>\n",
       "      <td>1</td>\n",
       "      <td>I1486326</td>\n",
       "      <td>CN</td>\n",
       "      <td>M</td>\n",
       "      <td>57</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>941_S_6998_1</td>\n",
       "      <td>344</td>\n",
       "      <td>6998</td>\n",
       "      <td>941-S-6998</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>36.0</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>345</td>\n",
       "      <td>941_S_7041</td>\n",
       "      <td>1</td>\n",
       "      <td>I1544472</td>\n",
       "      <td>MCI</td>\n",
       "      <td>F</td>\n",
       "      <td>73</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>941_S_7041_1</td>\n",
       "      <td>345</td>\n",
       "      <td>7041</td>\n",
       "      <td>941-S-7041</td>\n",
       "      <td>43.0</td>\n",
       "      <td>1.204875</td>\n",
       "      <td>1.321300</td>\n",
       "      <td>79.0</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>186</th>\n",
       "      <td>346</td>\n",
       "      <td>941_S_7046</td>\n",
       "      <td>1</td>\n",
       "      <td>I1553936</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>71</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>941_S_7046_1</td>\n",
       "      <td>346</td>\n",
       "      <td>7046</td>\n",
       "      <td>941-S-7046</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.089533</td>\n",
       "      <td>1.131050</td>\n",
       "      <td>29.0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187</th>\n",
       "      <td>347</td>\n",
       "      <td>941_S_7051</td>\n",
       "      <td>1</td>\n",
       "      <td>I1553010</td>\n",
       "      <td>CN</td>\n",
       "      <td>M</td>\n",
       "      <td>64</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>941_S_7051_1</td>\n",
       "      <td>347</td>\n",
       "      <td>7051</td>\n",
       "      <td>941-S-7051</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>51.0</td>\n",
       "      <td>111.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>188 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     index         SID  rs_num Image Data ID Group Sex  Age Visit Modality  \\\n",
       "0        0  002_S_0413       1      I1221056    CN   F   90    y2     fMRI   \n",
       "1        1  002_S_1155       1      I1270009   MCI   M   70    y2     fMRI   \n",
       "2        2  002_S_1261       1      I1270025    CN   F   83    y2     fMRI   \n",
       "3        3  002_S_1280       1      I1140413    CN   F   83    y2     fMRI   \n",
       "4        4  002_S_4213       1      I1236684    CN   F   86    y2     fMRI   \n",
       "..     ...         ...     ...           ...   ...  ..  ...   ...      ...   \n",
       "183    340  941_S_6803       1      I1310788   MCI   F   75    sc     fMRI   \n",
       "184    344  941_S_6998       1      I1486326    CN   M   57    sc     fMRI   \n",
       "185    345  941_S_7041       1      I1544472   MCI   F   73    sc     fMRI   \n",
       "186    346  941_S_7046       1      I1553936    CN   F   71    sc     fMRI   \n",
       "187    347  941_S_7051       1      I1553010    CN   M   64    sc     fMRI   \n",
       "\n",
       "                     Description  ... QC_notes       sub_vis conn_index   RID  \\\n",
       "0    Axial MB rsfMRI (Eyes Open)  ...      NaN  002_S_0413_1          0  0413   \n",
       "1    Axial MB rsfMRI (Eyes Open)  ...      NaN  002_S_1155_1          1  1155   \n",
       "2    Axial MB rsfMRI (Eyes Open)  ...      NaN  002_S_1261_1          2  1261   \n",
       "3    Axial MB rsfMRI (Eyes Open)  ...      NaN  002_S_1280_1          3  1280   \n",
       "4    Axial MB rsfMRI (Eyes Open)  ...      NaN  002_S_4213_1          4  4213   \n",
       "..                           ...  ...      ...           ...        ...   ...   \n",
       "183  Axial MB rsfMRI (Eyes Open)  ...      NaN  941_S_6803_1        340  6803   \n",
       "184  Axial MB rsfMRI (Eyes Open)  ...      NaN  941_S_6998_1        344  6998   \n",
       "185  Axial MB rsfMRI (Eyes Open)  ...      NaN  941_S_7041_1        345  7041   \n",
       "186  Axial MB rsfMRI (Eyes Open)  ...      NaN  941_S_7046_1        346  7046   \n",
       "187  Axial MB rsfMRI (Eyes Open)  ...      NaN  941_S_7051_1        347  7051   \n",
       "\n",
       "      SID_squid  taurs_diff metaROI_FTP_SUVR metaROI_FTP_SUVR_PVC  abrs_diff  \\\n",
       "0    002-S-0413      -797.0         0.942324             0.992048        NaN   \n",
       "1    002-S-1155      -752.0         1.167233             1.114183        3.0   \n",
       "2    002-S-1261      -777.0         1.274558             1.420533       44.0   \n",
       "3    002-S-1280      -366.0         1.286725             1.351650      734.0   \n",
       "4    002-S-4213      -777.0         1.026388             1.063583      780.0   \n",
       "..          ...         ...              ...                  ...        ...   \n",
       "183  941-S-6803        22.0         2.286642             3.219250       17.0   \n",
       "184  941-S-6998         NaN              NaN                  NaN       36.0   \n",
       "185  941-S-7041        43.0         1.204875             1.321300       79.0   \n",
       "186  941-S-7046         0.0         1.089533             1.131050       29.0   \n",
       "187  941-S-7051         NaN              NaN                  NaN       51.0   \n",
       "\n",
       "    CENTILOIDS  \n",
       "0          NaN  \n",
       "1         -6.0  \n",
       "2         13.0  \n",
       "3         36.0  \n",
       "4         -2.0  \n",
       "..         ...  \n",
       "183       68.0  \n",
       "184        7.0  \n",
       "185       11.0  \n",
       "186        9.0  \n",
       "187      111.0  \n",
       "\n",
       "[188 rows x 26 columns]"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# source amyloid centiloid from ADNI spreadsheets closest in time to each rs scan\n",
    "FBBda_fname = os.path.join(base_dir,'jagust','ziontzja','rsfmri_networks','ADNI_sample','sample_spreadsheets','UCBERKELEY_FBB_8mm_Res_2023-02-17.csv')\n",
    "FBBda = pd.read_csv(FBBda_fname)\n",
    "FBPda_fname = os.path.join(base_dir,'jagust','ziontzja','rsfmri_networks','ADNI_sample','sample_spreadsheets','UCBERKELEY_AV45_8mm_Res_2023-02-17.csv')\n",
    "FBPda = pd.read_csv(FBPda_fname)\n",
    "abetada = pd.concat([FBBda, FBPda]).sort_values(by=[\"RID\",\"EXAMDATE\"])\n",
    "abetada = abetada[['RID','EXAMDATE','CENTILOIDS']]\n",
    "abetada['RID'] = abetada.RID.astype(str)\n",
    "\n",
    "# this is gross but it works\n",
    "adnida['index'] = adnida.index\n",
    "adni_abetada = pd.merge(adnida, abetada, on=['RID'], how='left')\n",
    "adni_abetada['EXAMDATE'] = pd.to_datetime(adni_abetada.EXAMDATE)\n",
    "adni_abetada['Acq Date'] = pd.to_datetime(adni_abetada['Acq Date'])\n",
    "adni_abetada['abrs_diff'] = abs(adni_abetada.EXAMDATE - adni_abetada['Acq Date'])\n",
    "adni_abetada = adni_abetada[adni_abetada.abrs_diff.notna()]\n",
    "adni_abetada['abrs_diff'] = adni_abetada.abrs_diff.astype(int)/(10**9)/60/60/24\n",
    "adni_abetada = adni_abetada.loc[adni_abetada.groupby('SID').abrs_diff.idxmin()]\n",
    "adni_abetada = adni_abetada[['SID','rs_num','abrs_diff','CENTILOIDS']]\n",
    "adnida = pd.merge(adnida, adni_abetada, on=['SID','rs_num'], how='left')\n",
    "adnida"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3331: DtypeWarning: Columns (19,20,21,104,105,106) have mixed types.Specify dtype option on import or set low_memory=False.\n",
      "  exec(code_obj, self.user_global_ns, self.user_ns)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>SID</th>\n",
       "      <th>rs_num</th>\n",
       "      <th>Image Data ID</th>\n",
       "      <th>Group</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Visit</th>\n",
       "      <th>Modality</th>\n",
       "      <th>Description</th>\n",
       "      <th>...</th>\n",
       "      <th>sub_vis</th>\n",
       "      <th>conn_index</th>\n",
       "      <th>RID</th>\n",
       "      <th>SID_squid</th>\n",
       "      <th>taurs_diff</th>\n",
       "      <th>metaROI_FTP_SUVR</th>\n",
       "      <th>metaROI_FTP_SUVR_PVC</th>\n",
       "      <th>abrs_diff</th>\n",
       "      <th>CENTILOIDS</th>\n",
       "      <th>PTEDUCAT</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>002_S_0413</td>\n",
       "      <td>1</td>\n",
       "      <td>I1221056</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>90</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>002_S_0413_1</td>\n",
       "      <td>0</td>\n",
       "      <td>0413</td>\n",
       "      <td>002-S-0413</td>\n",
       "      <td>-797.0</td>\n",
       "      <td>0.942324</td>\n",
       "      <td>0.992048</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>002_S_1155</td>\n",
       "      <td>1</td>\n",
       "      <td>I1270009</td>\n",
       "      <td>MCI</td>\n",
       "      <td>M</td>\n",
       "      <td>70</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>002_S_1155_1</td>\n",
       "      <td>1</td>\n",
       "      <td>1155</td>\n",
       "      <td>002-S-1155</td>\n",
       "      <td>-752.0</td>\n",
       "      <td>1.167233</td>\n",
       "      <td>1.114183</td>\n",
       "      <td>3.0</td>\n",
       "      <td>-6.0</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>002_S_1261</td>\n",
       "      <td>1</td>\n",
       "      <td>I1270025</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>83</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>002_S_1261_1</td>\n",
       "      <td>2</td>\n",
       "      <td>1261</td>\n",
       "      <td>002-S-1261</td>\n",
       "      <td>-777.0</td>\n",
       "      <td>1.274558</td>\n",
       "      <td>1.420533</td>\n",
       "      <td>44.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>002_S_1280</td>\n",
       "      <td>1</td>\n",
       "      <td>I1140413</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>83</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>002_S_1280_1</td>\n",
       "      <td>3</td>\n",
       "      <td>1280</td>\n",
       "      <td>002-S-1280</td>\n",
       "      <td>-366.0</td>\n",
       "      <td>1.286725</td>\n",
       "      <td>1.351650</td>\n",
       "      <td>734.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>002_S_4213</td>\n",
       "      <td>1</td>\n",
       "      <td>I1236684</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>86</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>002_S_4213_1</td>\n",
       "      <td>4</td>\n",
       "      <td>4213</td>\n",
       "      <td>002-S-4213</td>\n",
       "      <td>-777.0</td>\n",
       "      <td>1.026388</td>\n",
       "      <td>1.063583</td>\n",
       "      <td>780.0</td>\n",
       "      <td>-2.0</td>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>340</td>\n",
       "      <td>941_S_6803</td>\n",
       "      <td>1</td>\n",
       "      <td>I1310788</td>\n",
       "      <td>MCI</td>\n",
       "      <td>F</td>\n",
       "      <td>75</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>941_S_6803_1</td>\n",
       "      <td>340</td>\n",
       "      <td>6803</td>\n",
       "      <td>941-S-6803</td>\n",
       "      <td>22.0</td>\n",
       "      <td>2.286642</td>\n",
       "      <td>3.219250</td>\n",
       "      <td>17.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>344</td>\n",
       "      <td>941_S_6998</td>\n",
       "      <td>1</td>\n",
       "      <td>I1486326</td>\n",
       "      <td>CN</td>\n",
       "      <td>M</td>\n",
       "      <td>57</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>941_S_6998_1</td>\n",
       "      <td>344</td>\n",
       "      <td>6998</td>\n",
       "      <td>941-S-6998</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>36.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>345</td>\n",
       "      <td>941_S_7041</td>\n",
       "      <td>1</td>\n",
       "      <td>I1544472</td>\n",
       "      <td>MCI</td>\n",
       "      <td>F</td>\n",
       "      <td>73</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>941_S_7041_1</td>\n",
       "      <td>345</td>\n",
       "      <td>7041</td>\n",
       "      <td>941-S-7041</td>\n",
       "      <td>43.0</td>\n",
       "      <td>1.204875</td>\n",
       "      <td>1.321300</td>\n",
       "      <td>79.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>186</th>\n",
       "      <td>346</td>\n",
       "      <td>941_S_7046</td>\n",
       "      <td>1</td>\n",
       "      <td>I1553936</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>71</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>941_S_7046_1</td>\n",
       "      <td>346</td>\n",
       "      <td>7046</td>\n",
       "      <td>941-S-7046</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.089533</td>\n",
       "      <td>1.131050</td>\n",
       "      <td>29.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187</th>\n",
       "      <td>347</td>\n",
       "      <td>941_S_7051</td>\n",
       "      <td>1</td>\n",
       "      <td>I1553010</td>\n",
       "      <td>CN</td>\n",
       "      <td>M</td>\n",
       "      <td>64</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>941_S_7051_1</td>\n",
       "      <td>347</td>\n",
       "      <td>7051</td>\n",
       "      <td>941-S-7051</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>51.0</td>\n",
       "      <td>111.0</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>188 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     index         SID  rs_num Image Data ID Group Sex  Age Visit Modality  \\\n",
       "0        0  002_S_0413       1      I1221056    CN   F   90    y2     fMRI   \n",
       "1        1  002_S_1155       1      I1270009   MCI   M   70    y2     fMRI   \n",
       "2        2  002_S_1261       1      I1270025    CN   F   83    y2     fMRI   \n",
       "3        3  002_S_1280       1      I1140413    CN   F   83    y2     fMRI   \n",
       "4        4  002_S_4213       1      I1236684    CN   F   86    y2     fMRI   \n",
       "..     ...         ...     ...           ...   ...  ..  ...   ...      ...   \n",
       "183    340  941_S_6803       1      I1310788   MCI   F   75    sc     fMRI   \n",
       "184    344  941_S_6998       1      I1486326    CN   M   57    sc     fMRI   \n",
       "185    345  941_S_7041       1      I1544472   MCI   F   73    sc     fMRI   \n",
       "186    346  941_S_7046       1      I1553936    CN   F   71    sc     fMRI   \n",
       "187    347  941_S_7051       1      I1553010    CN   M   64    sc     fMRI   \n",
       "\n",
       "                     Description  ...       sub_vis conn_index   RID  \\\n",
       "0    Axial MB rsfMRI (Eyes Open)  ...  002_S_0413_1          0  0413   \n",
       "1    Axial MB rsfMRI (Eyes Open)  ...  002_S_1155_1          1  1155   \n",
       "2    Axial MB rsfMRI (Eyes Open)  ...  002_S_1261_1          2  1261   \n",
       "3    Axial MB rsfMRI (Eyes Open)  ...  002_S_1280_1          3  1280   \n",
       "4    Axial MB rsfMRI (Eyes Open)  ...  002_S_4213_1          4  4213   \n",
       "..                           ...  ...           ...        ...   ...   \n",
       "183  Axial MB rsfMRI (Eyes Open)  ...  941_S_6803_1        340  6803   \n",
       "184  Axial MB rsfMRI (Eyes Open)  ...  941_S_6998_1        344  6998   \n",
       "185  Axial MB rsfMRI (Eyes Open)  ...  941_S_7041_1        345  7041   \n",
       "186  Axial MB rsfMRI (Eyes Open)  ...  941_S_7046_1        346  7046   \n",
       "187  Axial MB rsfMRI (Eyes Open)  ...  941_S_7051_1        347  7051   \n",
       "\n",
       "      SID_squid  taurs_diff  metaROI_FTP_SUVR metaROI_FTP_SUVR_PVC abrs_diff  \\\n",
       "0    002-S-0413      -797.0          0.942324             0.992048       NaN   \n",
       "1    002-S-1155      -752.0          1.167233             1.114183       3.0   \n",
       "2    002-S-1261      -777.0          1.274558             1.420533      44.0   \n",
       "3    002-S-1280      -366.0          1.286725             1.351650     734.0   \n",
       "4    002-S-4213      -777.0          1.026388             1.063583     780.0   \n",
       "..          ...         ...               ...                  ...       ...   \n",
       "183  941-S-6803        22.0          2.286642             3.219250      17.0   \n",
       "184  941-S-6998         NaN               NaN                  NaN      36.0   \n",
       "185  941-S-7041        43.0          1.204875             1.321300      79.0   \n",
       "186  941-S-7046         0.0          1.089533             1.131050      29.0   \n",
       "187  941-S-7051         NaN               NaN                  NaN      51.0   \n",
       "\n",
       "     CENTILOIDS PTEDUCAT  \n",
       "0           NaN      NaN  \n",
       "1          -6.0     20.0  \n",
       "2          13.0     16.0  \n",
       "3          36.0     14.0  \n",
       "4          -2.0     14.0  \n",
       "..          ...      ...  \n",
       "183        68.0     12.0  \n",
       "184         7.0     16.0  \n",
       "185        11.0     20.0  \n",
       "186         9.0     16.0  \n",
       "187       111.0     12.0  \n",
       "\n",
       "[188 rows x 27 columns]"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# get years education from ADNIMERGE\n",
    "cogda_fname = os.path.join(home_dir,'sample_spreadsheets','ADNIMERGE.csv')\n",
    "cogda = pd.read_csv(cogda_fname)\n",
    "cogda = cogda[['RID','PTEDUCAT']]\n",
    "cogda['RID'] = cogda.RID.astype(str)\n",
    "cogda = cogda.drop_duplicates(['RID'])\n",
    "adnida = pd.merge(adnida, cogda, on=\"RID\", how=\"left\")\n",
    "adnida"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(246, 246, 188)\n"
     ]
    }
   ],
   "source": [
    "# subset to desired Dx group(s)\n",
    "#adnida = adnida[(adnida.Group=='CN') | (adnida.Group=='SMC')]\n",
    "#adnida = adnida[(adnida.Group=='CN') | (adnida.Group=='SMC') | (adnida.Group=='MCI') | (adnida.Group=='LMCI') | (adnida.Group=='EMCI')]\n",
    "# adnida = adnida[(adnida.Group=='MCI') | (adnida.Group=='LMCI') | (adnida.Group=='EMCI')]\n",
    "# netidx = adnida.index\n",
    "BN_adni = adni_conn_results[9:,9:,adnida['index']]\n",
    "print(BN_adni.shape)\n",
    "BN_adni_mean = np.mean(BN_adni, axis=2)\n",
    "BN_adni_df = pd.DataFrame(data=BN_adni_mean)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([], dtype=float64), [])"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot correlation matrix for all selected subjects\n",
    "sns.heatmap(BN_adni_df,\n",
    "           vmin=-.5, vmax=1.5,\n",
    "           xticklabels=False, yticklabels=False,\n",
    "           annot=False, cmap=\"YlGnBu\")\n",
    "plt.xticks(rotation=45, ha='right')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py:3607: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._set_item(key, value)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(-0.19208516306515808, 0.029844614567154107)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(-0.17394942763865956, 0.049564306405027125)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# compute network strength in ADNI using strength of BACS networks\n",
    "ADNI_NSS_EMpos = []\n",
    "for subj in range(0, BN_adni.shape[2]):\n",
    "    test_mat = BN_adni[:,:,subj]\n",
    "    test_possum = np.sum(test_mat[OA_EMLASSO_posmask])/2\n",
    "    ADNI_NSS_EMpos.append(test_possum)\n",
    "adnida['BACS_EpisodicMemoryLASSONet_NSSpos'] = ADNI_NSS_EMpos\n",
    "\n",
    "ADNI_NSS_EFpos = []\n",
    "for subj in range(0, BN_adni.shape[2]):\n",
    "    test_mat = BN_adni[:,:,subj]\n",
    "    test_possum = np.sum(test_mat[OA_EFLASSO_posmask])/2\n",
    "    ADNI_NSS_EFpos.append(test_possum)\n",
    "adnida['BACS_ExecutiveFunctionLASSONet_NSSpos'] = ADNI_NSS_EFpos\n",
    "\n",
    "adnitauda = adnida.dropna(subset=['metaROI_FTP_SUVR'])\n",
    "adnitauda.taurs_diff = adnitauda.taurs_diff.abs()\n",
    "adnitauda = adnitauda[adnitauda.taurs_diff < 365]\n",
    "\n",
    "print(scipy.stats.pearsonr(adnitauda['BACS_EpisodicMemoryLASSONet_NSSpos'], adnitauda['metaROI_FTP_SUVR']))\n",
    "sns.regplot(data=adnitauda, x='BACS_EpisodicMemoryLASSONet_NSSpos', y='metaROI_FTP_SUVR', color=\"blue\")\n",
    "plt.show()\n",
    "\n",
    "print(scipy.stats.pearsonr(adnitauda['BACS_ExecutiveFunctionLASSONet_NSSpos'], adnitauda['metaROI_FTP_SUVR']))\n",
    "sns.regplot(data=adnitauda, x='BACS_ExecutiveFunctionLASSONet_NSSpos', y='metaROI_FTP_SUVR', color=\"yellow\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/scipy/stats/stats.py:4023: PearsonRConstantInputWarning: An input array is constant; the correlation coefficient is not defined.\n",
      "  warnings.warn(PearsonRConstantInputWarning())\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(-0.19208516306515808, 0.029844614567154107)\n",
      "(-0.17394942763865956, 0.049564306405027125)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# generate null distribution of networks with same number of edges\n",
    "bootstrap = 1000 # number of iterations\n",
    "numedge = bestfit_posfeat # number of positive connections from LASSO+BIC\n",
    "numedge = 1\n",
    "input_params = len(OAtrain_LASSO_vcts[0][OAtrain_LASSO_vcts[0]!=0]) # nonzero rsFC connections from Brainnetome\n",
    "BN_adni_tau = BN_adni[:,:,adnitauda.index]\n",
    "\n",
    "cogNSS_corr = []\n",
    "for _ in range(bootstrap):\n",
    "    nullnet_sums = []\n",
    "    # random network with same number of connections as LASSO+BIC\n",
    "    random_idx = random.sample(range(0, input_params), numedge)\n",
    "    nullnet = np.zeros(len(OAtrain_LASSO_vcts[0]))\n",
    "    nullnet[random_idx] = 1\n",
    "    nullnet_matrix = np.reshape(nullnet, BN_adni_tau.shape[0:2]) # reshape to 246 x 246 matrix\n",
    "    nullnet_mask = np.isin(nullnet_matrix, 1)\n",
    "    for subj in range(0, BN_adni_tau.shape[2]):\n",
    "        subj_connmat = BN_adni_tau[:,:,subj] # each subject's conn matrix\n",
    "        pos_sum = np.nansum(BN_adni_tau[:,:,subj][nullnet_mask])\n",
    "        nullnet_sums.append(pos_sum)\n",
    "    # subset to only subjects with tau\n",
    "    #nullnet_sums = list(itertools.compress(nullnet_sums, tau_nanrm))\n",
    "    rcorr = scipy.stats.pearsonr(nullnet_sums, adnitauda['metaROI_FTP_SUVR'])[0] # correlation between null NSS and tau\n",
    "    cogNSS_corr.append(rcorr)\n",
    "\n",
    "# compute correlations for observed networks\n",
    "EMLASSONet_corr = scipy.stats.pearsonr(adnitauda['metaROI_FTP_SUVR'], adnitauda['BACS_EpisodicMemoryLASSONet_NSSpos'])\n",
    "print(EMLASSONet_corr)\n",
    "EFLASSONet_corr = scipy.stats.pearsonr(adnitauda['metaROI_FTP_SUVR'], adnitauda['BACS_ExecutiveFunctionLASSONet_NSSpos'])\n",
    "print(EFLASSONet_corr)\n",
    "\n",
    "# add observed correlations\n",
    "cogNSS_corr.append(EMLASSONet_corr[0])\n",
    "cogNSS_corr.append(EFLASSONet_corr[0])\n",
    "\n",
    "# plot null distribution\n",
    "p1 = sns.histplot(cogNSS_corr, color='grey')\n",
    "for bar in p1.patches: # color values red 2 sd below mean\n",
    "    if bar.get_x() <= np.mean(cogNSS_corr)-2*np.std(cogNSS_corr):\n",
    "        bar.set_facecolor('red')\n",
    "plt.axvline(EMLASSONet_corr[0], color=\"#2a4d69\") # vertical line at observed EM correlation\n",
    "plt.axvline(EFLASSONet_corr[0], color=\"#fbc02d\") # vertical line at observed EF correlation\n",
    "p1.set_xlabel(\"Correlation coefficient (Pearson's r)\", fontsize = 12)\n",
    "p1.set_ylabel(\"Frequency\", fontsize = 12)\n",
    "histfig = p1.figure\n",
    "#histfig.savefig(os.path.join(home_dir,'HAI2023','abstract','figures','nullhist.eps'), format='eps', dpi=1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jacob/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:12: FutureWarning: casting timedelta64[ns] values to int64 with .astype(...) is deprecated and will raise in a future version. Use .view(...) instead.\n",
      "  if sys.path[0] == '':\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>SID</th>\n",
       "      <th>rs_num</th>\n",
       "      <th>Image Data ID</th>\n",
       "      <th>Group</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Visit</th>\n",
       "      <th>Modality</th>\n",
       "      <th>Description</th>\n",
       "      <th>...</th>\n",
       "      <th>phase</th>\n",
       "      <th>viscode</th>\n",
       "      <th>userdate</th>\n",
       "      <th>examdate</th>\n",
       "      <th>adni_mem</th>\n",
       "      <th>adni_ef</th>\n",
       "      <th>adni_lan</th>\n",
       "      <th>adni_vs</th>\n",
       "      <th>adni_ef2</th>\n",
       "      <th>timediff</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0</td>\n",
       "      <td>002_S_0413</td>\n",
       "      <td>1</td>\n",
       "      <td>I1221056</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>90</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>ADNI3</td>\n",
       "      <td>m162</td>\n",
       "      <td>2019-09-03</td>\n",
       "      <td>2019-08-22</td>\n",
       "      <td>2.328</td>\n",
       "      <td>2.412</td>\n",
       "      <td>2.308</td>\n",
       "      <td>0.932</td>\n",
       "      <td>1.863</td>\n",
       "      <td>-5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0</td>\n",
       "      <td>002_S_0413</td>\n",
       "      <td>1</td>\n",
       "      <td>I1221056</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>90</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>ADNI3</td>\n",
       "      <td>m156</td>\n",
       "      <td>2019-09-03</td>\n",
       "      <td>2019-08-22</td>\n",
       "      <td>1.842</td>\n",
       "      <td>2.376</td>\n",
       "      <td>2.233</td>\n",
       "      <td>0.706</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>1</td>\n",
       "      <td>002_S_1155</td>\n",
       "      <td>1</td>\n",
       "      <td>I1270009</td>\n",
       "      <td>MCI</td>\n",
       "      <td>M</td>\n",
       "      <td>70</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>ADNI3</td>\n",
       "      <td>m150</td>\n",
       "      <td>2019-06-13</td>\n",
       "      <td>2019-05-13</td>\n",
       "      <td>1.657</td>\n",
       "      <td>1.525</td>\n",
       "      <td>0.874</td>\n",
       "      <td>0.932</td>\n",
       "      <td>1.400</td>\n",
       "      <td>-3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>1</td>\n",
       "      <td>002_S_1155</td>\n",
       "      <td>1</td>\n",
       "      <td>I1270009</td>\n",
       "      <td>MCI</td>\n",
       "      <td>M</td>\n",
       "      <td>70</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>ADNI3</td>\n",
       "      <td>m144</td>\n",
       "      <td>2019-06-13</td>\n",
       "      <td>2019-05-13</td>\n",
       "      <td>1.523</td>\n",
       "      <td>1.479</td>\n",
       "      <td>0.800</td>\n",
       "      <td>0.706</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>2</td>\n",
       "      <td>002_S_1261</td>\n",
       "      <td>1</td>\n",
       "      <td>I1270025</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>83</td>\n",
       "      <td>y2</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>ADNI3</td>\n",
       "      <td>m144</td>\n",
       "      <td>2019-03-28</td>\n",
       "      <td>2019-03-14</td>\n",
       "      <td>0.265</td>\n",
       "      <td>-0.285</td>\n",
       "      <td>0.194</td>\n",
       "      <td>0.706</td>\n",
       "      <td>-0.466</td>\n",
       "      <td>-48.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>921</th>\n",
       "      <td>340</td>\n",
       "      <td>941_S_6803</td>\n",
       "      <td>1</td>\n",
       "      <td>I1310788</td>\n",
       "      <td>MCI</td>\n",
       "      <td>F</td>\n",
       "      <td>75</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>ADNI3</td>\n",
       "      <td>bl</td>\n",
       "      <td>2019-10-01</td>\n",
       "      <td>2019-09-17</td>\n",
       "      <td>-0.877</td>\n",
       "      <td>-1.024</td>\n",
       "      <td>-0.544</td>\n",
       "      <td>-0.674</td>\n",
       "      <td>-1.273</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>922</th>\n",
       "      <td>344</td>\n",
       "      <td>941_S_6998</td>\n",
       "      <td>1</td>\n",
       "      <td>I1486326</td>\n",
       "      <td>CN</td>\n",
       "      <td>M</td>\n",
       "      <td>57</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>ADNI3</td>\n",
       "      <td>bl</td>\n",
       "      <td>2021-10-05</td>\n",
       "      <td>2021-10-05</td>\n",
       "      <td>1.988</td>\n",
       "      <td>1.525</td>\n",
       "      <td>0.276</td>\n",
       "      <td>0.932</td>\n",
       "      <td>1.400</td>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>923</th>\n",
       "      <td>345</td>\n",
       "      <td>941_S_7041</td>\n",
       "      <td>1</td>\n",
       "      <td>I1544472</td>\n",
       "      <td>MCI</td>\n",
       "      <td>F</td>\n",
       "      <td>73</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>ADNI3</td>\n",
       "      <td>bl</td>\n",
       "      <td>2022-02-25</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.978</td>\n",
       "      <td>1.789</td>\n",
       "      <td>0.031</td>\n",
       "      <td>0.549</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>924</th>\n",
       "      <td>346</td>\n",
       "      <td>941_S_7046</td>\n",
       "      <td>1</td>\n",
       "      <td>I1553936</td>\n",
       "      <td>CN</td>\n",
       "      <td>F</td>\n",
       "      <td>71</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>ADNI3</td>\n",
       "      <td>bl</td>\n",
       "      <td>2022-04-06</td>\n",
       "      <td>2022-04-06</td>\n",
       "      <td>1.562</td>\n",
       "      <td>1.431</td>\n",
       "      <td>1.204</td>\n",
       "      <td>0.031</td>\n",
       "      <td>1.289</td>\n",
       "      <td>29.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>925</th>\n",
       "      <td>347</td>\n",
       "      <td>941_S_7051</td>\n",
       "      <td>1</td>\n",
       "      <td>I1553010</td>\n",
       "      <td>CN</td>\n",
       "      <td>M</td>\n",
       "      <td>64</td>\n",
       "      <td>sc</td>\n",
       "      <td>fMRI</td>\n",
       "      <td>Axial MB rsfMRI (Eyes Open)</td>\n",
       "      <td>...</td>\n",
       "      <td>ADNI3</td>\n",
       "      <td>bl</td>\n",
       "      <td>2022-03-30</td>\n",
       "      <td>2022-03-30</td>\n",
       "      <td>0.628</td>\n",
       "      <td>1.001</td>\n",
       "      <td>1.310</td>\n",
       "      <td>0.962</td>\n",
       "      <td>0.758</td>\n",
       "      <td>23.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>437 rows × 39 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     index         SID  rs_num Image Data ID Group Sex  Age Visit Modality  \\\n",
       "12       0  002_S_0413       1      I1221056    CN   F   90    y2     fMRI   \n",
       "13       0  002_S_0413       1      I1221056    CN   F   90    y2     fMRI   \n",
       "28       1  002_S_1155       1      I1270009   MCI   M   70    y2     fMRI   \n",
       "29       1  002_S_1155       1      I1270009   MCI   M   70    y2     fMRI   \n",
       "44       2  002_S_1261       1      I1270025    CN   F   83    y2     fMRI   \n",
       "..     ...         ...     ...           ...   ...  ..  ...   ...      ...   \n",
       "921    340  941_S_6803       1      I1310788   MCI   F   75    sc     fMRI   \n",
       "922    344  941_S_6998       1      I1486326    CN   M   57    sc     fMRI   \n",
       "923    345  941_S_7041       1      I1544472   MCI   F   73    sc     fMRI   \n",
       "924    346  941_S_7046       1      I1553936    CN   F   71    sc     fMRI   \n",
       "925    347  941_S_7051       1      I1553010    CN   M   64    sc     fMRI   \n",
       "\n",
       "                     Description  ...  phase viscode    userdate   examdate  \\\n",
       "12   Axial MB rsfMRI (Eyes Open)  ...  ADNI3    m162  2019-09-03 2019-08-22   \n",
       "13   Axial MB rsfMRI (Eyes Open)  ...  ADNI3    m156  2019-09-03 2019-08-22   \n",
       "28   Axial MB rsfMRI (Eyes Open)  ...  ADNI3    m150  2019-06-13 2019-05-13   \n",
       "29   Axial MB rsfMRI (Eyes Open)  ...  ADNI3    m144  2019-06-13 2019-05-13   \n",
       "44   Axial MB rsfMRI (Eyes Open)  ...  ADNI3    m144  2019-03-28 2019-03-14   \n",
       "..                           ...  ...    ...     ...         ...        ...   \n",
       "921  Axial MB rsfMRI (Eyes Open)  ...  ADNI3      bl  2019-10-01 2019-09-17   \n",
       "922  Axial MB rsfMRI (Eyes Open)  ...  ADNI3      bl  2021-10-05 2021-10-05   \n",
       "923  Axial MB rsfMRI (Eyes Open)  ...  ADNI3      bl  2022-02-25 2022-03-01   \n",
       "924  Axial MB rsfMRI (Eyes Open)  ...  ADNI3      bl  2022-04-06 2022-04-06   \n",
       "925  Axial MB rsfMRI (Eyes Open)  ...  ADNI3      bl  2022-03-30 2022-03-30   \n",
       "\n",
       "     adni_mem  adni_ef adni_lan adni_vs  adni_ef2 timediff  \n",
       "12      2.328    2.412    2.308   0.932     1.863     -5.0  \n",
       "13      1.842    2.376    2.233   0.706       NaN     -5.0  \n",
       "28      1.657    1.525    0.874   0.932     1.400     -3.0  \n",
       "29      1.523    1.479    0.800   0.706       NaN     -3.0  \n",
       "44      0.265   -0.285    0.194   0.706    -0.466    -48.0  \n",
       "..        ...      ...      ...     ...       ...      ...  \n",
       "921    -0.877   -1.024   -0.544  -0.674    -1.273      1.0  \n",
       "922     1.988    1.525    0.276   0.932     1.400     36.0  \n",
       "923     0.003    0.978    1.789   0.031     0.549     15.0  \n",
       "924     1.562    1.431    1.204   0.031     1.289     29.0  \n",
       "925     0.628    1.001    1.310   0.962     0.758     23.0  \n",
       "\n",
       "[437 rows x 39 columns]"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# source longitudinal cognitive data for ADNI and save to spreadsheet for R analysis\n",
    "cogda_fname = os.path.join(home_dir, 'sample_spreadsheets','adni_uwnpsychsum.csv')\n",
    "cogda = pd.read_csv(cogda_fname)\n",
    "cogda[cogda.rid==413]\n",
    "cogda.rename(columns={\"rid\":\"RID\"}, inplace=True)\n",
    "cogda.RID = cogda.RID.astype(str).str.zfill(4)\n",
    "adnicogda = pd.merge(adnida, cogda, on=['RID'], how='left')\n",
    "adnicogda['examdate'] = pd.to_datetime(adnicogda.examdate)\n",
    "adnicogda['Acq Date'] = pd.to_datetime(adnicogda['Acq Date'])\n",
    "adnicogda['timediff'] = adnicogda.examdate - adnicogda['Acq Date']\n",
    "adnicogda = adnicogda[adnicogda['timediff'].notna()]\n",
    "adnicogda['timediff'] = adnicogda['timediff'].astype(int)/(10**9)/60/60/24# convert to int lol\n",
    "adnicogda = adnicogda[adnicogda.timediff > -180] # only prospective cognitive data\n",
    "adnicogda"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "# get RAVLT scores from ADNIMERGE\n",
    "rvltda_fname = os.path.join(home_dir,'sample_spreadsheets','ADNIMERGE.csv')\n",
    "rvltda = pd.read_csv(rvltda_fname)\n",
    "rvltda.RID = rvltda.RID.astype(str).str.zfill(4)\n",
    "rvltda['examdate'] = pd.to_datetime(rvltda.EXAMDATE)\n",
    "rvltda = rvltda[['RID','examdate','RAVLT_immediate','RAVLT_forgetting']]\n",
    "adnicogda = pd.merge(adnicogda, rvltda, on=['RID','examdate'], how=\"left\")\n",
    "adnicogda.to_csv(os.path.join(home_dir,'data','adni_cog-pet-networkstrength_long.csv'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Compile spreadsheet of longitudinal prospective cognitive data to analyze with network strength in R\n",
    "\n",
    "# source prospective longitudinal cognitive testing data\n",
    "longcog_tests = {'cvlt sdfr':[],'cvlt ldfr':[],'vri recall total':[],'vrii recall total':[], #episodic memory\n",
    "             'cvlt rec false positives':[],'logical memory':[], # additional memory measures\n",
    "             'ds total':[], 'mmse':[], # general measures\n",
    "             'trail a':[], 'trail b':[], 'stroop correct in 60 s':[], 'digit symbol':[], # executive function\n",
    "             'sa: cvlt post-delay':[]} # working memory\n",
    "\n",
    "cog_dates = []\n",
    "long_ids = []\n",
    "for cogtp_dir in prosp_cogdirs[:]:\n",
    "    subid = os.path.basename(os.path.dirname(cogtp_dir))\n",
    "    long_ids.append(subid) # list of lblids\n",
    "    cog_datestr = os.path.basename(cogtp_dir).split('_')[-1]\n",
    "    cog_date = datetime.datetime.strptime(cog_datestr, '%Y-%m-%d')\n",
    "    cog_dates.append(cog_date) # list of cognitive testing dates\n",
    "    cog_fname = os.path.join(cogtp_dir,'cognitive_test.tab')\n",
    "    # compute time between resting state scan and cognitive score and select directory closest in time\n",
    "    for testname in longcog_tests.keys():\n",
    "        cogda = pd.read_csv(cog_fname, sep='\\t')\n",
    "        score = cogda[testname].iloc[0]\n",
    "        longcog_tests[testname].append(score)        \n",
    "    \n",
    "# create new longform dataframe\n",
    "d = {'SID':long_ids, 'cogdate':cog_dates}\n",
    "longcogda = pd.DataFrame(d)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# compute z-scores using cross-sectional mean/SD\n",
    "for test in longcog_tests.keys():\n",
    "    cs_testmean = np.mean(OA_networks_df[test])\n",
    "    cs_testsd = np.std(OA_networks_df[test])\n",
    "    longcogda[test] = longcog_tests[test]\n",
    "    longcogda[test+'_long_zscore'] = (longcogda[test] - cs_testmean)/cs_testsd\n",
    "    \n",
    "# invert (change sign of) Trails A and B z-scores\n",
    "longcogda['trail a_long_zscore_inverted'] = -1*longcogda['trail a_long_zscore']\n",
    "longcogda['trail b_long_zscore_inverted'] = -1*longcogda['trail b_long_zscore']\n",
    "\n",
    "# compute longitudinal Episodic Memory composite score\n",
    "longcogda['EpisodicMemory_long'] = longcogda[['cvlt sdfr_long_zscore',\n",
    "                                              'cvlt ldfr_long_zscore',\n",
    "                                              'vri recall total_long_zscore',\n",
    "                                              'vrii recall total_long_zscore']].mean(axis=1)                                             \n",
    "# compute longitduinal Executive Function composite score\n",
    "longcogda['ExecutiveFunction_long'] = longcogda[['trail a_long_zscore_inverted',\n",
    "                                                 'trail b_long_zscore_inverted',\n",
    "                                                 'stroop correct in 60 s_long_zscore',\n",
    "                                                 'digit symbol_long_zscore']].mean(axis=1)\n",
    "# merge into longform spreadsheet for LME modeling in R\n",
    "OA_networks_df_nocscog = OA_networks_df.loc[:, ~OA_networks_df.columns.isin(longcog_tests.keys())]\n",
    "cogtaunet_longda = longcogda.merge(OA_networks_df_nocscog, on='SID', how='left')\n",
    "cogtaunet_longda['interval'] = cogtaunet_longda['cogdate'] - cogtaunet_longda['scandate']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "cogtaunet_longda.to_csv(os.path.join(base_dir,'jagust','ziontzja','rsfmri_networks','data','network_results','cog-pet-networkstrength_long.csv'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# LASSO UoI to define network\n",
    "X = OAtrain_LASSO_vcts\n",
    "y = OA_behav_nanrm\n",
    "\n",
    "num_nodes = BN_OAsubs_nanrm.shape[0]\n",
    "input_params = sum(range(num_nodes))\n",
    "\n",
    "uoi_lasso = UoI_Lasso()\n",
    "uoi_lasso.fit(X, y)\n",
    "yhat = uoi_lasso.predict(X)\n",
    "\n",
    "len(uoi_lasso.coef_[uoi_lasso.coef_!=0])\n",
    "beta_list = uoi_lasso.coef_\n",
    "bmatrix = np.reshape(beta_list, BN_OAsubs_nanrm.shape[0:2])\n",
    "bmatrix_posmask = np.where(bmatrix > 0, 1, 0)\n",
    "bmatrix_negmask = np.where(bmatrix < 0, 1, 0)\n",
    "# copy lower triangle to upper for BIS viewer\n",
    "bmatrix_posNet = bmatrix_posmask + bmatrix_posmask.T - np.diag(np.diag(bmatrix_posmask))\n",
    "bmatrix_negNet = bmatrix_negmask + bmatrix_negmask.T - np.diag(np.diag(bmatrix_negmask))\n",
    "np.savetxt(os.path.join(home_dir,'data','network_csvfiles','OA_'+behav_outcome+'UoINet_pos.csv'), bmatrix_posNet, delimiter=\",\")\n",
    "np.savetxt(os.path.join(home_dir,'data','network_csvfiles','OA_'+behav_outcome+'UoINet_neg.csv'), bmatrix_negNet, delimiter=\",\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "results_df['MetaROI_wMean_PVC']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(\"# parameters input into model: \"+str(input_params))\n",
    "print(\"# positive features in model: \"+str(bestfit_posfeat))\n",
    "print(\"# negative features in model: \"+str(bestfit_negfeat))\n",
    "\n",
    "bmatrix = np.reshape(beta_list, BNuniqoa_nanrm.shape[0:2])\n",
    "bmatrix_posmask = np.where(bmatrix > 0, 1, 0)\n",
    "bmatrix_negmask = np.where(bmatrix < 0, 1, 0)\n",
    "# copy lower triangle to upper for BIS viewer\n",
    "bmatrix_posNet = bmatrix_posmask + bmatrix_posmask.T - np.diag(np.diag(bmatrix_posmask))\n",
    "bmatrix_negNet = bmatrix_negmask + bmatrix_negmask.T - np.diag(np.diag(bmatrix_negmask))\n",
    "np.savetxt(os.path.join(home_dir,'data','network_csvfiles','OA_'+behav_outcome+'LASSONet_pos.csv'), bmatrix_posNet, delimiter=\",\")\n",
    "np.savetxt(os.path.join(home_dir,'data','network_csvfiles','OA_'+behav_outcome+'LASSONet_neg.csv'), bmatrix_negNet, delimiter=\",\")\n",
    "\n",
    "# compute network summary statistic (overall network strength)\n",
    "pos_netmask = np.isin(bmatrix_posmask, 1)\n",
    "OA_SCAD_posmask = pos_netmask\n",
    "neg_netmask = np.isin(bmatrix_negmask, 1)\n",
    "OA_SCAD_negmask = neg_netmask\n",
    "SCADNet_possums = []\n",
    "SCADNet_negsums = []\n",
    "for subj in range(0, BN_uniqoa.shape[2]):\n",
    "    subj_connmat = BN_uniqoa[:,:,subj] # each subject's conn matrix\n",
    "    pos_sum = np.sum(BN_uniqoa[:,:,subj][pos_netmask])\n",
    "    neg_sum = np.sum(BN_uniqoa[:,:,subj][neg_netmask])\n",
    "    SCADNet_possums.append(pos_sum)\n",
    "    SCADNet_negsums.append(neg_sum)\n",
    "    \n",
    "# build model on TRAIN subs (OA)\n",
    "OA_fit_pos = np.polyfit(SCADNet_possums, y, 1)\n",
    "OA_fit_neg = np.polyfit(SCADNet_negsums, y, 1)\n",
    "# fit with both pos and neg edges\n",
    "X = np.array([SCADNet_possums,SCADNet_negsums])\n",
    "X = np.reshape(X, (X.shape), order='F').T\n",
    "OA_fit_both = LinearRegression(fit_intercept=True).fit(X,y)     "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# perform CPM with SCAD+BIC for edge selection using leave-one-out cross validation to predict EM from resting state connectivity\n",
    "BNuniqoa_nanrm = BN_uniqoa[:,:,OA_nanrm]\n",
    "predbehav_pos = []\n",
    "predbehav_neg = []\n",
    "predbehav_both = []\n",
    "\n",
    "intersectionNet_pos = np.zeros(BNuniqoa_nanrm.shape[0:2])\n",
    "intersectionNet_neg = np.zeros(BNuniqoa_nanrm.shape[0:2])\n",
    "\n",
    "for leftout in range(0, BNuniqoa_nanrm.shape[2]):\n",
    "    print(\"leaving out subject \"+unique_OAsubjda['SID'][leftout]+\" (\"+str(leftout+1)+\"/\"+str(BNuniqoa_nanrm.shape[2])+\")\")\n",
    "    \n",
    "    # leave out subject from connectivity matrices and behavior\n",
    "    \n",
    "    all_mats = BNuniqoa_nanrm\n",
    "    train_mats = np.delete(all_mats, leftout, axis=2)\n",
    "    \n",
    "    train_behav = OA_behav_nanrm.to_numpy()\n",
    "    train_behav = np.delete(train_behav, leftout)\n",
    "    \n",
    "    #reshape train matrices for SCAD (lower triangle only)\n",
    "    \n",
    "    train_vcts = []\n",
    "    for sub in range(0,train_mats.shape[2]):\n",
    "        subslice = train_mats[:,:,sub] # each slice of cube is a subject's matrix\n",
    "        subtril = np.tril(subslice, k=0) # upper triangle set to 0\n",
    "        edgelist = np.reshape(subtril, len(subtril)**2) # reshape each matrix to a list with length 246*246\n",
    "        edgelist = np.nan_to_num(edgelist) # change any nan to 0 (so pycasso model doesn't fail)\n",
    "        train_vcts.append(edgelist)\n",
    "    \n",
    "    # SCAD sparse linear model for edge selection\n",
    "       \n",
    "    SCADmodel = pycasso.Solver(train_vcts, train_behav,\n",
    "                               lambdas=(1000, 0.05),\n",
    "                               gamma=3.7,\n",
    "                               family='gaussian', penalty='l1',\n",
    "                               useintercept=False, prec=1e-7, max_ite=1000, verbose=False)\n",
    "    SCADmodel.train()\n",
    "    \n",
    "    # BIC to assess model fit\n",
    "    \n",
    "    BICs = []\n",
    "    for lidx in range(len(SCADmodel.coef()['df'])):\n",
    "        y_true = train_behav\n",
    "        y_pred = SCADmodel.predict(lambdidx=lidx)\n",
    "        n = len(y_true)\n",
    "        LL = -n/2 * (1 + np.log(np.mean((y_true - y_pred)**2)))\n",
    "        nzf = SCADmodel.coef()['df'][lidx] # number of nonzero features in the fitted model\n",
    "        BIC = -2*LL + np.log(n)*nzf # BIC definition\n",
    "        BICs.append(BIC)\n",
    "\n",
    "    # visualize BICs\n",
    "    d = {'BIC':BICs,\n",
    "     '# nonzero features in model':SCADmodel.coef()['df'],\n",
    "     'model #':range(0,len(SCADmodel.coef()['df']))}\n",
    "    df = pd.DataFrame(data=d)\n",
    "    sns.scatterplot(data=df, x=\"# nonzero features in model\", y=\"BIC\")\n",
    "    #plt.show()\n",
    "        \n",
    "    bestfit_lidx = np.argmin(BICs) # select model with lowest BIC\n",
    "    #bestfit_lidx = np.argmax(SCADmodel.coef()['df']) # select model with greatest number of features\n",
    "    bestfit_nzf = SCADmodel.coef()['df'][bestfit_lidx]\n",
    "    \n",
    "    # define masks from nonzero parameters\n",
    "    \n",
    "    if bestfit_nzf > 0:\n",
    "        beta_list = SCADmodel.coef()['beta'][bestfit_lidx]\n",
    "        bmatrix = np.reshape(beta_list, train_mats.shape[0:2]) # is this reshaping correctly?\n",
    "        '''\n",
    "    # ElasticNet\n",
    "    #from sklearn.linear_model import ElasticNetCV\n",
    "    #regr = ElasticNetCV(l1_ratio=1, cv=5, random_state=0, n_alphas=100)\n",
    "    regr = ElasticNet(l1_ratio=.95,random_state=0)\n",
    "    regr.fit(train_vcts, train_behav)\n",
    "    if len(regr.coef_)>0:\n",
    "        beta_list = regr.coef_\n",
    "        bmatrix = np.reshape(beta_list, train_mats.shape[0:2])\n",
    "        '''\n",
    "        pos_SCADNet = np.where(bmatrix > 0, 1, 0)\n",
    "        neg_SCADNet = np.where(bmatrix < 0, 1, 0)\n",
    "        both_SCADNet = np.where(bmatrix != 0, 1, 0)\n",
    "        \n",
    "        # add matrix to others to find intersection\n",
    "        intersectionNet_pos = np.add(intersectionNet_pos, pos_SCADNet)\n",
    "        intersectionNet_neg = np.add(intersectionNet_neg, neg_SCADNet)\n",
    "        \n",
    "        numposedges = len(pos_SCADNet[pos_SCADNet > 0])\n",
    "        numnegedges = len(neg_SCADNet[neg_SCADNet > 0])\n",
    "        print(\"Best-fitting model has \"+str(numposedges)+\" positive edges and \"+str(numnegedges)+\" negative edges.\")\n",
    "        pos_netmask = np.isin(pos_SCADNet, 1)\n",
    "        neg_netmask = np.isin(neg_SCADNet, 1) \n",
    "        both_netmask = np.isin(both_SCADNet, 1)\n",
    "        #pos_bmatrix = np.where(bmatrix > 0, bmatrix, 0)\n",
    "        #neg_bmatrix = np.where(bmatrix < 0, bmatrix, 0)\n",
    "\n",
    "        # compute sum of network edges in train subjects\n",
    "\n",
    "        SCADNet_possums = []\n",
    "        SCADNet_negsums = []\n",
    "        SCADNet_bothsums = []\n",
    "        #train_mats = BNuniqoa_nanrm\n",
    "        #train_mats = np.delete(train_mats, leftout, axis=2)\n",
    "        for subj in range(0, train_mats.shape[2]):\n",
    "            subj_connmat = train_mats[:,:,subj] # each subject's conn matrix\n",
    "            pos_sum = np.sum(train_mats[:,:,subj][pos_netmask])\n",
    "            neg_sum = np.sum(train_mats[:,:,subj][neg_netmask])\n",
    "            both_sum = np.sum(train_mats[:,:,subj][both_netmask])\n",
    "            #pos_sum = np.sum(np.matmul(np.nan_to_num(train_mats[:,:,subj]), pos_bmatrix))\n",
    "            #neg_sum = np.sum(np.matmul(np.nan_to_num(train_mats[:,:,subj]), neg_bmatrix))\n",
    "            SCADNet_possums.append(pos_sum)\n",
    "            SCADNet_negsums.append(neg_sum)\n",
    "            SCADNet_bothsums.append(both_sum)\n",
    "\n",
    "        # build model on train subs\n",
    "\n",
    "        fit_pos = np.polyfit(SCADNet_possums, train_behav, 1)\n",
    "        fit_neg = np.polyfit(SCADNet_negsums, train_behav, 1)\n",
    "        # fit multiple linear regression model for both positive and negative edges\n",
    "        X = np.array([SCADNet_possums,SCADNet_negsums])\n",
    "        X = np.reshape(X, (X.shape), order='F').T\n",
    "        y = train_behav\n",
    "        fit_both = LinearRegression(fit_intercept=True).fit(X,y)\n",
    "\n",
    "        # run model on test sub\n",
    "\n",
    "        test_mat = all_mats[:,:,leftout]\n",
    "        test_possum = np.sum(test_mat[pos_netmask])\n",
    "        test_negsum = np.sum(test_mat[neg_netmask])\n",
    "        test_bothsum = np.sum(test_mat[both_netmask])\n",
    "\n",
    "        behav_pred_pos = fit_pos[0]*test_possum + fit_pos[1]\n",
    "        behav_pred_neg = fit_neg[0]*test_negsum + fit_neg[1]\n",
    "        behav_pred_both = fit_both.coef_[0]*test_possum + fit_both.coef_[1]*test_negsum + fit_both.intercept_\n",
    "        predbehav_pos.append(behav_pred_pos)\n",
    "        predbehav_neg.append(behav_pred_neg)\n",
    "        predbehav_both.append(behav_pred_both)\n",
    "    else:\n",
    "        print(\"Best fitting model has 0 edges, excluding subject\")\n",
    "        predbehav_pos.append(np.nan)\n",
    "        predbehav_neg.append(np.nan)\n",
    "        predbehav_both.append(np.nan)\n",
    "    \n",
    "print(\"Behavior predicted from connectivity using SCAD+BIC and leave-one-out cross validation!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(len(np.array(predbehav_both)[~np.isnan(predbehav_both)]))\n",
    "no_sub = BNuniqoa_nanrm.shape[2]\n",
    "pos_interNet = np.where(intersectionNet_pos > no_sub-1, 1, 0)\n",
    "numpos_interedges = len(pos_interNet[pos_interNet > 0])\n",
    "neg_interNet = np.where(intersectionNet_neg > no_sub-1, 1, 0)\n",
    "numneg_interedges = len(neg_interNet[neg_interNet > 0])\n",
    "print(\"Intersection of all cross-validated networks has \"+str(numpos_interedges)+\" positive edges and \"+str(numneg_interedges)+\" negative edges.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# compare predicted and observed behavior\n",
    "unique_OAsubjda['SCADPos_predbehav'] = predbehav_pos\n",
    "unique_OAsubjda['SCADNeg_predbehav'] = predbehav_neg\n",
    "unique_OAsubjda['SCADboth_predbehav'] = predbehav_both\n",
    "SCADPos_predbehav = unique_OAsubjda['SCADPos_predbehav'][~unique_OAsubjda['SCADPos_predbehav'].isna()]\n",
    "SCADNeg_predbehav = unique_OAsubjda['SCADNeg_predbehav'][~unique_OAsubjda['SCADNeg_predbehav'].isna()]\n",
    "SCADboth_predbehav = unique_OAsubjda['SCADboth_predbehav'][~unique_OAsubjda['SCADboth_predbehav'].isna()]\n",
    "BehavOutcome = unique_OAsubjda[behav_outcome][~unique_OAsubjda['SCADboth_predbehav'].isna()]\n",
    "# plot\n",
    "sns.regplot(data=unique_OAsubjda, x=behav_outcome, y=\"SCADPos_predbehav\", color=\"blue\")\n",
    "#plt.xlim(-3, 1.5)\n",
    "#plt.ylim(-3, 1.5)\n",
    "print(scipy.stats.pearsonr(SCADPos_predbehav, BehavOutcome))\n",
    "sns.regplot(data=unique_OAsubjda, x=behav_outcome, y=\"SCADNeg_predbehav\", color=\"orange\")\n",
    "#plt.xlim(-3, 1.5)\n",
    "#plt.ylim(-3, 1.5)\n",
    "print(scipy.stats.pearsonr(SCADNeg_predbehav, BehavOutcome))\n",
    "sns.regplot(data=unique_OAsubjda, x=behav_outcome, y=\"SCADboth_predbehav\", color=\"black\")\n",
    "#plt.xlim(-3, 1.5)\n",
    "#plt.ylim(-2, 1.5)\n",
    "print(scipy.stats.pearsonr(SCADboth_predbehav, BehavOutcome))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# reshape 246*246*n 3D connectivity matrix to nested list for sparse linear regression in YA\n",
    "all_mats = BNuniqya_nanrm\n",
    "YAtrain_SCAD_vcts = []\n",
    "for sub in range(0,all_mats.shape[2]):\n",
    "    subslice = all_mats[:,:,sub] # each slice of cube is a subject's matrix\n",
    "    subtril = np.tril(subslice, k=0) # upper triangle is 0\n",
    "    edgelist = np.reshape(subtril, len(subtril)**2) # reshape each matrix to a list with length 246*246\n",
    "    edgelist = np.nan_to_num(edgelist) # change nan to 0 (so SCAD model doesn't fail)\n",
    "    YAtrain_SCAD_vcts.append(edgelist)\n",
    "len(YAtrain_SCAD_vcts[0][YAtrain_SCAD_vcts[0]!=0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# LASSO+BIC modeling to define network in YA\n",
    "x = YAtrain_SCAD_vcts\n",
    "y = YA_behav_nanrm\n",
    "\n",
    "num_nodes = BNuniqya_nanrm.shape[0]\n",
    "input_params = sum(range(num_nodes))\n",
    "\n",
    "SCADmodel = pycasso.Solver(x, y,\n",
    "                lambdas=(1000, 0.05), # iterate over lambda parameter, use model with best BIC fit\n",
    "                gamma=3.7, \n",
    "                family='gaussian', penalty='l1',\n",
    "                useintercept=False, prec=1e-7, max_ite=1000, verbose=True) # can leave these at defaults\n",
    "SCADmodel.train()\n",
    "\n",
    "# BIC to assess model fit\n",
    "BICs = []\n",
    "# iterate over each lambda value from the model, compute BIC to determine best-fitting model\n",
    "for ii in range(len(SCADmodel.coef()['df'])):\n",
    "    y_true = YA_behav_nanrm # observed values\n",
    "    y_pred = SCADmodel.predict(lambdidx=ii) # values predicted by model at this lambda\n",
    "    n = len(YA_behav_nanrm) # sample size\n",
    "    #LL = np.sum(np.log(y_true*y_pred + (1-y_true)*(1-y_pred))) # bad log likelihood calculation\n",
    "    LL = -n/2 * (1 + np.log(np.mean((y_true - y_pred)**2))) # log likelihood from Ankit\n",
    "    nzf = SCADmodel.coef()['df'][ii] # number of nonzero features in the fitted model\n",
    "\n",
    "    # BIC definition\n",
    "    BIC = -2*LL + np.log(n)*nzf\n",
    "    BICs.append(BIC)   \n",
    "\n",
    "bestfit_lidx = np.argmin(BICs) # select model with lowest BIC\n",
    "#bestfit_lidx = np.argmax(SCADmodel.coef()['df']) # select model with greatest number of features\n",
    "bestfit_nzf = SCADmodel.coef()['df'][bestfit_lidx]\n",
    "beta_list = SCADmodel.coef()['beta'][bestfit_lidx]\n",
    "bestfit_posfeat = len(beta_list[beta_list>0])\n",
    "bestfit_negfeat = len(beta_list[beta_list<0])\n",
    "print(\"# parameters input into model: \"+str(input_params))\n",
    "print(\"# positive features in model: \"+str(bestfit_posfeat))\n",
    "print(\"# negative features in model: \"+str(bestfit_negfeat))\n",
    "\n",
    "bmatrix = np.reshape(beta_list, BNuniqoa_nanrm.shape[0:2])\n",
    "bmatrix_posmask = np.where(bmatrix > 0, 1, 0)\n",
    "bmatrix_negmask = np.where(bmatrix < 0, 1, 0)\n",
    "# copy lower triangle to upper for BIS viewer\n",
    "bmatrix_posNet = bmatrix_posmask + bmatrix_posmask.T - np.diag(np.diag(bmatrix_posmask))\n",
    "bmatrix_negNet = bmatrix_negmask + bmatrix_negmask.T - np.diag(np.diag(bmatrix_negmask))\n",
    "np.savetxt(os.path.join(home_dir,'data','network_csvfiles','YA_'+behav_outcome+'LASSONet_pos.csv'), bmatrix_posNet, delimiter=\",\")\n",
    "np.savetxt(os.path.join(home_dir,'data','network_csvfiles','YA_'+behav_outcome+'LASSONet_neg.csv'), bmatrix_negNet, delimiter=\",\")\n",
    "\n",
    "# compute network summary statistic from network\n",
    "pos_netmask = np.isin(bmatrix_posmask, 1) # mask of significant connections from SCAD network\n",
    "YA_SCAD_posmask = pos_netmask\n",
    "neg_netmask = np.isin(bmatrix_negmask, 1)\n",
    "YA_SCAD_negmask = neg_netmask\n",
    "SCADNet_possums = []\n",
    "SCADNet_negsums = []\n",
    "for subj in range(0, BNuniqya_nanrm.shape[2]):\n",
    "    subj_connmat = BNuniqya_nanrm[:,:,subj] # each subject's conn matrix\n",
    "    pos_sum = np.sum(BNuniqya_nanrm[:,:,subj][pos_netmask])\n",
    "    neg_sum = np.sum(BNuniqya_nanrm[:,:,subj][neg_netmask])\n",
    "    SCADNet_possums.append(pos_sum)\n",
    "    SCADNet_negsums.append(neg_sum)\n",
    "    \n",
    "# build model on TRAIN subs (YA)\n",
    "YA_fit_pos = np.polyfit(SCADNet_possums, y, 1)\n",
    "YA_fit_neg = np.polyfit(SCADNet_negsums, y, 1)\n",
    "# fit with both pos and neg edges\n",
    "X = np.array([SCADNet_possums,SCADNet_negsums])\n",
    "X = np.reshape(X, (X.shape), order='F').T\n",
    "YA_fit_both = LinearRegression(fit_intercept=True).fit(X,y)      \n",
    "\n",
    "YA_netdefda['NSSpos_LASSONet'] = SCADNet_possums\n",
    "print(scipy.stats.pearsonr(YA_netdefda['NSSpos_LASSONet'], YA_netdefda[behav_outcome]))\n",
    "sns.jointplot(data=YA_netdefda, x=\"NSSpos_LASSONet\", y=behav_outcome, color=\"red\", kind=\"reg\")\n",
    "plt.xlim(0, 30)\n",
    "plt.ylim(-3.5, 2.5)\n",
    "plt.show()\n",
    "YA_netdefda['NSSneg_LASSONet'] = SCADNet_negsums\n",
    "print(scipy.stats.pearsonr(YA_netdefda['NSSneg_LASSONet'], YA_netdefda[behav_outcome]))\n",
    "sns.jointplot(data=YA_netdefda, x=\"NSSneg_LASSONet\", y=behav_outcome, color=\"teal\", kind=\"reg\")\n",
    "plt.xlim(0, 30)\n",
    "plt.ylim(-3.5, 2.5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# visualize BIC to assess model fit in YA\n",
    "BICs = []\n",
    "# iterate over each lambda value from the model, compute BIC to determine best-fitting model\n",
    "for ii in range(len(SCADmodel.coef()['df'])):\n",
    "    y_true = YA_behav_nanrm # observed values\n",
    "    y_pred = SCADmodel.predict(lambdidx=ii) # values predicted by model at this lambda\n",
    "    n = len(YA_behav_nanrm) # sample size\n",
    "    #LL = np.sum(np.log(y_true*y_pred + (1-y_true)*(1-y_pred))) # bad log likelihood calculation\n",
    "    LL = -n/2 * (1 + np.log(np.mean((y_true - y_pred)**2))) # log likelihood from Ankit\n",
    "    nzf = SCADmodel.coef()['df'][ii] # number of nonzero features in the fitted model\n",
    "    \n",
    "    # BIC definition\n",
    "    BIC = -2*LL + np.log(n)*nzf\n",
    "    BICs.append(BIC)\n",
    "\n",
    "d = {'BIC':BICs,\n",
    "     '# nonzero features in model':SCADmodel.coef()['df'],\n",
    "     'model #':range(0,len(SCADmodel.coef()['df']))}\n",
    "df = pd.DataFrame(data=d)\n",
    "sns.scatterplot(data=df, x=\"# nonzero features in model\", y=\"BIC\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# visualize edges associated with postive and negative non-zero parameters for model with lowest BIC\n",
    "bestfit_lidx = np.argmin(BICs)\n",
    "#bestfit_lidx = np.argmax(SCADmodel.coef()['df'])\n",
    "beta_list = SCADmodel.coef()['beta'][bestfit_lidx]\n",
    "bmatrix = np.reshape(beta_list, BNuniqya_nanrm.shape[0:2])\n",
    "bmatrix_posmask = np.where(bmatrix > 0, 1, 0)\n",
    "bmatrix_negmask = np.where(bmatrix < 0, 1, 0)\n",
    "\n",
    "# copy lower triangle to upper for BIS viewer\n",
    "bmatrix_posNet = bmatrix_posmask + bmatrix_posmask.T - np.diag(np.diag(bmatrix_posmask))\n",
    "bmatrix_negNet = bmatrix_negmask + bmatrix_negmask.T - np.diag(np.diag(bmatrix_negmask))\n",
    "\n",
    "sns.heatmap(bmatrix_posNet,\n",
    "           #vmin=-1, vmax=1,\n",
    "           xticklabels=BN_labels, yticklabels=BN_labels,\n",
    "           annot=False, cmap=\"YlGnBu\")\n",
    "plt.xticks(rotation=45, ha='right', size=1)\n",
    "plt.yticks(size=1)\n",
    "plt.figure(num=None, figsize=(20,20), dpi=300, facecolor='w', edgecolor='k')\n",
    "\n",
    "# how many regions involved in this network?\n",
    "summat = np.sum(bmatrix_posNet, axis=0)\n",
    "num_nodes = len(summat[summat!=0])\n",
    "print(\"Positive network involves \"+str(num_nodes)+\" regions from Brainnetome atlas.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# predict behavior in OA using strength of YA LASSO network\n",
    "predbehav_pos = []\n",
    "predbehav_neg = []\n",
    "predbehav_both = []\n",
    "\n",
    "for subj in range(0, BNuniqoa_nanrm.shape[2]):\n",
    "    test_mat = BNuniqoa_nanrm[:,:,subj]\n",
    "    test_possum = np.sum(test_mat[YA_SCAD_posmask])/2\n",
    "    test_negsum = np.sum(test_mat[YA_SCAD_negmask])/2\n",
    "    \n",
    "    behav_pred_pos = YA_fit_pos[0]*test_possum + YA_fit_pos[1]\n",
    "    behav_pred_neg = YA_fit_neg[0]*test_negsum + YA_fit_neg[1]\n",
    "    behav_pred_both = YA_fit_both.coef_[0]*test_possum + YA_fit_both.coef_[1]*test_negsum + YA_fit_both.intercept_\n",
    "    \n",
    "    predbehav_pos.append(behav_pred_pos)\n",
    "    predbehav_neg.append(behav_pred_neg)\n",
    "    predbehav_both.append(behav_pred_both)\n",
    "    \n",
    "# compare predicted and observed behavior in OA\n",
    "unique_OAsubjda[behav_outcome+'_predfromYA_pos'] = predbehav_pos\n",
    "unique_OAsubjda[behav_outcome+'predfromYA_neg'] = predbehav_neg\n",
    "unique_OAsubjda[behav_outcome+'_predfromYA_both'] = predbehav_both\n",
    "\n",
    "print(scipy.stats.pearsonr(unique_OAsubjda[behav_outcome+'_predfromYA_pos'], unique_OAsubjda[behav_outcome]))\n",
    "sns.regplot(data=unique_OAsubjda, x=behav_outcome, y=behav_outcome+'_predfromYA_pos', color=\"blue\")\n",
    "#plt.xlim(-3, 1.5)\n",
    "#plt.ylim(60, 95)\n",
    "plt.show()\n",
    "\n",
    "print(scipy.stats.pearsonr(unique_OAsubjda[behav_outcome+'predfromYA_neg'], unique_OAsubjda[behav_outcome]))\n",
    "sns.regplot(data=unique_OAsubjda, x=behav_outcome, y=behav_outcome+'predfromYA_neg', color=\"orange\")\n",
    "#plt.xlim(-3, 1.5)\n",
    "#plt.ylim(60, 95)\n",
    "plt.show()\n",
    "\n",
    "print(scipy.stats.pearsonr(unique_OAsubjda[behav_outcome+'_predfromYA_both'], unique_OAsubjda[behav_outcome]))\n",
    "sns.regplot(data=unique_OAsubjda, x=behav_outcome, y=behav_outcome+'_predfromYA_both', color=\"black\")\n",
    "#plt.xlim(-2, 1.5)\n",
    "#plt.ylim(-2, 1.5)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# predict behavior in YA using strength of OA LASSO network\n",
    "NSSpos_OAsums = []\n",
    "NSSneg_OAsums = []\n",
    "\n",
    "predbehav_pos = []\n",
    "predbehav_neg = []\n",
    "predbehav_both = []\n",
    "\n",
    "for subj in range(0, BNuniqya_nanrm.shape[2]):\n",
    "    test_mat = BNuniqya_nanrm[:,:,subj]\n",
    "    test_possum = np.sum(test_mat[OA_SCAD_posmask])/2\n",
    "    test_negsum = np.sum(test_mat[OA_SCAD_negmask])/2\n",
    "    NSSpos_OAsums.append(test_possum)\n",
    "    NSSneg_OAsums.append(test_negsum)\n",
    "    \n",
    "    behav_pred_pos = OA_fit_pos[0]*test_possum + OA_fit_pos[1]\n",
    "    behav_pred_neg = OA_fit_neg[0]*test_negsum + OA_fit_neg[1]\n",
    "    behav_pred_both = OA_fit_both.coef_[0]*test_possum + OA_fit_both.coef_[1]*test_negsum + OA_fit_both.intercept_\n",
    "    \n",
    "    predbehav_pos.append(behav_pred_pos)\n",
    "    predbehav_neg.append(behav_pred_neg)\n",
    "    predbehav_both.append(behav_pred_both)\n",
    "\n",
    "# save overall strong of OA networks\n",
    "YA_netdefda['NSSpos_LASSONet_OA'] = NSSpos_OAsums\n",
    "YA_netdefda['NSSneg_LASSONet_OA'] = NSSneg_OAsums\n",
    "    \n",
    "# compare predicted and observed behavior in YA\n",
    "YA_netdefda[behav_outcome+'_predfromOA_pos'] = predbehav_pos\n",
    "YA_netdefda[behav_outcome+'_predfromOA_neg'] = predbehav_neg\n",
    "YA_netdefda[behav_outcome+'_predfromOA_both'] = predbehav_both\n",
    "\n",
    "print(scipy.stats.pearsonr(YA_netdefda[behav_outcome+'_predfromOA_pos'], YA_netdefda[behav_outcome]))\n",
    "sns.regplot(data=YA_netdefda, x=behav_outcome, y=behav_outcome+'_predfromOA_pos', color=\"blue\")\n",
    "#plt.xlim(-3, 1.5)\n",
    "#plt.ylim(60, 95)\n",
    "plt.show()\n",
    "\n",
    "print(scipy.stats.pearsonr(YA_netdefda[behav_outcome+'_predfromOA_neg'], YA_netdefda[behav_outcome]))\n",
    "sns.regplot(data=YA_netdefda, x=behav_outcome, y=behav_outcome+'_predfromOA_neg', color=\"orange\")\n",
    "#plt.xlim(-3, 1.5)\n",
    "#plt.ylim(60, 95)\n",
    "plt.show()\n",
    "\n",
    "print(scipy.stats.pearsonr(YA_netdefda[behav_outcome+'_predfromOA_both'], YA_netdefda[behav_outcome]))\n",
    "sns.regplot(data=YA_netdefda, x=behav_outcome, y=behav_outcome+'_predfromOA_both', color=\"black\")\n",
    "#plt.xlim(-2, 1.5)\n",
    "#plt.ylim(-2, 1.5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "34\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "4.566844919786096"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "array = np.random.randint(10, size = (34, 34))\n",
    "print(array.shape[0])\n",
    "tril_idx = np.tril_indices(34, k=-1)\n",
    "np.mean(array[tril_idx])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
